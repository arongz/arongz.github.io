<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>奥奇</title>
        <subtitle>“任何技术和语言，都只是工具，工具的唯一目的就是把东西做出来，不要因为熟练使用某个工具而沾沾自喜，躲在舒适圈不出来。”</subtitle>
        <icon>https://www.oocii.com/images/favicon.ico</icon>
        <link>https://www.oocii.com</link>
        <author>
          <name>Az</name>
        </author>
        <description>“任何技术和语言，都只是工具，工具的唯一目的就是把东西做出来，不要因为熟练使用某个工具而沾沾自喜，躲在舒适圈不出来。”</description>
        <language>zh-CN</language>
        <pubDate>Fri, 21 Jan 2022 18:45:26 +0800</pubDate>
        <lastBuildDate>Fri, 21 Jan 2022 18:45:26 +0800</lastBuildDate>
        <category term="FE" />
        <category term=" 寺木" />
        <category term=" 奥奇" />
        <category term=" oocii" />
        <category term=" Blog" />
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/DOM%20Node%20%E5%92%8C%20Element%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</guid>
            <title>DOM Node 和 Element 有什么区别？</title>
            <link>https://www.oocii.com/yuque/DOM%20Node%20%E5%92%8C%20Element%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</link>
            <category term="DOM" scheme="https://www.oocii.com/categories/DOM/" />
            <category term="dom" scheme="https://www.oocii.com/tags/dom/" />
            <category term="node" scheme="https://www.oocii.com/tags/node/" />
            <category term="element" scheme="https://www.oocii.com/tags/element/" />
            <pubDate>Fri, 21 Jan 2022 18:45:26 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;文档对象模型 (DOM) 是将 HTML 或 XML 文档视为树结构的接口，其中每个节点都是文档的一个对象。DOM 还提供了一组方法来查询树、改变结构、样式。&lt;br /&gt;
DOM 还使用术语&lt;em&gt; element&lt;/em&gt; : 与节点非常相似。那么，DOM 节点和元素有什么区别呢？&lt;/p&gt;
&lt;h2 id=&#34;1dom-node-节点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1dom-node-节点&#34;&gt;#&lt;/a&gt; 1.DOM Node 节点&lt;/h2&gt;
&lt;p&gt;理解节点和元素之间区别的关键是理解节点是什么。&lt;br /&gt;
从更高的角度来看，DOM 文档由节点的层次结构组成。每个节点可以有一个父节点和 / 或子节点。&lt;br /&gt;
我们看一下下面的 HTML 文档：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- Page Body --&amp;gt;
    &amp;lt;h2&amp;gt;My Page&amp;lt;/h2&amp;gt;
    &amp;lt;p id=&amp;quot;content&amp;quot;&amp;gt;Thank you for visiting my web page!&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;该文档包含以下节点层次结构：&lt;br /&gt;
&lt;a href=&#34;https://dmitripavlutin.com/static/75f1711be6313112e996905bd49c9951/0df09/dom-nodes.png&#34;&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1642761948285-3b3a1a54-2514-44c5-adb7-1b283fa57384.png#clientId=ued827b68-2f58-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=uc785e15b&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=303&amp;amp;originWidth=560&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub282eaed-ec01-48be-a2f0-32261739c0e&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;html&amp;gt; 是文档树中的一个节点。它有 2 个子节点：&amp;lt;head &amp;gt; 和 &amp;lt; body &amp;gt; 节点。&lt;br /&gt;
&amp;lt;body&amp;gt; 也是一个具有 3 个子节点的节点：评论 &amp;lt;!-- Page Body --&amp;gt;、标题 &amp;lt; h2 &amp;gt; 和段落 &amp;lt; p&amp;gt;。&amp;lt;body &amp;gt; 节点的父节点是 &amp;lt; html &amp;gt; 节点。&lt;br /&gt;
HTML 文档中的标签代表一个节点，有趣的是常规文本也是一个节点。段落节点 &amp;lt;p&amp;gt; 有 1 个子节点：文本节点 &amp;quot;Thank you for visiting my web page!&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;12-节点类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-节点类型&#34;&gt;#&lt;/a&gt; 1.2 节点类型&lt;/h3&gt;
&lt;p&gt;如何区分这些不同类型的节点？答案在于 DOM &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL05vZGU=&#34;&gt;Node&lt;/span&gt; 接口，尤其是 Node.nodeType 属性。&lt;br /&gt;
Node.nodeType 可以具有以下表示节点类型的值之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.ELEMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.ATTRIBUTE_NODE&lt;/li&gt;
&lt;li&gt;Node.TEXT_NODE&lt;/li&gt;
&lt;li&gt;Node.CDATA_SECTION_NODE&lt;/li&gt;
&lt;li&gt;Node.PROCESSING_INSTRUCTION_NODE&lt;/li&gt;
&lt;li&gt;Node.COMMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.DOCUMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.DOCUMENT_TYPE_NODE&lt;/li&gt;
&lt;li&gt;Node.DOCUMENT_FRAGMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.NOTATION_NODE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常量有意义地指示节点类型：例如 Node.ELEMENT_NODE 表示元素节点、Node.TEXT_NODE 表示文本节点、Node.DOCUMENT_NODE 文档节点等。&lt;br /&gt;
例如，让我们选择段落节点，并查看其 nodeType 属性：&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
paragraph.nodeType === Node.ELEMENT_NODE; // =&amp;gt; true&lt;br /&gt;
 正如预期 paragraph.nodeType 的那样，有值 Node.ELEMENT_NODE，表明该段落是一个元素。&lt;br /&gt;
该段落还包含一个文本节点：&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
const firstChild = paragraph.childNodes[0];&lt;br /&gt;
firstChild.nodeType === Node.TEXT_NODE; // =&amp;gt; true&lt;br /&gt;
 有一个节点类型表示整个节点的文档树 - Node.DOCUMENT_NODE：&lt;br /&gt;
document.nodeType === Node.DOCUMENT_NODE; // =&amp;gt; true&lt;/p&gt;
&lt;h2 id=&#34;2dom-element-元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2dom-element-元素&#34;&gt;#&lt;/a&gt; 2.DOM Element 元素&lt;/h2&gt;
&lt;p&gt;了解 DOM 节点是什么之后，现在就是区分 DOM 节点和元素的时候了。&lt;br /&gt;
如果你理解了&lt;em&gt;节点&lt;/em&gt;术语，那么答案就很明显了：元素是特定类型的节点 —— 元素 (Node.ELEMENT_NODE)。以及文档、评论、文本等类型。&lt;br /&gt;
简单来说，元素是使用 HTML 文档中的标记编写的节点。&amp;lt;html&amp;gt;, &amp;lt;head&amp;gt;, &amp;lt;title&amp;gt;, &amp;lt;body&amp;gt;, &amp;lt;h2&amp;gt;,&amp;lt;p &amp;gt; 都是元素，因为它们是由标签表示的。&lt;br /&gt;
文档类型、注释、文本节点不是元素，因为它们不是用标签编写的：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- Page Body --&amp;gt;
    &amp;lt;p&amp;gt;Thank you for visiting my web page!&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Node 是节点 HTMLElement 的构造函数，是 JavaScript DOM 中元素的构造函数。一个段落，是一个节点，并且还一个元素，既是的一个实例 Node 和 HTMLElement：&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
paragraph instanceof Node; // =&amp;gt; true&lt;br /&gt;
paragraph instanceof HTMLElement; // =&amp;gt; true&lt;br /&gt;
 简单地说，元素是节点的子类型，就像猫是动物的子类型一样。&lt;/p&gt;
&lt;h2 id=&#34;3dom-属性节点和元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3dom-属性节点和元素&#34;&gt;#&lt;/a&gt; 3.DOM 属性：节点和元素&lt;/h2&gt;
&lt;p&gt;除了区分节点和元素之外，您还需要区分仅包含节点或仅包含元素的 DOM 属性。&lt;br /&gt;
以下 Node 类型的属性计算为一个节点或节点集合 (NodeList)：&lt;br /&gt;
node.parentNode; // Node or null&lt;br /&gt;
node.firstChild; // Node or null&lt;br /&gt;
node.lastChild; // Node or null&lt;br /&gt;
node.childNodes; // NodeList&lt;br /&gt;
 但是，以下属性是元素或元素集合 (HTMLCollection)：&lt;br /&gt;
node.parentElement; // HTMLElement or null&lt;br /&gt;
node.children; // HTMLCollection&lt;br /&gt;
 既然两者都 node.childNodes 返回 node.children 一个子列表，为什么这两个属性都有呢？好问题！&lt;br /&gt;
考虑以下包含一些文本的段落元素：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;p&amp;gt;
  &amp;lt;b&amp;gt;Thank you&amp;lt;/b&amp;gt; for visiting my web page!
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qc2l0b3IuY29tLzNtUHdvU1ZiWWg=&#34;&gt; demo&lt;/span&gt;，然后查看 parapgraph 节点的 childNodes 和属性：children&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
paragraph.childNodes; // NodeList: [HTMLElement, Text]&lt;br /&gt;
paragraph.children; // HTMLCollection: [HTMLElement]&lt;br /&gt;
 paragraph.childNodes 集合包含 2 个节点：&lt;br /&gt;
粗体元素 &amp;lt;b&amp;gt;Thank you&amp;lt;/b&amp;gt;，以及文本节点 for visiting my web page!。&lt;br /&gt;
但是，paragraph.children 集合仅包含一项：粗体元素 &amp;lt;b&amp;gt;Thank you&amp;lt;/b&amp;gt;。&lt;br /&gt;
因为 paragraph.children 只包含元素，所以这里没有包含文本节点，因为它的类型是文本 (Node.TEXT_NODE)，而不是元素 ( Node.ELEMENT_NODE)。&lt;br /&gt;
同时拥有 node.childNodes 并 node.children 让您选择要访问的子节点的集合：所有子节点或只有子节点是元素。&lt;/p&gt;
&lt;h2 id=&#34;4总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4总结&#34;&gt;#&lt;/a&gt; 4. 总结&lt;/h2&gt;
&lt;p&gt;DOM 文档是节点的分层集合。每个节点可以有一个父节点和 / 或子节点。&lt;br /&gt;
如果您了解节点是什么，就很容易理解 DOM 节点和元素之间的区别。&lt;br /&gt;
节点有类型，元素类型就是其中之一。该元素由 HTML 文档中的标记表示。&lt;br /&gt;
&lt;em&gt;​&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;测验：什么类型的节点永远没有父节点？&lt;/em&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Date/</guid>
            <title>Date</title>
            <link>https://www.oocii.com/yuque/Date/</link>
            <category term="JavaScript" scheme="https://www.oocii.com/categories/JavaScript/" />
            <category term="Standard built-in objects" scheme="https://www.oocii.com/categories/JavaScript/Standard-built-in-objects/" />
            <category term="Date" scheme="https://www.oocii.com/categories/JavaScript/Standard-built-in-objects/Date/" />
            <category term="Javascript" scheme="https://www.oocii.com/tags/Javascript/" />
            <category term="JS" scheme="https://www.oocii.com/tags/JS/" />
            <category term="ES" scheme="https://www.oocii.com/tags/ES/" />
            <category term="date" scheme="https://www.oocii.com/tags/date/" />
            <category term="timestamp" scheme="https://www.oocii.com/tags/timestamp/" />
            <pubDate>Mon, 10 Jan 2022 14:32:30 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法：&lt;/h2&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dateString&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; monthIndex [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; day [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; hours [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; minutes [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; seconds [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; milliseconds]]]]]&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZSMlRTUlOEYlODIlRTYlOTUlQjA=&#34;&gt;参数&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Date()&lt;/strong&gt; 构造函数有四种基本形式&lt;/p&gt;
&lt;h4 id=&#34;1-没有参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-没有参数&#34;&gt;#&lt;/a&gt; 1. 没有参数&lt;/h4&gt;
&lt;p&gt;如果没有提供参数，那么新创建的 Date 对象表示实例化时刻的日期和时间。&lt;/p&gt;
&lt;h4 id=&#34;2-unix-时间戳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-unix-时间戳&#34;&gt;#&lt;/a&gt; 2. Unix 时间戳&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;value&lt;/strong&gt;&lt;br /&gt;
 一个 Unix 时间戳（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wdWJzLm9wZW5ncm91cC5vcmcvb25saW5lcHVicy85Njk5OTE5Nzk5L2Jhc2VkZWZzL1YxX2NoYXAwNC5odG1sI3RhZ18wNF8xNg==&#34;&gt;Unix Time Stamp&lt;/span&gt;），它是一个整数值，表示自 1970 年 1 月 1 日 00:00:00 UTC（the Unix epoch）以来的毫秒数，忽略了闰秒。请注意大多数 Unix 时间戳功能仅精确到最接近的秒。&lt;/p&gt;
&lt;h4 id=&#34;3-时间戳字符串&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-时间戳字符串&#34;&gt;#&lt;/a&gt; 3. 时间戳字符串&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;dateString&lt;/strong&gt;&lt;br /&gt;
 表示日期的字符串值。该字符串应该能被 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS9wYXJzZQ==&#34;&gt;Date.parse()&lt;/span&gt; 正确方法识别（即符合 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI4MjIjcGFnZS0xNA==&#34;&gt;IETF-compliant RFC 2822 timestamps&lt;/span&gt; 或 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi81LjEvI3NlYy0xNS45LjEuMTU=&#34;&gt;version of ISO8601&lt;/span&gt;）。&lt;br /&gt;
&lt;strong&gt;注意:&lt;/strong&gt; 由于浏览器之间的差异与不一致性，强烈不推荐使用 Date 构造函数来解析日期字符串 (或使用与其等价的 Date.parse)。对 RFC 2822 格式的日期仅有约定俗成的支持。 对 ISO 8601 格式的支持中，仅有日期的串 (例如 &amp;quot;1970-01-01&amp;quot;) 会被处理为 UTC 而不是本地时间，与其他格式的串的处理不同。&lt;br /&gt;
** 如下：同一操作系统不同浏览器对字符串的解析都有所差异：**&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Chrome&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021-1-16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 00:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021-01-16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 08:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;FireFox&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021/1/16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 00:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021/01/16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 00:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//.replace (&#39;-&#39;, &#39;/&#39;) 防止各浏览器差异 2021-1-16 解析成 UTC,GMT 的坑&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstTime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\-&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endTime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\-&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//iOS 某些系统版本的坑，以上两行 replace 不能直接放在以下 new Date () 里面&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; firstTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstTime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; endTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endTime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;4-分别提供日期与时间的每一个成员&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-分别提供日期与时间的每一个成员&#34;&gt;#&lt;/a&gt; 4. 分别提供日期与时间的每一个成员&lt;/h3&gt;
&lt;p&gt;当至少提供了年份与月份时，这一形式的 Date () 返回的 Date 对象中的每一个成员都来自下列参数。没有提供的成员将使用最小可能值（对日期为 1，其他为 0）。&lt;br /&gt;
&lt;strong&gt;year&lt;/strong&gt;&lt;br /&gt;
 表示年份的整数值。 0 到 99 会被映射至 1900 年至 1999 年，其它值代表实际年份。参见 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZSN0d29fZGlnaXRfeWVhcnNfbWFwX3RvXzE5MDBfLV8xOTk5&#34;&gt;示例&lt;/span&gt;。&lt;br /&gt;
&lt;strong&gt;monthIndex (年月日中这个值比较特别)&lt;/strong&gt;&lt;br /&gt;
 表示月份的整数值，从 0（1 月）到 11（12 月）。&lt;br /&gt;
&lt;strong&gt;date 可选&lt;/strong&gt;&lt;br /&gt;
表示一个月中的第几天的整数值，从 1 开始。默认值为 1。&lt;br /&gt;
&lt;strong&gt;hours 可选&lt;/strong&gt;&lt;br /&gt;
表示一天中的小时数的整数值 (24 小时制)。默认值为 0（午夜）。&lt;br /&gt;
&lt;strong&gt;minutes 可选&lt;/strong&gt;&lt;br /&gt;
表示一个完整时间（如 01:10:00）中的分钟部分的整数值。默认值为 0。&lt;br /&gt;
&lt;strong&gt;seconds 可选&lt;/strong&gt;&lt;br /&gt;
表示一个完整时间（如 01:10:00）中的秒部分的整数值。默认值为 0。&lt;br /&gt;
&lt;strong&gt;milliseconds 可选&lt;/strong&gt;&lt;br /&gt;
表示一个完整时间的毫秒部分的整数值。默认值为 0。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;一些比较有用的技巧或坑点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;strong&gt;date&lt;/strong&gt; 参数设置为 0 可得到上个月的最后一天，在做日历的时候非常有用.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// new Date(2022, 1, 1) // 2022/2/1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 2022/1/31&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;n&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;getPrevMonthLastDays&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;date&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; amount&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;amount &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; tempDate &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setDate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; year &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getFullYear&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; month &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMonth&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; lastDay &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getDate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;amount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    year&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    month&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    date&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; lastDay &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;amount &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; index &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;em&gt;调用 Date 对象的 set 方法（&lt;/em&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS9zZXREYXRl&#34;&gt;setDate()&lt;/span&gt;&lt;em&gt;，&lt;/em&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS9zZXRGdWxsWWVhcg==&#34;&gt;setFullYear()&lt;/span&gt;_...）返回时间戳数字 如： _177610530000&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/tag2/</guid>
            <title>tag2.</title>
            <link>https://www.oocii.com/yuque/tag2/</link>
            <category term="testtag" scheme="https://www.oocii.com/categories/testtag/" />
            <category term="tags1" scheme="https://www.oocii.com/tags/tags1/" />
            <category term="tags2" scheme="https://www.oocii.com/tags/tags2/" />
            <pubDate>Thu, 06 Jan 2022 19:04:58 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;gxvxcvxcvxcvx&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Tags..9/</guid>
            <title>Tags..9</title>
            <link>https://www.oocii.com/yuque/Tags..9/</link>
            <category term="img" scheme="https://www.oocii.com/tags/img/" />
            <pubDate>Thu, 06 Jan 2022 18:24:25 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a href=&#34;https://tva4.sinaimg.cn/large/7e4d62c9ly8gy6ebeudnqj219b0u0mzp.jpg&#34;&gt;&lt;br /&gt;
&lt;/a&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/7e4d62c9ly8gy6ebeudnqj219b0u0mzp.jpg#crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;id=sbikx&amp;amp;originHeight=1080&amp;amp;originWidth=1631&amp;amp;originalType=binary%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;some description&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;more detail&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/JavaScript/</guid>
            <title>JavaScript</title>
            <link>https://www.oocii.com/yuque/JavaScript/</link>
            <category term="JavaScript" scheme="https://www.oocii.com/categories/JavaScript/" />
            <category term="Javascript" scheme="https://www.oocii.com/tags/Javascript/" />
            <category term="JS" scheme="https://www.oocii.com/tags/JS/" />
            <category term="ES" scheme="https://www.oocii.com/tags/ES/" />
            <pubDate>Wed, 05 Jan 2022 11:18:49 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/CSS_display_%E5%B1%9E%E6%80%A7%E5%80%BC%E5%88%86%E7%B1%BB/</guid>
            <title>CSS_display_属性值分类</title>
            <link>https://www.oocii.com/yuque/CSS_display_%E5%B1%9E%E6%80%A7%E5%80%BC%E5%88%86%E7%B1%BB/</link>
            <category term="CSS" scheme="https://www.oocii.com/categories/CSS/" />
            <category term="CSS" scheme="https://www.oocii.com/tags/CSS/" />
            <pubDate>Tue, 04 Jan 2022 20:15:39 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;display&lt;/strong&gt; 属性可以设置元素的内部和外部显示类型 &lt;em&gt;display types&lt;/em&gt;。元素的外部显示类型 &lt;em&gt;outer display types&lt;/em&gt; 将决定该元素在流式布局中的表现（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19GbG93X0xheW91dA==&#34;&gt;块级或内联元素&lt;/span&gt;）；元素的内部显示类型 &lt;em&gt;inner display types&lt;/em&gt; 可以控制其子元素的布局（例如：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19GbG93X0xheW91dA==&#34;&gt;flow layout&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19HcmlkX0xheW91dA==&#34;&gt;grid&lt;/span&gt; 或 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19GbGV4aWJsZV9Cb3hfTGF5b3V0&#34;&gt;flex&lt;/span&gt;）。&lt;br /&gt;
在 &lt;strong&gt;CSS 规范&lt;/strong&gt;（特指 CSS Level 1/2/3 规范）中查阅 &lt;strong&gt;display&lt;/strong&gt; 属性的所有取值时需要注意：个别取值的详细信息记录在独立的规范中。 例如，display: flex 的详细信息在 &lt;em&gt;CSS Flexible Box Model&lt;/em&gt; 规范中记录。可以在本文档末尾的表格中查看所有有关的规范。&lt;/p&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;p&gt;display 属性使用关键字取值来指定，关键字取值被分为六类：&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; [ &amp;lt;display-outside&gt; | &amp;lt;display-inside&gt; ] | &amp;lt;display-listitem&gt; |&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &amp;lt;display-internal&gt; | &amp;lt;display-box&gt; | &amp;lt;display-legacy&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;outside&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#outside&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjb3V0c2lkZQ==&#34;&gt;Outside&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktb3V0c2lkZQ==&#34;&gt;&amp;lt;display-outside&amp;gt;&lt;/span&gt;&lt;br /&gt;
 这些关键字指定了元素的外部显示类型，实际上就是其在流式布局中的角色（即在流式布局中的表现）。&lt;br /&gt;
&#39;page(&amp;quot;/zh-CN/docs/Web/CSS/display-outside&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;br /&gt;
&lt;strong&gt;&amp;lt;display-outside&amp;gt; 的可用值：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;block&lt;/strong&gt;&lt;br /&gt;
 这个值会生成一个块级元素盒子，同时在该元素之前和之后打断（换行）。简单来说就是，这个值会将该元素变成&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9CbG9jay1sZXZlbF9lbGVtZW50cw==&#34;&gt;块级元素&lt;/span&gt;。&lt;br /&gt;
&lt;strong&gt;inline&lt;/strong&gt;&lt;br /&gt;
 这个值会生成一个行内元素盒子，该元素之前和之后不会打断（换行）。如果空间充足，该元素后的元素将会在同一行显示。简单来说就是，这个值会将该元素变成&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9JbmxpbmVfZWxlbWVudHM=&#34;&gt;行内元素&lt;/span&gt;。&lt;br /&gt;
**run-in **&lt;br /&gt;
 这个值生成一个 run-in 盒子。如果其后的兄弟元素是块级盒子，那么这个 run-in 盒子就会以兄弟元素的第一个行内元素盒子的形式存在；如果其后的兄弟元素是行内元素，那么这个 run-in 盒子会变成块级元素。&lt;br /&gt;
run-in 元素的存在形式取决于相邻的元素，如果它的内部存在 block box，那么它会变成块级元素盒子。&lt;/p&gt;
&lt;h3 id=&#34;inside&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inside&#34;&gt;#&lt;/a&gt; Inside&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXktaW5zaWRl&#34;&gt;&amp;lt;display-inside&amp;gt;(en-US)&lt;/span&gt;&lt;br /&gt;
 这些关键字指定了元素的内部显示类型，它们定义了该元素内部内容的布局方式（假定该元素为非替换元素 non-replaced element）。&lt;br /&gt;
&#39;page(&amp;quot;/zh-CN/docs/Web/CSS/display-inside&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;br /&gt;
&lt;strong&gt;&amp;lt;display-inside&amp;gt; 的可用值：&lt;/strong&gt;&lt;br /&gt;
**flow **&lt;br /&gt;
 该元素使用流布局（块和内联布局）来布置其内容。&lt;br /&gt;
如果它的外部显示类型是 inline 或 run-in，并且它正在参与块或内联格式上下文，那么它会生成一个内联框。否则它会生成一个块容器框。&lt;br /&gt;
根据其他属性（例如&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Bvc2l0aW9u&#34;&gt; position&lt;/span&gt;、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Zsb2F0&#34;&gt;float&lt;/span&gt;、 或&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL292ZXJmbG93&#34;&gt; overflow&lt;/span&gt;）的值以及它本身是否参与块或内联格式化上下文，它要么为其内容建立新的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvR3VpZGUvQ1NTL0Jsb2NrX2Zvcm1hdHRpbmdfY29udGV4dA==&#34;&gt;块格式化上下文&lt;/span&gt; (BFC)，要么将其内容集成到其父格式化中语境。&lt;br /&gt;
&lt;strong&gt;flow-root&lt;/strong&gt;&lt;br /&gt;
 该元素生成一个块元素框，它建立一个新的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvR3VpZGUvQ1NTL0Jsb2NrX2Zvcm1hdHRpbmdfY29udGV4dA==&#34;&gt;块格式上下文&lt;/span&gt;，定义格式根所在的位置。&lt;br /&gt;
&lt;strong&gt;table&lt;/strong&gt;&lt;br /&gt;
 这些元素的行为类似于 HTML&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3RhYmxl&#34;&gt;&amp;lt;table&amp;gt;&lt;/span&gt; 元素。它定义了一个块级框。&lt;br /&gt;
&lt;strong&gt;flex&lt;/strong&gt;&lt;br /&gt;
 该元素的行为类似于块元素，并根据&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NTU19GbGV4aWJsZV9Cb3hfTGF5b3V0&#34;&gt; flexbox 模型布置&lt;/span&gt;其内容。&lt;br /&gt;
&lt;strong&gt;grid&lt;/strong&gt;&lt;br /&gt;
 该元素的行为类似于块元素，并根据&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NTU19HcmlkX0xheW91dC9CYXNpY19Db25jZXB0c19vZl9HcmlkX0xheW91dA==&#34;&gt;网格模型&lt;/span&gt;布置其内容。&lt;br /&gt;
**ruby **&lt;br /&gt;
 该元素的行为类似于内联元素，并根据 ruby 格式模型布置其内容。它的行为类似于相应的 HTML&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3J1Ynk=&#34;&gt;&amp;lt;ruby&amp;gt;&lt;/span&gt; 元素。&lt;/p&gt;
&lt;h3 id=&#34;list-item&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#list-item&#34;&gt;#&lt;/a&gt; List Item&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXktbGlzdGl0ZW0=&#34;&gt;&amp;lt;display-listitem&amp;gt;(en-US)&lt;/span&gt;&lt;br /&gt;
 将这个元素的外部显示类型变为 block 盒，并将内部显示类型变为多个 list-item inline 盒。&lt;br /&gt;
&#39;page(&amp;quot;/zh-CN/docs/Web/CSS/display-listitem&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;/p&gt;
&lt;h3 id=&#34;internal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#internal&#34;&gt;#&lt;/a&gt; Internal&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktaW50ZXJuYWw=&#34;&gt;&amp;lt;display-internal&amp;gt;&lt;/span&gt;&lt;br /&gt;
 有些布局模型（如 table 和 ruby）有着复杂的内部结构，因此它们的子元素可能扮演着不同的角色。这一类关键字就是用来定义这些 “内部” 显示类型，并且只有在这些特定的布局模型中才有意义。&lt;br /&gt;
Valid &amp;lt;display-internal&amp;gt; values:&lt;br /&gt;
&lt;strong&gt;table-row-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Rib2R5&#34;&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-header-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3RoZWFk&#34;&gt;&amp;lt;thead&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-footer-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Rmb290&#34;&gt;&amp;lt;tfoot&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-row&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Ry&#34;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-cell&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Rk&#34;&gt;&amp;lt;td&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-column-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2NvbGdyb3Vw&#34;&gt;&amp;lt;colgroup&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-column&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2NvbA==&#34;&gt;&amp;lt;col&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-caption&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2NhcHRpb24=&#34;&gt;&amp;lt;caption&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
**ruby-base **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Ji&#34;&gt;&amp;lt;rb&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
**ruby-text **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3J0&#34;&gt;&amp;lt;rt&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
**ruby-base-container **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3JiYw==&#34;&gt;&amp;lt;rbc&amp;gt;&lt;/span&gt; HTML elements generated as anonymous boxes.&lt;br /&gt;
**ruby-text-container **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3J0Yw==&#34;&gt;&amp;lt;rtc&amp;gt;&lt;/span&gt; HTML elements.&lt;/p&gt;
&lt;h3 id=&#34;box&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#box&#34;&gt;#&lt;/a&gt; Box&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktYm94&#34;&gt;&amp;lt;display-box&amp;gt;&lt;/span&gt;&lt;br /&gt;
 这些值决定元素是否使用盒模型。&lt;br /&gt;
Valid &amp;lt;display-box&amp;gt; values:&lt;br /&gt;
&lt;strong&gt;contents&lt;/strong&gt;&lt;br /&gt;
These elements don&#39;t produce a specific box by themselves. They are replaced by their pseudo-box and their child boxes. Please note that the CSS Display Level 3 spec defines how the contents value should affect &amp;quot;unusual elements&amp;quot; — elements that aren’t rendered purely by CSS box concepts such as replaced elements. See &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1kaXNwbGF5LyN1bmJveA==&#34;&gt;Appendix B: Effects of display: contents on Unusual Elements&lt;/span&gt; for more details.&lt;br /&gt;
&lt;em&gt;Due to a bug in browsers this will currently remove the element from the accessibility tree — screen readers will not look at what&#39;s inside. See the &lt;em&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjYWNjZXNzaWJpbGl0eV9jb25jZXJucw==&#34;&gt;Accessibility concerns&lt;/span&gt;&lt;/em&gt; section below for more details.&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;none&lt;/strong&gt;&lt;br /&gt;
Turns off the display of an element so that it has no effect on layout (the document is rendered as though the element did not exist). All descendant elements also have their display turned off. To have an element take up the space that it would normally take, but without actually rendering anything, use the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Zpc2liaWxpdHk=&#34;&gt;visibility&lt;/span&gt; property instead.&lt;/p&gt;
&lt;h3 id=&#34;legacy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#legacy&#34;&gt;#&lt;/a&gt; Legacy&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktbGVnYWN5&#34;&gt;&amp;lt;display-legacy&amp;gt;&lt;/span&gt;&lt;br /&gt;
CSS 2 对于 &lt;strong&gt;display&lt;/strong&gt; 属性使用单关键字语法，对于相同布局模式的 block 级和 inline 级变体需要使用单独的关键字。&lt;br /&gt;
&#39;page(&amp;quot;/en-US /docs/Web/CSS/display-legacy&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;/p&gt;
&lt;h3 id=&#34;是否该继续使用-legacy-取值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#是否该继续使用-legacy-取值&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjJUU2JTk4JUFGJUU1JTkwJUE2JUU4JUFGJUE1JUU3JUJCJUE3JUU3JUJCJUFEJUU0JUJEJUJGJUU3JTk0JUE4X2xlZ2FjeV8lRTUlOEYlOTYlRTUlODAlQkMlRUYlQkMlOUY=&#34;&gt;是否该继续使用 Legacy 取值？&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;CSS Level 3 规范详细说明了 display 属性的两类取值 —— 显式地指定了外部和内部显示属性的规范 —— 但是还没有被浏览器广泛支持。&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktbGVnYWN5&#34;&gt;&amp;lt;display-legacy&amp;gt;&lt;/span&gt; 方法允许使用单个关键字达到相同效果，开发者应该在双关键字取值被广泛支持之前采用这个方法。举例来说，你可以这样指定 inline flex 容器：&lt;br /&gt;
.container { display: inline-flex; }&lt;br /&gt;
Copy to Clipboard&lt;br /&gt;
 也可以用两个关键字来指定。&lt;br /&gt;
Copy to Clipboard&lt;br /&gt;
.container { display: inline flex; }&lt;br /&gt;
 有关规范变更的更多信息，查阅文章 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXkvdHdvLXZhbHVlX3N5bnRheF9vZl9kaXNwbGF5&#34;&gt;Adapting to the new two-value syntax of display (en-US)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;全局设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局设置&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjJUU1JTg1JUE4JUU1JUIxJTgwJUU4JUFFJUJFJUU3JUJEJUFF&#34;&gt;全局设置&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;/_ Global values _/ display: inherit; display: initial; display: unset;&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/default/%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87%20Block%20formatting%20context(BFC)/</guid>
            <title>块格式化上下文 Block formatting context(BFC)</title>
            <link>https://www.oocii.com/default/%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87%20Block%20formatting%20context(BFC)/</link>
            <category term="CSS" scheme="https://www.oocii.com/categories/CSS/" />
            <category term="formatting context" scheme="https://www.oocii.com/categories/CSS/formatting-context/" />
            <category term="CSS" scheme="https://www.oocii.com/tags/CSS/" />
            <category term="BFC" scheme="https://www.oocii.com/tags/BFC/" />
            <pubDate>Thu, 30 Dec 2021 15:03:01 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;block formatting contexts&lt;/strong&gt; 是 &lt;strong&gt;formatting contexts&lt;/strong&gt; 格式化上下文的概念之一，&lt;strong&gt;formatting contexts&lt;/strong&gt; 其中有几种类型，包括块格式化上下文 block formatting contexts、内联格式化上下文 inline formatting contexts 和灵活格式化上下文 flex formatting contexts。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;块格式化上下文（Block formatting context，BFC）&lt;/strong&gt; 是 Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;文档最外层元素使用块布局规则或称为&lt;strong&gt;初始块格式上下文&lt;/strong&gt;。这意味着 &amp;lt;html&amp;gt; 元素块中的每个元素都是按照正常流程遵循块和内联布局规则进行布局的。参与 BFC 的元素使用 CSS 框模型概述的规则，该模型定义了元素的边距、边框和填充如何与同一上下文中的其他块交互。&lt;/p&gt;
&lt;h3 id=&#34;创建新的块格式上下文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建新的块格式上下文&#34;&gt;#&lt;/a&gt; 创建新的块格式上下文&lt;/h3&gt;
&lt;p&gt;&amp;lt;html&amp;gt; 元素不是唯一能够创建块格式上下文的元素。默认为块布局的任何元素也会为其后代元素创建块格式上下文。此外，还有一些 CSS 属性可以使元素创建一个 BFC，即使默认情况下它不这样做。&lt;br /&gt;
以下方式会创建&lt;strong&gt;块格式化上下文&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根元素（&amp;lt;html&amp;gt;）&lt;/li&gt;
&lt;li&gt;浮动元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Zsb2F0&#34;&gt;float&lt;/span&gt; 不是 none）&lt;/li&gt;
&lt;li&gt;绝对定位元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL3Bvc2l0aW9u&#34;&gt;position&lt;/span&gt; 为 absolute 或 fixed）&lt;/li&gt;
&lt;li&gt;行内块元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 inline-block）&lt;/li&gt;
&lt;li&gt;表格单元格（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 table-cell，HTML 表格单元格默认为该值）&lt;/li&gt;
&lt;li&gt;表格标题（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 table-caption，HTML 表格标题默认为该值）&lt;/li&gt;
&lt;li&gt;匿名表格单元格元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL292ZXJmbG93&#34;&gt;overflow&lt;/span&gt; 计算值 (Computed) 不为 visible 的块元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 值为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1kaXNwbGF5LyN2YWxkZWYtZGlzcGxheS1mbG93LXJvb3Q=&#34;&gt;flow-root&lt;/span&gt; 的元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2NvbnRhaW4=&#34;&gt;contain&lt;/span&gt; 值为 layout、content 或 paint 的元素&lt;/li&gt;
&lt;li&gt;弹性元素（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 flex 或 inline-flex 元素的直接子元素）&lt;/li&gt;
&lt;li&gt;网格元素（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 grid 或 inline-grid 元素的直接子元素）&lt;/li&gt;
&lt;li&gt;多列容器（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2NvbHVtbi1jb3VudA==&#34;&gt;column-count&lt;/span&gt; 或 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2NvbHVtbi13aWR0aA==&#34;&gt;column-width(en-US)&lt;/span&gt; 不为 auto，包括 column-count 为 1）&lt;/li&gt;
&lt;li&gt;column-span 为 all 的元素始终会创建一个新的 BFC，即使该元素没有包裹在一个多列容器中（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3czYy9jc3N3Zy1kcmFmdHMvY29tbWl0L2E4NjM0Yjk2OTAwMjc5OTE2YmQ2YzUwNWZkYTg4ZGRhNzFkOGVjNTE=&#34;&gt;标准变更&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NzA5MzYy&#34;&gt;Chrome bug&lt;/span&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bfc-创建例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bfc-创建例子&#34;&gt;#&lt;/a&gt; BFC 创建例子&lt;/h3&gt;
&lt;p&gt;让我们看看几个例子，来理解创建 BFC 的效果。&lt;br /&gt;
在下面的示例中，我们在应用了边框的 &amp;lt;div&amp;gt; 中有一个浮动元素。该 div 的内容与浮动元素一起浮动。由于 float 的内容比它旁边的内容高，所以现在 DIV 的边框贯穿了 float。如流入和流出元素指南&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NTU19GbG93X0xheW91dC9Jbl9GbG93X2FuZF9PdXRfb2ZfRmxvdw==&#34;&gt; guide to in-flow and out of flow elements&lt;/span&gt; 中所述，浮动已脱离文档流，因此 DIV 的背景和边框仅包含内容，而不包含浮动。&lt;br /&gt;
&lt;img data-src=&#34;/images/default/Block-formatting-context(BFC)-image.png&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 创建一个新的 BFC 将包含该浮动。在过去，一种典型的方法是设置 overflow: auto 或设置其他不是 overflow: visible 的值。&lt;br /&gt;
&lt;img data-src=&#34;/images/default/Block-formatting-context(BFC)-image1.png&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 设置 overflow: auto 会自动创建包含浮动的新 BFC。现在，我们的 DIV 在布局中变成了一个迷你布局。任何子元素都将包含在其中。&lt;br /&gt;
使用 overflow 创建新的 BFC 的问题在于， overflow 属性用于告诉浏览器您希望如何处理溢出的内容。在某些情况下，当您纯粹使用此属性创建 BFC 时，您会发现不需要的滚动条或剪切阴影。另外，对于未来的开发人员来说，它可能不太可读，因为不能显式地表明为什么要使用溢出来实现这一目的。如果您使用了这个方法，最好对代码进行注释以便他人理解。&lt;br /&gt;
​&lt;/p&gt;
&lt;h3 id=&#34;使用-displayflow-root-显式创建-bfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-displayflow-root-显式创建-bfc&#34;&gt;#&lt;/a&gt; 使用 display:flow-root 显式创建 BFC&lt;/h3&gt;
&lt;p&gt;使用 display: flow-root （或 display: flow-root list-item）将创建一个新的 BFC，而不会产生任何其他潜在的问题副作用。&lt;br /&gt;
&lt;img data-src=&#34;/images/default/Block-formatting-context(BFC)-image2.png&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9FbGVtZW50L2Rpdg==&#34;&gt;&amp;lt;div&amp;gt;&lt;/span&gt; 上的 display: flow-root ，该容器内的所有内容都参与该容器的块格式上下文，并且浮动不会从元素底部弹出。&lt;br /&gt;
flow-root 关键字的意义是，创建的内容本质上类似于一个新的根元素（如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9FbGVtZW50L2h0bWw=&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; 所做），并确定这个新的上下文如何创建及其流布局如何实现。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/DOM/</guid>
            <title>DOM</title>
            <link>https://www.oocii.com/yuque/DOM/</link>
            <pubDate>Sat, 25 Dec 2021 18:04:40 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;文档对象模型 (&lt;em&gt;DOM)&lt;/em&gt;&lt;/strong&gt; 将 web 页面与到脚本或编程语言连接起来。通常是指 JavaScript，但将 HTML、SVG 或 XML 文档建模为对象并不是 JavaScript 语言的一部分。DOM 模型用一个逻辑树来表示一个文档，树的每个分支的终点都是一个节点 (node)，每个节点都包含着对象 (objects)。DOM 的方法 (methods) 让你可以用特定方式操作这个树，用这些方法你可以改变文档的结构、样式或者内容。节点可以关联上事件处理器，一旦某一事件被触发了，那些事件处理器就会被执行。&lt;/p&gt;
&lt;h2 id=&#34;dom-接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom-接口&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50X09iamVjdF9Nb2RlbCNkb21fJUU2JThFJUE1JUU1JThGJUEz&#34;&gt;DOM 接口&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0F0dHI=&#34;&gt;Attr&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NoYXJhY3RlckRhdGE=&#34;&gt;CharacterData&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;ChildNode&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NvbW1lbnQ=&#34;&gt;Comment&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50&#34;&gt;CustomEvent&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50&#34;&gt;Document&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50RnJhZ21lbnQ=&#34;&gt;DocumentFragment&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50VHlwZQ==&#34;&gt;DocumentType&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTUVycm9y&#34;&gt;DOMError&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTUV4Y2VwdGlvbg==&#34;&gt;DOMException&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTUltcGxlbWVudGF0aW9u&#34;&gt;DOMImplementation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVN0cmluZw==&#34;&gt;DOMString&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVRpbWVTdGFtcA==&#34;&gt;DOMTimeStamp&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;DOMSettableTokenList&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVN0cmluZ0xpc3Q=&#34;&gt;DOMStringList&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVRva2VuTGlzdA==&#34;&gt;DOMTokenList&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0VsZW1lbnQ=&#34;&gt;Element&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0V2ZW50&#34;&gt;Event&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0V2ZW50VGFyZ2V0&#34;&gt;EventTarget&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hUTUxDb2xsZWN0aW9u&#34;&gt;HTMLCollection&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL011dGF0aW9uT2JzZXJ2ZXI=&#34;&gt;MutationObserver&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL011dGF0aW9uUmVjb3Jk&#34;&gt;MutationRecord&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGU=&#34;&gt;Node&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGVGaWx0ZXI=&#34;&gt;NodeFilter&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGVJdGVyYXRvcg==&#34;&gt;NodeIterator&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGVMaXN0&#34;&gt;NodeList&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;ParentNode&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Byb2Nlc3NpbmdJbnN0cnVjdGlvbg==&#34;&gt;ProcessingInstruction(en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZQ==&#34;&gt;Promise(en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZQ==&#34;&gt;PromiseResolver(en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Jhbmdl&#34;&gt;Range&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RleHQ=&#34;&gt;Text&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RyZWVXYWxrZXI=&#34;&gt;TreeWalker&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1VSTA==&#34;&gt;URL&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dpbmRvdw==&#34;&gt;Window&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dvcmtlcg==&#34;&gt;Worker&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1hNTERvY3VtZW50&#34;&gt;XMLDocument&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Web%20APIs/</guid>
            <title>Web APIs</title>
            <link>https://www.oocii.com/yuque/Web%20APIs/</link>
            <pubDate>Sat, 25 Dec 2021 18:00:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJ&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API&lt;/span&gt;&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;B&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0JhY2tncm91bmRfRmV0Y2hfQVBJ&#34;&gt;Background Fetch API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0JhY2tncm91bmRfVGFza3NfQVBJ&#34;&gt;Background Tasks&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0JhcmNvZGVfRGV0ZWN0aW9uX0FQSQ==&#34;&gt;Barcode Detection API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0JhdHRlcnlfU3RhdHVzX0FQSQ==&#34;&gt;Battery API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0JlYWNvbl9BUEk=&#34;&gt;Beacon&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9CbHVldG9vdGhfQVBJ&#34;&gt;Bluetooth API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0Jyb2FkY2FzdF9DaGFubmVsX0FQSQ==&#34;&gt;Broadcast Channel API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NTU19Db3VudGVyX1N0eWxlcw==&#34;&gt;CSS Counter Styles (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NTU19Gb250X0xvYWRpbmdfQVBJ&#34;&gt;CSS Font Loading API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NTU19QYWludGluZ19BUEk=&#34;&gt;CSS Painting API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NTU19UeXBlZF9PTV9BUEk=&#34;&gt;CSS Typed Object Model API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NTU19PYmplY3RfTW9kZWw=&#34;&gt;CSSOM&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NhbnZhc19BUEk=&#34;&gt;Canvas API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NoYW5uZWxfTWVzc2FnaW5nX0FQSQ==&#34;&gt;Channel Messaging API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NsaXBib2FyZF9BUEk=&#34;&gt;Clipboard API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NvbnNvbGVfQVBJ&#34;&gt;Console API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NvbnRhY3RfUGlja2VyX0FQSQ==&#34;&gt;Contact Picker API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NvbnRlbnRfSW5kZXhfQVBJ&#34;&gt;Content Index API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NyZWRlbnRpYWxfTWFuYWdlbWVudF9BUEk=&#34;&gt;Credential Management API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;D&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50X09iamVjdF9Nb2RlbA==&#34;&gt;DOM&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VuY29kaW5nX0FQSQ==&#34;&gt;Encoding API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VuY3J5cHRlZF9NZWRpYV9FeHRlbnNpb25zX0FQSQ==&#34;&gt;Encrypted Media Extensions (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0V5ZURyb3BwZXJfQVBJ&#34;&gt;EyeDropper API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;F&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ZldGNoX0FQSQ==&#34;&gt;Fetch API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZpbGVfU3lzdGVtX0FjY2Vzc19BUEk=&#34;&gt;File System Access API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ZpbGVfYW5kX0RpcmVjdG9yeV9FbnRyaWVzX0FQSQ==&#34;&gt;File and Directory Entries API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0Z1bGxzY3JlZW5fQVBJ&#34;&gt;Fullscreen API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;G&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dhbWVwYWRfQVBJ&#34;&gt;Gamepad API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dlb2xvY2F0aW9uX0FQSQ==&#34;&gt;Geolocation API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;H&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEk=&#34;&gt;HTML Drag and Drop API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfU2FuaXRpemVyX0FQSQ==&#34;&gt;HTML Sanitizer API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlX0FQSQ==&#34;&gt;High Resolution Time&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hpc3RvcnlfQVBJ&#34;&gt;History API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhU3RyZWFtX0ltYWdlX0NhcHR1cmVfQVBJ&#34;&gt;Image Capture API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0luZGV4ZWREQl9BUEk=&#34;&gt;IndexedDB&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEk=&#34;&gt;Intersection Observer API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0xheW91dF9JbnN0YWJpbGl0eV9BUEk=&#34;&gt;Layout Instability API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0xvbmdfVGFza3NfQVBJ&#34;&gt;Long Tasks API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;M&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhX0NhcGFiaWxpdGllc19BUEk=&#34;&gt;Media Capabilities API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL01lZGlhX1N0cmVhbXNfQVBJ&#34;&gt;Media Capture and Streams&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhX1Nlc3Npb25fQVBJ&#34;&gt;Media Session API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL01lZGlhX1NvdXJjZV9FeHRlbnNpb25zX0FQSQ==&#34;&gt;Media Source Extensions&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL01lZGlhU3RyZWFtX1JlY29yZGluZ19BUEk=&#34;&gt;MediaStream Recording&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;N&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05hdmlnYXRpb25fdGltaW5nX0FQSQ==&#34;&gt;Navigation Timing&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05ldHdvcmtfSW5mb3JtYXRpb25fQVBJ&#34;&gt;Network Information API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BhZ2VfVmlzaWJpbGl0eV9BUEk=&#34;&gt;Page Visibility API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BheW1lbnRfUmVxdWVzdF9BUEk=&#34;&gt;Payment Request API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlX0FQSQ==&#34;&gt;Performance API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlX1RpbWVsaW5l&#34;&gt;Performance Timeline API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9QZXJpb2RpY19CYWNrZ3JvdW5kX1N5bmNocm9uaXphdGlvbl9BUEk=&#34;&gt;Periodic Background Sync (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Blcm1pc3Npb25zX0FQSQ==&#34;&gt;Permissions API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1BpY3R1cmUtaW4tUGljdHVyZV9BUEk=&#34;&gt;Picture-in-Picture API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BvaW50ZXJfZXZlbnRz&#34;&gt;Pointer Events&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BvaW50ZXJfTG9ja19BUEk=&#34;&gt;Pointer Lock API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1ByZXNlbnRhdGlvbl9BUEk=&#34;&gt;Presentation API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Byb3hpbWl0eV9FdmVudHM=&#34;&gt;Proximity Events (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1B1c2hfQVBJ&#34;&gt;Push API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;R&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Jlc2l6ZV9PYnNlcnZlcl9BUEk=&#34;&gt;Resize Observer API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Jlc291cmNlX1RpbWluZ19BUEk=&#34;&gt;Resource Timing API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;S&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NjcmVlbl9DYXB0dXJlX0FQSQ==&#34;&gt;Screen Capture API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1NjcmVlbl9PcmllbnRhdGlvbl9BUEk=&#34;&gt;Screen Orientation API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1NjcmVlbl9XYWtlX0xvY2tfQVBJ&#34;&gt;Screen Wake Lock API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NlbnNvcl9BUElz&#34;&gt;Sensor API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NlcnZlci1zZW50X2V2ZW50cw==&#34;&gt;Server Sent Events&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NlcnZpY2VfV29ya2VyX0FQSQ==&#34;&gt;Service Workers API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1N0b3JhZ2VfQVBJ&#34;&gt;Storage&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1N0b3JhZ2VfQWNjZXNzX0FQSQ==&#34;&gt;Storage Access API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1N0cmVhbXNfQVBJ&#34;&gt;Streams&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;T&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RvdWNoX2V2ZW50cw==&#34;&gt;Touch Events&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;U&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1VSTF9BUEk=&#34;&gt;URL API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1VSTF9QYXR0ZXJuX0FQSQ==&#34;&gt;URL Pattern API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;V&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1ZpYnJhdGlvbl9BUEk=&#34;&gt;Vibration API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Zpc3VhbF9WaWV3cG9ydF9BUEk=&#34;&gt;Visual Viewport (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;W&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BbmltYXRpb25zX0FQSQ==&#34;&gt;Web Animations&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BdWRpb19BUEk=&#34;&gt;Web Audio API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BdXRoZW50aWNhdGlvbl9BUEk=&#34;&gt;Web Authentication API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9DcnlwdG9fQVBJ&#34;&gt;Web Crypto API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9NSURJX0FQSQ==&#34;&gt;Web MIDI API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vdGlmaWNhdGlvbnNfQVBJ&#34;&gt;Web Notifications&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9TaGFyZV9BUEk=&#34;&gt;Web Share API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9TcGVlY2hfQVBJ&#34;&gt;Web Speech API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9TdG9yYWdlX0FQSQ==&#34;&gt;Web Storage API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9Xb3JrZXJzX0FQSQ==&#34;&gt;Web Workers API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYkNvZGVjc19BUEk=&#34;&gt;WebCodecs API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYkdMX0FQSQ==&#34;&gt;WebGL&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYkhJRF9BUEk=&#34;&gt;WebHID API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlJUQ19BUEk=&#34;&gt;WebRTC&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlZSX0FQSQ==&#34;&gt;WebVR API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlZUVF9BUEk=&#34;&gt;WebVTT&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlhSX0RldmljZV9BUEk=&#34;&gt;WebXR Device API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlNvY2tldHNfQVBJ&#34;&gt;Websockets API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;X&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0&#34;&gt;XMLHttpRequest&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E6%8B%96%E6%94%BE%20Drag%20and%20Drop/</guid>
            <title>拖放 Drag and Drop</title>
            <link>https://www.oocii.com/yuque/%E6%8B%96%E6%94%BE%20Drag%20and%20Drop/</link>
            <pubDate>Sat, 25 Dec 2021 17:52:47 +0800</pubDate>
            <description><![CDATA[ &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;事件&lt;/th&gt;
&lt;th&gt;On 型事件处理程序&lt;/th&gt;
&lt;th&gt;触发时刻&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdfZXZlbnQ=&#34;&gt;drag (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFn&#34;&gt;ondrag&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽元素或选中的文本时触发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdlbmRfZXZlbnQ=&#34;&gt;dragend (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnZW5k&#34;&gt;ondragend(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽操作结束时触发 (比如松开鼠标按键或敲 “Esc” 键). (见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2RyYWdlbmQ=&#34;&gt;结束拖拽 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdlbnRlcl9ldmVudA==&#34;&gt;dragenter (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnZW50ZXI=&#34;&gt;ondragenter(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽元素或选中的文本到一个可释放目标时触发（见 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2Ryb3B0YXJnZXRz&#34;&gt;指定释放目标 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvUmVmZXJlbmNlL0V2ZW50cy9kcmFnZXhpdA==&#34;&gt;dragexit&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnbGVhdmU=&#34;&gt;ondragexit(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当元素变得不再是拖拽操作的选中目标时触发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdsZWF2ZV9ldmVudA==&#34;&gt;dragleave (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnbGVhdmU=&#34;&gt;ondragleave&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽元素或选中的文本离开一个可释放目标时触发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdvdmVyX2V2ZW50&#34;&gt;dragover (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnb3Zlcg==&#34;&gt;ondragover(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当元素或选中的文本被拖到一个可释放目标上时触发（每 100 毫秒触发一次）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdzdGFydF9ldmVudA==&#34;&gt;dragstart (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnc3RhcnQ=&#34;&gt;ondragstart(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当用户开始拖拽一个元素或选中的文本时触发（见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2RyYWdzdGFydA==&#34;&gt;开始拖拽操作 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2Ryb3BfZXZlbnQ=&#34;&gt;drop (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcm9w&#34;&gt;ondrop&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当元素或选中的文本在可释放目标上被释放时触发（见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2Ryb3A=&#34;&gt;执行释放 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E5%90%8C%E6%AD%A53/</guid>
            <title>同步3</title>
            <link>https://www.oocii.com/yuque/%E5%90%8C%E6%AD%A53/</link>
            <pubDate>Fri, 24 Dec 2021 12:01:06 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/10%20%E7%A7%8D%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid>
            <title>10 种常见软件架构模式</title>
            <link>https://www.oocii.com/yuque/10%20%E7%A7%8D%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link>
            <category term="软件架构模式" scheme="https://www.oocii.com/categories/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/" />
            <category term="Software Architecture Patterns" scheme="https://www.oocii.com/tags/Software-Architecture-Patterns/" />
            <category term="Architecture" scheme="https://www.oocii.com/tags/Architecture/" />
            <category term="架构设计" scheme="https://www.oocii.com/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" />
            <category term="架构模式" scheme="https://www.oocii.com/tags/%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/" />
            <pubDate>Thu, 23 Dec 2021 13:29:10 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;快速总结：- 软件架构模式在其随着时间的推移扩展和满足用户需求的能力中起着至关重要的作用。本文涵盖了不同类型的软件架构模式、它们的重要性和比较分析，以帮助您选择最佳模式。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;你必须知道的-10-种最佳软件架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你必须知道的-10-种最佳软件架构模式&#34;&gt;#&lt;/a&gt; 你必须知道的 10 种最佳软件架构模式&lt;/h2&gt;
&lt;h2 id=&#34;快速链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速链接&#34;&gt;#&lt;/a&gt; 快速链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sectiona&#34;&gt;介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionb&#34;&gt;什么是架构模式？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionc&#34;&gt;软件架构模式的重要性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectiond&#34;&gt;软件架构模式与设计模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;不同类型的软件架构模式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionf&#34;&gt;1. 分层架构模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectiong&#34;&gt;2. 事件驱动架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionh&#34;&gt;3. 微内核架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectioni&#34;&gt;4. 微服务架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionj&#34;&gt;5. 基于空间的架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionk&#34;&gt;6. 客户端 - 服务器架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionl&#34;&gt;7. 主从架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionm&#34;&gt;8. 管道过滤器架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionn&#34;&gt;9. 经纪人架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectiono&#34;&gt;10. 点对点架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionp&#34;&gt;不同软件架构模式对比分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任何软件中的缺陷都会对组织的业务产生重大影响。任何软件失败的主要原因都可能是选择了错误的软件架构模式。但是有了先验知识，您将能够指导设计人员和开发人员设计组件及其反应方式。&lt;br /&gt;
经常看到公司在没有正式架构的情况下开始应用程序开发过程。然而，他们往往会忽略架构模式的缺失会迫使开发团队采用没有指导方针的传统模式。最终，他们的代码缺乏明确的角色、责任和彼此之间的关系。&lt;br /&gt;
例如，在线银行应用程序不需要像微服务模式这样的复杂架构。它可以简单地使用客户端 - 服务器架构来获取请求。但是，如果没有这种规划，应用程序可能会变得复杂，无法返回或失去重组过程中的巨额投资。规划架构模式有助于事先分析风险并避免对业务产生任何不利影响。&lt;br /&gt;
为了有一个清晰的理解，让我们探索一下什么是软件架构模式以及对其中一些类型的完整解释。&lt;/p&gt;
&lt;h2 id=&#34;什么是架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是架构模式&#34;&gt;#&lt;/a&gt; 什么是架构模式？&lt;/h2&gt;
&lt;p&gt;架构模式可以称为大纲，它允许您表达和定义各种软件系统的结构模式。它是一个可重用的解决方案，提供了一组预定义的子系统、角色和职责，包括用于定义它们之间关系的规则和路线图。它可以帮助您解决各种软件工程问题，例如性能限制、高可用性、最小化业务风险等。&lt;br /&gt;
即使架构模式是系统的粗略图像或蓝图，它也不是实际的架构。相反，它是一个帮助您理解软件架构元素的概念。可以有无数的架构实现相同的模式。这就是为什么模式被称为 “严格描述和常用” 的原因。系统的成功取决于软件架构的选择。&lt;br /&gt;
架构模式的著名示例是微服务、消息总线、服务请求者 / 消费者、MVC 模式、MVVM、微内核、n 层、领域驱动的设计组件和表示抽象控制。&lt;/p&gt;
&lt;h2 id=&#34;软件架构模式的重要性是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件架构模式的重要性是什么&#34;&gt;#&lt;/a&gt; 软件架构模式的重要性是什么？&lt;/h2&gt;
&lt;p&gt;软件架构模式具有重要意义，因为它可以解决不同领域内的各种问题。例如，复杂的用户请求可以轻松地分割成更小的块并分布在多个服务器上，而不是依赖于单个服务器。在另一个示例中，可以通过划分软件的各个部分而不是一次测试整个事物来简化测试协议。&lt;br /&gt;
以下是为什么软件架构模式对任何软件应用程序都至关重要的更多原因：&lt;/p&gt;
&lt;h3 id=&#34;定义应用程序的基本特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义应用程序的基本特征&#34;&gt;#&lt;/a&gt; &lt;strong&gt;定义应用程序的基本特征：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;了解每种架构的特征、优势和劣势对于选择合适的架构来满足您的业务目标非常重要。据观察，架构模式有助于定义应用程序的基本特征和行为。例如，一些架构模式可以自然地用于高度可扩展的应用程序，而其他架构模式可以用于敏捷应用程序。&lt;/p&gt;
&lt;h3 id=&#34;保持质量和效率&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#保持质量和效率&#34;&gt;#&lt;/a&gt; &lt;strong&gt;保持质量和效率：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;您构建的任何应用程序都极有可能面临质量问题。根据您的软件开发质量属性，选择架构模式可以帮助最大限度地减少质量问题，同时保持效率。&lt;/p&gt;
&lt;h3 id=&#34;提供敏捷性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提供敏捷性&#34;&gt;#&lt;/a&gt; &lt;strong&gt;提供敏捷性：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;软件应用程序在软件开发期间甚至在生产之后经历大量修改和迭代是很自然的。因此，预先规划核心软件架构可为应用程序提供敏捷性，并使未来的审核毫不费力。&lt;/p&gt;
&lt;h3 id=&#34;问题解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题解决&#34;&gt;#&lt;/a&gt; &lt;strong&gt;问题解决：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;对软件架构的事先规划和知识可以清楚地了解应用程序及其组件将如何运行。有了适当的架构，开发团队可以采用最佳实践来解决复杂的流程并解决未来的任何错误。&lt;/p&gt;
&lt;h3 id=&#34;提高生产力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提高生产力&#34;&gt;#&lt;/a&gt; &lt;strong&gt;提高生产力：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;不管一个人拥有关于编程语言、框架或应用程序的技能和知识，都必须有一定的标准化原则。有了合适的应用模式，公司可以快速掌握项目的状态。此外，当架构模式到位以明确项目范围时，生产率会提高。&lt;/p&gt;
&lt;h2 id=&#34;软件架构模式与设计模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件架构模式与设计模式&#34;&gt;#&lt;/a&gt; 软件架构模式与设计模式&lt;/h2&gt;
&lt;p&gt;架构模式和设计模式之间只有一线之隔，大多数人会混淆这两者。对于基础知识，让我们假设您的团队有一项任务是建造一所房子并住在里面。&lt;br /&gt;
首先，他们必须先计划好，然后再将砖块和水泥放在空地上。此外，即使在规划好房子之后，还有更多的东西要让它值得居住 —— 他们需要基本的便利设施，比如厨房用具、床上用品、洗浴用品等等。在这个类比中，房子应该看起来如何代表建筑模式，而房子的室内设计代表设计模式。&lt;br /&gt;
在软件系统中，当您必须创建业务逻辑、数据库逻辑、UI 等时考虑架构，而在实现业务逻辑或数据库逻辑时使用软件设计模式。&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350631-32cb2992-8183-4179-9e22-c1c32e2e6ad2.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u90b389aa&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=939&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u8254016b-ea6a-4f78-b60e-e30e68730c9&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;不同类型的软件架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不同类型的软件架构模式&#34;&gt;#&lt;/a&gt; 不同类型的软件架构模式&lt;/h2&gt;
&lt;p&gt;让我们讨论一些帮助许多软件企业扩展业务的流行架构模式：&lt;/p&gt;
&lt;h3 id=&#34;1分层架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1分层架构模式&#34;&gt;#&lt;/a&gt; 1. 分层架构模式&lt;/h3&gt;
&lt;p&gt;您可能听说过多层，也称为分层架构或 n 层架构。这种架构在设计师和软件架构师中广受欢迎，因为它与许多初创公司和成熟企业中的传统 IT 通信安排有共同点。通常，分层架构分为四个不同的层：表示层、业务层、持久性层和数据库层；但是，该模式并不局限于指定的层，可以有应用层或服务层或数据访问层。Java EE 等流行框架使用了这种架构模式。&lt;br /&gt;
假设一个软件工程师正在构建一个大型应用程序，您发现自己在架构模式中使用了所有四个层。另一方面，小型企业可以将业务层和持久层组合成一个单元，主要是当后者作为业务逻辑层组件的一个组成部分使用时。&lt;br /&gt;
这种模式很突出，因为每一层在应用程序中都扮演着不同的角色，并被标记为关闭。这意味着请求必须通过其正下方的层才能到达下一层。它的另一个概念 —— 隔离层 —— 使您能够在一个层内修改组件而不影响其他层。&lt;br /&gt;
为了简化这个过程，让我们举一个电子商务 Web 应用程序的例子。处理购物车活动（例如计算购物车）所需的业务逻辑直接从应用程序层获取到表示层。在这里，应用层充当集成层，在数据层和表示层之间建立无缝通信。此外，最后一层是数据层，用于独立维护数据，无需应用服务器和业务逻辑的干预。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要快速构建的应用程序。&lt;/li&gt;
&lt;li&gt;需要传统 IT 部门和流程的企业应用程序。&lt;/li&gt;
&lt;li&gt;适用于开发人员经验不足且架构模式知识有限的团队。&lt;/li&gt;
&lt;li&gt;需要严格的可维护性和可测试性标准的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有明确角色的杂乱无章的源代码和模块可能会成为应用程序的问题。&lt;/li&gt;
&lt;li&gt;跳过前面的层来创建紧密耦合可能会导致充满复杂相互依赖关系的逻辑混乱。&lt;/li&gt;
&lt;li&gt;基本修改可能需要完全重新部署应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350617-1e24a301-4609-496b-bf92-119a78463869.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u41dcdefd&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u06f8eff3-fc59-4ebd-ab62-85abfa781ed&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-事件驱动架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-事件驱动架构模式&#34;&gt;#&lt;/a&gt; 2. 事件驱动架构模式&lt;/h3&gt;
&lt;p&gt;如果您正在寻找一种敏捷且高性能的架构模式，那么您应该选择事件驱动的架构模式。它由异步接收和处理事件的分离的、单一用途的事件处理组件组成。这种模式协调所有事件的产生、检测和消费行为，以及它们引起的响应。&lt;br /&gt;
事件驱动的架构风格由两种拓扑结构组成 —— 中介者和代理者。当需要通过中央调解器在事件总线中编排多个步骤时，使用调解器。另一方面，代理用于在不使用中央调解器的情况下将事件链接在一起。&lt;br /&gt;
使用事件驱动架构的一个很好的例子是电子商务网站。事件驱动的架构使电子商务网站能够在高需求时对各种来源做出反应。同时，它避免了应用程序的任何崩溃或任何资源的过度配置。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于单个数据块仅与几个模块交互的应用程序。&lt;/li&gt;
&lt;li&gt;帮助用户界面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有在独立的情况下才能测试单个模块，否则需要在功能齐全的系统中进行测试。&lt;/li&gt;
&lt;li&gt;当多个模块处理相同的事件时，错误处理对结构化变得具有挑战性。&lt;/li&gt;
&lt;li&gt;如果事件有不同的需求，则为事件开发系统范围的数据结构可能会变得很困难。&lt;/li&gt;
&lt;li&gt;对于解耦和独立的模块，维护基于事务的一致性机制可能会变得复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350820-3afb9a50-c0a7-4297-9952-3d9243839512.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ue758b1e4&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u4e4bbf59-cf6b-46c3-b897-ebadb37063d&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-微内核架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-微内核架构模式&#34;&gt;#&lt;/a&gt; 3. 微内核架构模式&lt;/h3&gt;
&lt;p&gt;这种架构模式由两种类型的组件组成 —— 一个核心系统和几个插件模块。虽然核心系统以最小的功能工作以保持系统运行，但插件模块是具有专门处理的独立组件。&lt;br /&gt;
如果我们从业务应用程序的角度来看，核心系统可以定义为通用业务逻辑，没有针对特殊情况、特殊规则或复杂条件流程的自定义代码。另一方面，插件模块旨在增强核心系统以产生额外的业务能力。&lt;br /&gt;
以任务调度器应用为例，微内核包含调度和触发任务的所有逻辑，而插件包含特定的任务。只要插件遵循预定义的 API，微内核就可以触发它们，而无需了解实现细节。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在基本例程和高阶规则之间有明确划分的应用程序。&lt;/li&gt;
&lt;li&gt;具有一组固定的核心例程和一组需要频繁更新的动态规则的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件必须具有良好的握手代码，以便微内核知道插件安装并准备好工作。&lt;/li&gt;
&lt;li&gt;如果有多个插件依赖于微内核，那么更改微内核几乎是不可能的。&lt;/li&gt;
&lt;li&gt;提前为核函数选择合适的粒度是很困难的，后期会更加复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350831-602d449d-3719-4e9a-9a2b-265b0ba31078.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u72da7c93&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uceddea9e-6749-40f6-83fd-338444557f4&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-微服务架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-微服务架构模式&#34;&gt;#&lt;/a&gt; 4. 微服务架构模式&lt;/h3&gt;
&lt;p&gt;微服务架构模式被视为单体应用程序和面向服务架构的可行替代方案。这些组件通过有效、简化的交付管道作为单独的单元进行部署。该模式的好处是增强了可伸缩性和应用程序内的高度解耦。&lt;br /&gt;
由于其解耦和独立的特性，组件通过远程访问协议进行访问。此外，相同的组件可以单独开发、部署和测试，而无需与任何其他服务组件相互依赖。&lt;br /&gt;
Netflix 是微服务架构模式的早期采用者之一。该架构允许工程团队在小团队中工作，负责数百个微服务的端到端开发。这些微服务协同工作，每天为数百万 Netflix 客户流式传输数字娱乐。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要快速开发的业务和 Web 应用程序。&lt;/li&gt;
&lt;li&gt;具有小型组件的网站、具有明确边界的数据中心以及全球远程团队。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为服务组件设计正确的粒度级别始终是一项挑战。&lt;/li&gt;
&lt;li&gt;所有应用程序都不包括可以拆分为独立单元的任务。&lt;/li&gt;
&lt;li&gt;由于任务分布在不同的微服务中，性能可能会受到影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352952-5d00739c-056c-4bba-941c-825ffbb1d30a.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u1f3e2265&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=708&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u0899b9c1-4dcd-4fc3-a462-ef1603281fc&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-基于空间的架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-基于空间的架构模式&#34;&gt;#&lt;/a&gt; 5. 基于空间的架构模式&lt;/h3&gt;
&lt;p&gt;元组空间的概念 —— 分布式共享内存的概念是该架构名称的基础。基于空间的模式包括两个主要组件 —— 一个处理单元和一个虚拟化中间件。&lt;br /&gt;
处理单元包含部分应用程序组件，包括基于 Web 的组件和后端业务逻辑。虽然较小的 Web 应用程序可以部署在单个处理单元中，但较大的应用程序可以将应用程序功能拆分为多个处理单元以避免功能崩溃。此外，虚拟化中间件组件包含控制数据同步和请求处理的各个方面的元素。它们可以定制编写，也可以作为第三方产品购买。&lt;br /&gt;
投标拍卖网站可以被认为是这种架构模式的合适示例。它的功能是网站通过浏览器请求接收来自互联网用户的出价。收到请求后，网站会记录带有时间戳的出价，更新最新出价的信息，并将数据发送回浏览器。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有庞大用户群和持续请求负载的应用程序和软件系统。&lt;/li&gt;
&lt;li&gt;应该解决可伸缩性和并发性问题的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在不干扰多个副本的情况下缓存数据以提高速度是一项复杂的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352084-01bbca26-312a-4967-bd52-f08ae2d3cf60.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ua89ab21e&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u966d1719-7e5a-47ff-ad2c-022471a6ab7&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-客户端-服务器架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-客户端-服务器架构模式&#34;&gt;#&lt;/a&gt; 6. 客户端 - 服务器架构模式&lt;/h3&gt;
&lt;p&gt;客户端 - 服务器架构模式被描述为具有两个主要组件的分布式应用程序结构 —— 客户端和服务器。这种架构促进了客户端和服务器之间的通信，它们可能在也可能不在同一网络下。客户端请求从服务器获取特定资源，其形式可能是数据、内容、服务、文件等。服务器识别发出的请求并通过发送请求的资源适当地响应客户端。&lt;br /&gt;
客户端和服务器的功能特性是在应用程序中相互交互的程序示例。这种架构的功能非常灵活，因为单个服务器可以服务多个客户端，或者单个客户端可以使用多个服务器。服务器可以根据它们提供的服务或资源进行分类，而不管它们如何执行。&lt;br /&gt;
电子邮件是使用客户端 - 服务器模式构建的模型的一个突出示例。当用户 / 客户端搜索特定电子邮件时，服务器会查看资源池并将请求的电子邮件资源发送回用户 / 客户端。这也有助于您改善用户体验。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电子邮件、网上银行服务、万维网、网络打印、文件共享应用程序、游戏应用程序等应用程序。&lt;/li&gt;
&lt;li&gt;专注于实时服务的应用程序（如电信应用程序）是使用分布式应用程序结构构建的。&lt;/li&gt;
&lt;li&gt;需要受控访问并为大量分布式客户端提供多种服务的应用程序。&lt;/li&gt;
&lt;li&gt;具有集中式资源和服务的应用程序，必须分布在多个服务器上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不兼容的服务器容量可能会变慢，从而导致性能瓶颈。&lt;/li&gt;
&lt;li&gt;服务器通常容易出现单点故障。&lt;/li&gt;
&lt;li&gt;改变模式是一个复杂而昂贵的过程。&lt;/li&gt;
&lt;li&gt;服务器维护可能是一项艰巨且昂贵的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352140-04c376f0-1e24-44e6-9cf2-2a75b031f293.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u958b0a5f&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=684&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u52df7e26-ec08-4f07-b544-be796eb4ee1&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;7-主从架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-主从架构模式&#34;&gt;#&lt;/a&gt; 7. 主从架构模式&lt;/h3&gt;
&lt;p&gt;想象一个数据库同时接收多个类似请求。自然地，同时处理每个请求会使应用程序过程复杂化并减慢速度。这个问题的解决方案是主从架构模式，主数据库启动多个从组件以快速处理这些请求。&lt;br /&gt;
正如标题所暗示的，主从架构模式可以被描绘成一个主将任务分配给它的从属。一旦从属组件完成它们的任务，分布式任务将由主组件编译并显示为结果。&lt;br /&gt;
必须注意，主机对从属组件具有绝对控制权和权力，可以确定它们的通信和功能优先级。这种模式的独特之处在于每个从站将同时处理请求，同时提供结果。这也意味着在每个从站都将结果返回给主站之前，从站操作不会被视为完成。&lt;br /&gt;
这种模式非常适合可以分成更小的部分来执行类似请求的应用程序。一个合适的例子是需要大量多任务处理作为其重要组成部分的数据库应用程序。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发可能需要多处理器兼容架构的操作系统。&lt;/li&gt;
&lt;li&gt;必须将较大的服务分解为较小的组件的高级应用程序。&lt;/li&gt;
&lt;li&gt;通过分布式网络处理存储在不同服务器中的原始数据的应用程序。&lt;/li&gt;
&lt;li&gt;遵循多线程以提高其响应能力的 Web 浏览器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主组件的故障可能导致数据丢失，而从组件上没有备份。&lt;/li&gt;
&lt;li&gt;系统内的依赖性可能导致从属组件的故障。&lt;/li&gt;
&lt;li&gt;由于从属组件的隔离性质，间接成本可能会增加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113351882-eda1d1a5-8012-4814-9253-52ec9f2de7a8.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u4057f8a7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=684&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u86d8e7ca-2584-4be4-8ed7-a003f4a18ba&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;8-管道过滤器架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-管道过滤器架构模式&#34;&gt;#&lt;/a&gt; 8. 管道过滤器架构模式&lt;/h3&gt;
&lt;p&gt;管道过滤器架构模式处理单向流中的数据流，其中组件称为过滤器，管道是连接这些过滤器的那些。处理数据链发生在管道将数据传输到过滤器的地方，一个过滤器的结果成为下一个过滤器的输入。该架构的功能是将重要的组件 / 流程分解为可以同时处理的独立和多个组件。&lt;br /&gt;
管道过滤器模式最适合使用 Web 服务处理流中数据的应用程序，并且可以将简单的序列创建为复杂的结构。编译器可以被认为是具有这种架构模式的合适示例，因为每个过滤器都执行词法分析、解析、语义分析和代码生成。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它可用于促进简单的单向数据处理和转换的应用程序。&lt;/li&gt;
&lt;li&gt;使用电子数据交换和外部动态列表等工具的应用程序。&lt;/li&gt;
&lt;li&gt;开发用于错误检查和语法分析的数据编译器。&lt;/li&gt;
&lt;li&gt;在 UNIX 等操作系统中执行高级操作，其中程序的输出和输入按顺序连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果基础架构设计不可靠，则过滤器之间可能会丢失数据。&lt;/li&gt;
&lt;li&gt;最慢的过滤器限制了整个架构的性能和效率。&lt;/li&gt;
&lt;li&gt;在过滤器之间传输期间，数据转换开销可能会增加。&lt;/li&gt;
&lt;li&gt;该架构的持续转型特性使其对交互系统的用户友好性降低。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352513-3f7a821d-f605-4d06-85ba-dbd8d994f643.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u562e99b7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=684&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u79cd3de8-db05-46e1-a8c6-5e401511b1c&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;9-代理架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9-代理架构模式&#34;&gt;#&lt;/a&gt; 9. 代理架构模式&lt;/h3&gt;
&lt;p&gt;代理模式用于构建具有解耦组件的分布式系统。通过调用远程服务，组件可以在代理架构模式中与其他组件交互。此外，代理负责组件之间的所有协调和通信。&lt;br /&gt;
客户端、服务器和代理是代理模式的三个主要组成部分。通常，代理将有权访问与特定服务器相关的所有服务和特征。当客户端向代理请求服务时，代理会将它们重定向到合适的服务类别以进行进一步处理。&lt;br /&gt;
这种架构模式的主要好处之一是它如何以动态方式管理与对象相关的操作，例如更改、添加、删除或重定位。最后，这种架构模式将所有与通信相关的代码从应用程序中分离出来，允许应用程序在分布式或单台计算机上运行。由于这些优势，代理架构已经流行起来。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于消息代理软件，如 Apache ActiveMQ、Apache Kafka、RabbitMQ 和 JBoss Messaging。&lt;/li&gt;
&lt;li&gt;用于构建具有解耦组件的分布式系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容错能力浅。&lt;/li&gt;
&lt;li&gt;要求服务描述标准化。&lt;/li&gt;
&lt;li&gt;隐藏层可能会降低软件性能。&lt;/li&gt;
&lt;li&gt;更高的延迟并且需要更多的部署努力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113353355-b4cfbb98-2791-44ee-bf48-948d62b7c2cb.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=udc6e9226&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=1000&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u489c5d9b-a713-4a76-9b3e-221dfbbe711&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;10-点对点架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-点对点架构模式&#34;&gt;#&lt;/a&gt; 10. 点对点架构模式&lt;/h3&gt;
&lt;p&gt;在对等架构模式中，单个组件称为对等。对等点可以充当客户端、服务器或两者兼而有之，并随着时间的推移动态地改变其角色。作为客户端，对等点可以向其他对等点请求服务，作为服务器，对等点可以向其他对等点提供服务。对等和客户端 - 服务器架构之间的显着区别在于网络上的每台计算机都具有相当大的权限，并且没有集中式服务器。随着越来越多的计算机加入网络，它的容量也会增加。&lt;br /&gt;
对等架构模式的一个很好的例子是文件共享网络，如 Skype、BitTorrent 和 Napster。在 BitTorrent 中，点对点架构用于以分散的方式在互联网上分发数据和文件。通过使用此协议，可以轻松传输大型视频和音频文件。在 Skype 中，您可以使用 VoIP P2P 架构模式进行语音呼叫并向其他用户发送文本消息。通过这种方式，您可以使用对等架构进行文件共享、消息传递、协作等。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gnutella 和 G2 等文件共享网络。&lt;/li&gt;
&lt;li&gt;基于加密货币的产品，例如比特币和区块链。&lt;/li&gt;
&lt;li&gt;P2PTV、PDTP 等多媒体产品。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法保证高质量的服务。&lt;/li&gt;
&lt;li&gt;实现强大的安全性具有挑战性。&lt;/li&gt;
&lt;li&gt;性能取决于连接到网络的节点数量。&lt;/li&gt;
&lt;li&gt;无法备份文件或文件夹。&lt;/li&gt;
&lt;li&gt;可能需要特定的接口来读取文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113353641-a6651c20-75c9-40d6-b88f-33af6595fe45.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u66601f8a&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=1000&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u5e17b926-f909-4906-aa38-6bea0da4c4b&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;不同软件架构模式对比分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不同软件架构模式对比分析&#34;&gt;#&lt;/a&gt; 不同软件架构模式对比分析&lt;/h2&gt;
&lt;p&gt;到目前为止，我们已经了解了不同类型的架构模式。现在，您会为您的软件类型选择哪种架构？你需要做出正确的选择。&lt;br /&gt;
让我们看一下下表。&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113353987-b01e5b3e-347d-4dd9-842b-6f2add93c8c9.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u73e03bbe&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=6474&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u922ceeb1-64d1-4bb1-a121-f0d59a9c735&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Array.prototype.sort()%20%E6%96%B9%E6%B3%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%B4%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%B7%AE%E5%BC%82/</guid>
            <title>Array.prototype.sort() 方法在不同浏览器间的实现差异</title>
            <link>https://www.oocii.com/yuque/Array.prototype.sort()%20%E6%96%B9%E6%B3%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%B4%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%B7%AE%E5%BC%82/</link>
            <category term="JavaScript" scheme="https://www.oocii.com/categories/JavaScript/" />
            <category term="Array" scheme="https://www.oocii.com/categories/JavaScript/Array/" />
            <category term="Javascript" scheme="https://www.oocii.com/tags/Javascript/" />
            <category term="JS" scheme="https://www.oocii.com/tags/JS/" />
            <category term="ES" scheme="https://www.oocii.com/tags/ES/" />
            <category term="Array" scheme="https://www.oocii.com/tags/Array/" />
            <pubDate>Thu, 23 Dec 2021 10:44:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Array.prototype.sort () 方法用原地算法对数组的元素进行排序，并返回数组。默认排序顺序是在将元素转换为字符串，然后比较它们的 UTF-16 代码单元值序列时构建的&lt;/p&gt;
&lt;p&gt;由于它取决于具体实现，因此无法保证排序的时间和空间复杂性。&lt;/p&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;compareFunction&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数&#34;&gt;#&lt;/a&gt; 参数&lt;/h3&gt;
&lt;p&gt;compareFunction 可选&lt;br /&gt;
用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的 Unicode 位点进行排序。&lt;br /&gt;
firstEl&lt;br /&gt;
 第一个用于比较的元素。&lt;br /&gt;
secondEl&lt;br /&gt;
 第二个用于比较的元素。&lt;br /&gt;
返回值&lt;br /&gt;
排序后的数组。请注意，数组已原地排序，并且不进行复制。&lt;/p&gt;
&lt;h3 id=&#34;描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#描述&#34;&gt;#&lt;/a&gt; 描述&lt;/h3&gt;
&lt;p&gt;如果没有指明 compareFunction ，那么元素会按照转换为的字符串的诸个字符的 Unicode 位点进行排序。例如 &amp;quot;Banana&amp;quot; 会被排列到 &amp;quot;cherry&amp;quot; 之前。当数字按由小到大排序时，9 出现在 80 之前，但因为（没有指明 compareFunction），比较的数字会先被转换为字符串，所以在 Unicode 顺序上 &amp;quot;80&amp;quot; 要比 &amp;quot;9&amp;quot; 要靠前。&lt;/p&gt;
&lt;p&gt;如果指明了 compareFunction ，那么数组会按照调用该函数的返回值排序。即 a 和 b 是两个将要被比较的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 compareFunction (a, b) 小于 0 ，那么 a 会被排列到 b 之前；&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 等于 0 ， a 和 b 的相对位置不变。备注： ECMAScript 标准并不保证这一行为，而且也不是所有浏览器都会遵守（例如 Mozilla 在 2003 年之前的版本）；&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 大于 0 ， b 会被排列到 a 之前。&lt;br /&gt;
compareFunction (a, b) 必须总是对相同的输入返回相同的比较结果，否则排序的结果将是不确定的。&lt;br /&gt;
所以，比较函数格式如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按某种排序标准进行比较，a 小于 b&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// a must be equal to b&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以上是 MDN 上面的说明，但至于各浏览器的具体的实现是没有的.&lt;/p&gt;
&lt;h2 id=&#34;浏览器对-comparefunction-参数处理的差异&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浏览器对-comparefunction-参数处理的差异&#34;&gt;#&lt;/a&gt; 浏览器对 compareFunction 参数处理的差异&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; numbers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numbers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;numbers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;直观感觉上 compareFunction 的 a, b 参数应该是，a === numbers [n], b === numbers [n + 1], 但实际上不同浏览器的处理方式却不同，以下是 Chrome 和 Firefox 的处理结果:&lt;br /&gt;
Chrome&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 2 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 3 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 4 3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 5 4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Firefox&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 1 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 2 3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 3 4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 4 5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;由上面结果可以看到，Chrome 和 Firefox compareFunction 的入参方式完全相反.&lt;/p&gt;
&lt;p&gt;这是因为 ES 标准 没有规范 compareFunction 传入的参数到底该是什么顺序和算法，只是制定 compareFunction 两数之间的比较规则，就是上面提到的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 compareFunction (a, b) 小于 0 ，那么 a 会被排列到 b 之前；&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 等于 0 ， a 和 b 的相对位置不变。&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 大于 0 ， b 会被排列到 a 之前。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;明确定义规则后，不管 a, b 两个数传进来的顺序如何，只在乎它们两数的排序关系。这就解释了为什么同样的 compareFunction 下，尽管不同浏览器接受的参数不一样，还是能排序出一样的结果。&lt;/p&gt;
&lt;p&gt;参考资料:&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXkvc29ydA==&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuc29ydA==&#34;&gt;https://tc39.es/ecma262/#sec-array.prototype.sort&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E5%8A%A8%E6%80%81%20slot%20%E9%80%8F%E4%BC%A0%E5%B9%B6%E8%8E%B7%E5%8F%96%20slotProps%20%E6%95%B0%E6%8D%AE/</guid>
            <title>动态 slot 透传并获取 slotProps 数据</title>
            <link>https://www.oocii.com/yuque/%E5%8A%A8%E6%80%81%20slot%20%E9%80%8F%E4%BC%A0%E5%B9%B6%E8%8E%B7%E5%8F%96%20slotProps%20%E6%95%B0%E6%8D%AE/</link>
            <category term="Vue" scheme="https://www.oocii.com/categories/Vue/" />
            <category term="slot" scheme="https://www.oocii.com/categories/Vue/slot/" />
            <category term="vue" scheme="https://www.oocii.com/tags/vue/" />
            <category term="slot" scheme="https://www.oocii.com/tags/slot/" />
            <category term="scopedSlots" scheme="https://www.oocii.com/tags/scopedSlots/" />
            <category term="dynamicSlotName" scheme="https://www.oocii.com/tags/dynamicSlotName/" />
            <pubDate>Thu, 23 Dec 2021 10:44:19 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;slot 透传并获取 slotProps&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;// grandparent
&amp;lt;Parent :first-day-of-week=&amp;quot;0&amp;quot; :test-prop=&amp;quot;1999999999&amp;quot; :date=&amp;quot;new Date()&amp;quot;&amp;gt;
  &amp;lt;template v-slot:monthCellRender=&amp;quot;slotProps&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;
        month: &amp;#123;&amp;#123; slotProps.month &amp;#125;&amp;#125;
    &amp;lt;/h2&amp;gt;
  &amp;lt;/template&amp;gt;
  &amp;lt;template v-slot:dateCellRender=&amp;quot;slotProps&amp;quot;&amp;gt;
    &amp;lt;h3 style=&amp;quot;background-color: #eef;&amp;quot;&amp;gt;
      date: &amp;#123;&amp;#123; slotProps.date &amp;#125;&amp;#125;
  &amp;lt;/h3&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/Parent&amp;gt;

// parent component(Parent)
&amp;lt;Child&amp;gt;
  &amp;lt;template v-for=&amp;quot;(value, slotKeyName) in $scopedSlots&amp;quot; v-slot:[slotKeyName]=&amp;quot;slotProps&amp;quot;&amp;gt;
    &amp;lt;slot :name=&amp;quot;slotKeyName&amp;quot; v-bind=&amp;quot;slotProps&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
    &amp;lt;div :key=&amp;quot;slotKeyName&amp;quot;&amp;gt;&amp;#123;&amp;#123; slotKeyName &amp;#125;&amp;#125;&amp;lt;/div&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/Child&amp;gt;

// child
&amp;lt;slot name=&amp;quot;dateCellRender&amp;quot; v-bind=&amp;quot;item&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从 2.6.0 开始，这个 $scopedSlots 有两个变化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;作用域插槽函数现在保证返回一个 VNode 数组，除非在返回值无效的情况下返回 undefined。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有的 $slots 现在都会作为函数暴露在 $scopedSlots 中&lt;/strong&gt;。如果你在使用渲染函数，不论当前插槽是否带有作用域，我们都推荐始终通过 $scopedSlots 访问它们。这不仅仅使得在未来添加作用域变得简单，也可以让你最终轻松迁移到所有插槽都是函数的 Vue 3。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNzbG90&#34;&gt;https://cn.vuejs.org/v2/api/#slot&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyN2bS1zY29wZWRTbG90cw==&#34;&gt;https://cn.vuejs.org/v2/api/#vm-scopedSlots&lt;/span&gt;&lt;br /&gt;
 动态插槽名：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvZ3VpZGUvY29tcG9uZW50cy1zbG90cy5odG1sIyVFNSU4QSVBOCVFNiU4MCU4MSVFNiU4RiU5MiVFNiVBNyVCRCVFNSU5MCU4RA==&#34;&gt;https://cn.vuejs.org/v2/guide/components-slots.html#%E5%8A%A8%E6%80%81%E6%8F%92%E6%A7%BD%E5%90%8D&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/</guid>
            <title>flex布局子元素撑开父元素问题</title>
            <link>https://www.oocii.com/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/</link>
            <category term="CSS" scheme="https://www.oocii.com/categories/CSS/" />
            <category term="CSS" scheme="https://www.oocii.com/tags/CSS/" />
            <category term="flex" scheme="https://www.oocii.com/tags/flex/" />
            <category term="flex-shrink" scheme="https://www.oocii.com/tags/flex-shrink/" />
            <pubDate>Tue, 23 May 2017 20:08:12 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;用 flex 布局时遇到一个问题，原本想让 flex 子元素平均宽度显示，却因为子元素里面的内容宽度把其中一个子元素宽度撑开导致宽度不一致。先看代码：&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 500px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 2px solid orange&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;white-space&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;flex-box&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;普通文本&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;超长不换行的文本，超长不换行的文本，超长不换行的文本，超长不换行的文本，超长不换行的文本。&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;期望得到以下的效果：&lt;br /&gt;
&lt;img data-src=&#34;/images/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/p1.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但实际的效果却是下面这样，无法达到两列宽度平均的效果：&lt;br /&gt;
&lt;img data-src=&#34;/images/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/p2.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查了一下资料，发现了原因， W3C 规范定义：&lt;br /&gt;
To provide a more reasonable default minimum size for flex items, the used value of a main axis automatic minimum size on a flex item that is not a scroll container is a content-based minimum size; for scroll containers the automatic minimum size is zero, as usual.&lt;/p&gt;
&lt;p&gt;浏览器默认为 flex item 设置了 &amp;quot;min-width: auto;min-height: auto&amp;quot;, 即 flex 子元素的最小宽度高度不能小于其内容的宽度高度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过设置 min-width: 0;&lt;/strong&gt;, 覆盖掉这个默认设置，flex-shrink 属性就能生效了:&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 500px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;min-width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; // 新增行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;white-space&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;效果就正常了（由于业务需要有些地方不能用 overflow: hidden;）：&lt;img data-src=&#34;/images/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/p3.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但也有一种情况就是即使设置了 min-width: 0， flex-shrink 也不起作用，原因是多层嵌套 flex, 需要把最外层的 flex item 也设置 min-width: 0; 才能起作用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后发现有一种简单粗暴的方法，就是直接设置 flex item &lt;strong&gt;设置：width: 0;&lt;/strong&gt; 不受多层嵌套 flex 的影响。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 500px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; // 新增修改行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;white-space&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr /&gt;
&lt;p&gt;参考资料：&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzYyNDcxNDAvd2h5LWRvbnQtZmxleC1pdGVtcy1zaHJpbmstcGFzdC1jb250ZW50LXNpemU/YW5zd2VydGFiPXZvdGVzI3RhYi10b3A=&#34;&gt;https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size?answertab=votes#tab-top&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1mbGV4Ym94LTEvI21pbi1zaXplLWF1dG8=&#34;&gt;https://www.w3.org/TR/css-flexbox-1/#min-size-auto&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTc0MzU2NjgyNTc0OTIxNzY1I2NvbW1lbnQ=&#34;&gt;https://juejin.cn/post/6974356682574921765#comment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/default/Blob%20%E5%92%8C%20ArrayBuffer%20%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2/</guid>
            <title>Blob 和 ArrayBuffer 之间转换</title>
            <link>https://www.oocii.com/default/Blob%20%E5%92%8C%20ArrayBuffer%20%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2/</link>
            <category term="二进制数据" scheme="https://www.oocii.com/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE/" />
            <category term="blob" scheme="https://www.oocii.com/tags/blob/" />
            <category term="arrayBuffer" scheme="https://www.oocii.com/tags/arrayBuffer/" />
            <category term="binary data" scheme="https://www.oocii.com/tags/binary-data/" />
            <category term="converting" scheme="https://www.oocii.com/tags/converting/" />
            <pubDate>Fri, 27 Jan 2017 19:44:14 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;JavaScript 有两种主要的方式来表示浏览器中的二进制数据。ArrayBuffers/TypedArrays 包含可以直接操作的可变（尽管仍然是固定长度）二进制数据。Blob 包含只能通过异步文件接口访问的不可变二进制数据。&lt;/p&gt;
&lt;h3 id=&#34;将-blob-转换为-arraybuffer异步方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将-blob-转换为-arraybuffer异步方式&#34;&gt;#&lt;/a&gt; 将 Blob 转换为 ArrayBuffer（异步方式）&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; blob &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\x01\x02\x03\x04&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  fileReader &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FileReader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  array&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fileReader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onload&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  array &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Array contains&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;byteLength&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;bytes.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fileReader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readAsArrayBuffer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blob&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;6&lt;/p&gt;
&lt;h3 id=&#34;使用-promise-将-blob-转换为-arraybuffer异步方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-promise-将-blob-转换为-arraybuffer异步方式&#34;&gt;#&lt;/a&gt; 使用 Promise 将 Blob 转换为 ArrayBuffer（异步方式）&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; blob &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\x01\x02\x03\x04&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; arrayPromise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; reader &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FileReader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  reader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onloadend&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  reader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readAsArrayBuffer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blob&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arrayPromise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Array contains&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;byteLength&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;bytes.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;将-arraybuffer-或-typedarray-转换为-blob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将-arraybuffer-或-typedarray-转换为-blob&#34;&gt;#&lt;/a&gt; 将 ArrayBuffer 或 TypedArray 转换为 Blob&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; array &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Uint8Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x04&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x06&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x07&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x08&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; blob &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;参考：&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0Jsb2I=&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/Blob&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXlCdWZmZXI=&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lczYucnVhbnlpZmVuZy5jb20vI2RvY3MvYXJyYXlidWZmZXIjQXJyYXlCdWZmZXItJUU1JUFGJUI5JUU4JUIxJUEx&#34;&gt;https://es6.ruanyifeng.com/#docs/arraybuffer#ArrayBuffer-%E5%AF%B9%E8%B1%A1&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
