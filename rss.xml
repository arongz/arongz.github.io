<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>寺木的博客</title>
        <subtitle>“任何技术和语言，都只是工具，工具的唯一目的就是把东西做出来，不要因为熟练使用某个工具而沾沾自喜，躲在舒适圈不出来。”</subtitle>
        <icon>https://www.oocii.com/images/favicon.ico</icon>
        <link>https://www.oocii.com</link>
        <author>
          <name>Az</name>
        </author>
        <description>“任何技术和语言，都只是工具，工具的唯一目的就是把东西做出来，不要因为熟练使用某个工具而沾沾自喜，躲在舒适圈不出来。”</description>
        <language>zh-CN</language>
        <pubDate>Fri, 21 Jan 2022 18:45:26 +0800</pubDate>
        <lastBuildDate>Fri, 21 Jan 2022 18:45:26 +0800</lastBuildDate>
        <category term="FE" />
        <category term=" 寺木" />
        <category term=" 奥奇" />
        <category term=" oocii" />
        <category term=" Blog" />
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/DOM%20Node%20%E5%92%8C%20Element%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</guid>
            <title>DOM Node 和 Element 有什么区别？</title>
            <link>https://www.oocii.com/yuque/DOM%20Node%20%E5%92%8C%20Element%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</link>
            <category term="DOM" scheme="https://www.oocii.com/categories/DOM/" />
            <category term="dom" scheme="https://www.oocii.com/tags/dom/" />
            <category term="node" scheme="https://www.oocii.com/tags/node/" />
            <category term="element" scheme="https://www.oocii.com/tags/element/" />
            <pubDate>Fri, 21 Jan 2022 18:45:26 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;文档对象模型 (DOM) 是将 HTML 或 XML 文档视为树结构的接口，其中每个节点都是文档的一个对象。DOM 还提供了一组方法来查询树、改变结构、样式。&lt;br /&gt;
DOM 还使用术语&lt;em&gt; element&lt;/em&gt; : 与节点非常相似。那么，DOM 节点和元素有什么区别呢？&lt;/p&gt;
&lt;h2 id=&#34;1dom-node-节点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1dom-node-节点&#34;&gt;#&lt;/a&gt; 1.DOM Node 节点&lt;/h2&gt;
&lt;p&gt;理解节点和元素之间区别的关键是理解节点是什么。&lt;br /&gt;
从更高的角度来看，DOM 文档由节点的层次结构组成。每个节点可以有一个父节点和 / 或子节点。&lt;br /&gt;
我们看一下下面的 HTML 文档：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- Page Body --&amp;gt;
    &amp;lt;h2&amp;gt;My Page&amp;lt;/h2&amp;gt;
    &amp;lt;p id=&amp;quot;content&amp;quot;&amp;gt;Thank you for visiting my web page!&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;该文档包含以下节点层次结构：&lt;br /&gt;
&lt;a href=&#34;https://dmitripavlutin.com/static/75f1711be6313112e996905bd49c9951/0df09/dom-nodes.png&#34;&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1642761948285-3b3a1a54-2514-44c5-adb7-1b283fa57384.png#clientId=ued827b68-2f58-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=uc785e15b&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=303&amp;amp;originWidth=560&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub282eaed-ec01-48be-a2f0-32261739c0e&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;html&amp;gt; 是文档树中的一个节点。它有 2 个子节点：&amp;lt;head &amp;gt; 和 &amp;lt; body &amp;gt; 节点。&lt;br /&gt;
&amp;lt;body&amp;gt; 也是一个具有 3 个子节点的节点：评论 &amp;lt;!-- Page Body --&amp;gt;、标题 &amp;lt; h2 &amp;gt; 和段落 &amp;lt; p&amp;gt;。&amp;lt;body &amp;gt; 节点的父节点是 &amp;lt; html &amp;gt; 节点。&lt;br /&gt;
HTML 文档中的标签代表一个节点，有趣的是常规文本也是一个节点。段落节点 &amp;lt;p&amp;gt; 有 1 个子节点：文本节点 &amp;quot;Thank you for visiting my web page!&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;12-节点类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-节点类型&#34;&gt;#&lt;/a&gt; 1.2 节点类型&lt;/h3&gt;
&lt;p&gt;如何区分这些不同类型的节点？答案在于 DOM &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL05vZGU=&#34;&gt;Node&lt;/span&gt; 接口，尤其是 Node.nodeType 属性。&lt;br /&gt;
Node.nodeType 可以具有以下表示节点类型的值之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.ELEMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.ATTRIBUTE_NODE&lt;/li&gt;
&lt;li&gt;Node.TEXT_NODE&lt;/li&gt;
&lt;li&gt;Node.CDATA_SECTION_NODE&lt;/li&gt;
&lt;li&gt;Node.PROCESSING_INSTRUCTION_NODE&lt;/li&gt;
&lt;li&gt;Node.COMMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.DOCUMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.DOCUMENT_TYPE_NODE&lt;/li&gt;
&lt;li&gt;Node.DOCUMENT_FRAGMENT_NODE&lt;/li&gt;
&lt;li&gt;Node.NOTATION_NODE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常量有意义地指示节点类型：例如 Node.ELEMENT_NODE 表示元素节点、Node.TEXT_NODE 表示文本节点、Node.DOCUMENT_NODE 文档节点等。&lt;br /&gt;
例如，让我们选择段落节点，并查看其 nodeType 属性：&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
paragraph.nodeType === Node.ELEMENT_NODE; // =&amp;gt; true&lt;br /&gt;
 正如预期 paragraph.nodeType 的那样，有值 Node.ELEMENT_NODE，表明该段落是一个元素。&lt;br /&gt;
该段落还包含一个文本节点：&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
const firstChild = paragraph.childNodes[0];&lt;br /&gt;
firstChild.nodeType === Node.TEXT_NODE; // =&amp;gt; true&lt;br /&gt;
 有一个节点类型表示整个节点的文档树 - Node.DOCUMENT_NODE：&lt;br /&gt;
document.nodeType === Node.DOCUMENT_NODE; // =&amp;gt; true&lt;/p&gt;
&lt;h2 id=&#34;2dom-element-元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2dom-element-元素&#34;&gt;#&lt;/a&gt; 2.DOM Element 元素&lt;/h2&gt;
&lt;p&gt;了解 DOM 节点是什么之后，现在就是区分 DOM 节点和元素的时候了。&lt;br /&gt;
如果你理解了&lt;em&gt;节点&lt;/em&gt;术语，那么答案就很明显了：元素是特定类型的节点 —— 元素 (Node.ELEMENT_NODE)。以及文档、评论、文本等类型。&lt;br /&gt;
简单来说，元素是使用 HTML 文档中的标记编写的节点。&amp;lt;html&amp;gt;, &amp;lt;head&amp;gt;, &amp;lt;title&amp;gt;, &amp;lt;body&amp;gt;, &amp;lt;h2&amp;gt;,&amp;lt;p &amp;gt; 都是元素，因为它们是由标签表示的。&lt;br /&gt;
文档类型、注释、文本节点不是元素，因为它们不是用标签编写的：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- Page Body --&amp;gt;
    &amp;lt;p&amp;gt;Thank you for visiting my web page!&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Node 是节点 HTMLElement 的构造函数，是 JavaScript DOM 中元素的构造函数。一个段落，是一个节点，并且还一个元素，既是的一个实例 Node 和 HTMLElement：&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
paragraph instanceof Node; // =&amp;gt; true&lt;br /&gt;
paragraph instanceof HTMLElement; // =&amp;gt; true&lt;br /&gt;
 简单地说，元素是节点的子类型，就像猫是动物的子类型一样。&lt;/p&gt;
&lt;h2 id=&#34;3dom-属性节点和元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3dom-属性节点和元素&#34;&gt;#&lt;/a&gt; 3.DOM 属性：节点和元素&lt;/h2&gt;
&lt;p&gt;除了区分节点和元素之外，您还需要区分仅包含节点或仅包含元素的 DOM 属性。&lt;br /&gt;
以下 Node 类型的属性计算为一个节点或节点集合 (NodeList)：&lt;br /&gt;
node.parentNode; // Node or null&lt;br /&gt;
node.firstChild; // Node or null&lt;br /&gt;
node.lastChild; // Node or null&lt;br /&gt;
node.childNodes; // NodeList&lt;br /&gt;
 但是，以下属性是元素或元素集合 (HTMLCollection)：&lt;br /&gt;
node.parentElement; // HTMLElement or null&lt;br /&gt;
node.children; // HTMLCollection&lt;br /&gt;
 既然两者都 node.childNodes 返回 node.children 一个子列表，为什么这两个属性都有呢？好问题！&lt;br /&gt;
考虑以下包含一些文本的段落元素：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;p&amp;gt;
  &amp;lt;b&amp;gt;Thank you&amp;lt;/b&amp;gt; for visiting my web page!
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qc2l0b3IuY29tLzNtUHdvU1ZiWWg=&#34;&gt; demo&lt;/span&gt;，然后查看 parapgraph 节点的 childNodes 和属性：children&lt;br /&gt;
const paragraph = document.querySelector(&#39;p&#39;);&lt;br /&gt;
paragraph.childNodes; // NodeList: [HTMLElement, Text]&lt;br /&gt;
paragraph.children; // HTMLCollection: [HTMLElement]&lt;br /&gt;
 paragraph.childNodes 集合包含 2 个节点：&lt;br /&gt;
粗体元素 &amp;lt;b&amp;gt;Thank you&amp;lt;/b&amp;gt;，以及文本节点 for visiting my web page!。&lt;br /&gt;
但是，paragraph.children 集合仅包含一项：粗体元素 &amp;lt;b&amp;gt;Thank you&amp;lt;/b&amp;gt;。&lt;br /&gt;
因为 paragraph.children 只包含元素，所以这里没有包含文本节点，因为它的类型是文本 (Node.TEXT_NODE)，而不是元素 ( Node.ELEMENT_NODE)。&lt;br /&gt;
同时拥有 node.childNodes 并 node.children 让您选择要访问的子节点的集合：所有子节点或只有子节点是元素。&lt;/p&gt;
&lt;h2 id=&#34;4总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4总结&#34;&gt;#&lt;/a&gt; 4. 总结&lt;/h2&gt;
&lt;p&gt;DOM 文档是节点的分层集合。每个节点可以有一个父节点和 / 或子节点。&lt;br /&gt;
如果您了解节点是什么，就很容易理解 DOM 节点和元素之间的区别。&lt;br /&gt;
节点有类型，元素类型就是其中之一。该元素由 HTML 文档中的标记表示。&lt;br /&gt;
&lt;em&gt;​&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;测验：什么类型的节点永远没有父节点？&lt;/em&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Date/</guid>
            <title>Date</title>
            <link>https://www.oocii.com/yuque/Date/</link>
            <category term="JavaScript" scheme="https://www.oocii.com/categories/JavaScript/" />
            <category term="Standard built-in objects" scheme="https://www.oocii.com/categories/JavaScript/Standard-built-in-objects/" />
            <category term="Date" scheme="https://www.oocii.com/categories/JavaScript/Standard-built-in-objects/Date/" />
            <category term="Javascript" scheme="https://www.oocii.com/tags/Javascript/" />
            <category term="JS" scheme="https://www.oocii.com/tags/JS/" />
            <category term="ES" scheme="https://www.oocii.com/tags/ES/" />
            <category term="date" scheme="https://www.oocii.com/tags/date/" />
            <category term="timestamp" scheme="https://www.oocii.com/tags/timestamp/" />
            <pubDate>Mon, 10 Jan 2022 14:32:30 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法：&lt;/h2&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dateString&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;new &lt;span class=&#34;token function&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; monthIndex [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; day [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; hours [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; minutes [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; seconds [&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; milliseconds]]]]]&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZSMlRTUlOEYlODIlRTYlOTUlQjA=&#34;&gt;参数&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Date()&lt;/strong&gt; 构造函数有四种基本形式&lt;/p&gt;
&lt;h4 id=&#34;1-没有参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-没有参数&#34;&gt;#&lt;/a&gt; 1. 没有参数&lt;/h4&gt;
&lt;p&gt;如果没有提供参数，那么新创建的 Date 对象表示实例化时刻的日期和时间。&lt;/p&gt;
&lt;h4 id=&#34;2-unix-时间戳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-unix-时间戳&#34;&gt;#&lt;/a&gt; 2. Unix 时间戳&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;value&lt;/strong&gt;&lt;br /&gt;
 一个 Unix 时间戳（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wdWJzLm9wZW5ncm91cC5vcmcvb25saW5lcHVicy85Njk5OTE5Nzk5L2Jhc2VkZWZzL1YxX2NoYXAwNC5odG1sI3RhZ18wNF8xNg==&#34;&gt;Unix Time Stamp&lt;/span&gt;），它是一个整数值，表示自 1970 年 1 月 1 日 00:00:00 UTC（the Unix epoch）以来的毫秒数，忽略了闰秒。请注意大多数 Unix 时间戳功能仅精确到最接近的秒。&lt;/p&gt;
&lt;h4 id=&#34;3-时间戳字符串&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-时间戳字符串&#34;&gt;#&lt;/a&gt; 3. 时间戳字符串&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;dateString&lt;/strong&gt;&lt;br /&gt;
 表示日期的字符串值。该字符串应该能被 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS9wYXJzZQ==&#34;&gt;Date.parse()&lt;/span&gt; 正确方法识别（即符合 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI4MjIjcGFnZS0xNA==&#34;&gt;IETF-compliant RFC 2822 timestamps&lt;/span&gt; 或 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi81LjEvI3NlYy0xNS45LjEuMTU=&#34;&gt;version of ISO8601&lt;/span&gt;）。&lt;br /&gt;
&lt;strong&gt;注意:&lt;/strong&gt; 由于浏览器之间的差异与不一致性，强烈不推荐使用 Date 构造函数来解析日期字符串 (或使用与其等价的 Date.parse)。对 RFC 2822 格式的日期仅有约定俗成的支持。 对 ISO 8601 格式的支持中，仅有日期的串 (例如 &amp;quot;1970-01-01&amp;quot;) 会被处理为 UTC 而不是本地时间，与其他格式的串的处理不同。&lt;br /&gt;
** 如下：同一操作系统不同浏览器对字符串的解析都有所差异：**&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Chrome&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021-1-16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 00:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021-01-16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 08:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;FireFox&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021/1/16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 00:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;2021/01/16&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Sat Jan 16 2021 00:00:00 GMT+0800 (中国标准时间)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//.replace (&#39;-&#39;, &#39;/&#39;) 防止各浏览器差异 2021-1-16 解析成 UTC,GMT 的坑&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstTime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\-&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endTime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\-&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//iOS 某些系统版本的坑，以上两行 replace 不能直接放在以下 new Date () 里面&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; firstTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstTime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; endTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dateRange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;endTime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;4-分别提供日期与时间的每一个成员&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-分别提供日期与时间的每一个成员&#34;&gt;#&lt;/a&gt; 4. 分别提供日期与时间的每一个成员&lt;/h3&gt;
&lt;p&gt;当至少提供了年份与月份时，这一形式的 Date () 返回的 Date 对象中的每一个成员都来自下列参数。没有提供的成员将使用最小可能值（对日期为 1，其他为 0）。&lt;br /&gt;
&lt;strong&gt;year&lt;/strong&gt;&lt;br /&gt;
 表示年份的整数值。 0 到 99 会被映射至 1900 年至 1999 年，其它值代表实际年份。参见 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZSN0d29fZGlnaXRfeWVhcnNfbWFwX3RvXzE5MDBfLV8xOTk5&#34;&gt;示例&lt;/span&gt;。&lt;br /&gt;
&lt;strong&gt;monthIndex (年月日中这个值比较特别)&lt;/strong&gt;&lt;br /&gt;
 表示月份的整数值，从 0（1 月）到 11（12 月）。&lt;br /&gt;
&lt;strong&gt;date 可选&lt;/strong&gt;&lt;br /&gt;
表示一个月中的第几天的整数值，从 1 开始。默认值为 1。&lt;br /&gt;
&lt;strong&gt;hours 可选&lt;/strong&gt;&lt;br /&gt;
表示一天中的小时数的整数值 (24 小时制)。默认值为 0（午夜）。&lt;br /&gt;
&lt;strong&gt;minutes 可选&lt;/strong&gt;&lt;br /&gt;
表示一个完整时间（如 01:10:00）中的分钟部分的整数值。默认值为 0。&lt;br /&gt;
&lt;strong&gt;seconds 可选&lt;/strong&gt;&lt;br /&gt;
表示一个完整时间（如 01:10:00）中的秒部分的整数值。默认值为 0。&lt;br /&gt;
&lt;strong&gt;milliseconds 可选&lt;/strong&gt;&lt;br /&gt;
表示一个完整时间的毫秒部分的整数值。默认值为 0。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;一些比较有用的技巧或坑点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 &lt;strong&gt;date&lt;/strong&gt; 参数设置为 0 可得到上个月的最后一天，在做日历的时候非常有用.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// new Date(2022, 1, 1) // 2022/2/1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 2022/1/31&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;n&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;getPrevMonthLastDays&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;date&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; Date&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; amount&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;amount &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; tempDate &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;date&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setDate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; year &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getFullYear&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; month &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMonth&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; lastDay &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; tempDate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getDate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;amount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    year&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    month&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    date&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; lastDay &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;amount &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; index &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;em&gt;调用 Date 对象的 set 方法（&lt;/em&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS9zZXREYXRl&#34;&gt;setDate()&lt;/span&gt;&lt;em&gt;，&lt;/em&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS9zZXRGdWxsWWVhcg==&#34;&gt;setFullYear()&lt;/span&gt;_...）返回时间戳数字 如： _177610530000&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Tags..9/</guid>
            <title>Tags..9</title>
            <link>https://www.oocii.com/yuque/Tags..9/</link>
            <category term="img" scheme="https://www.oocii.com/tags/img/" />
            <pubDate>Thu, 06 Jan 2022 18:24:25 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a href=&#34;https://tva4.sinaimg.cn/large/7e4d62c9ly8gy6ebeudnqj219b0u0mzp.jpg&#34;&gt;&lt;br /&gt;
&lt;/a&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/7e4d62c9ly8gy6ebeudnqj219b0u0mzp.jpg#crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;id=sbikx&amp;amp;originHeight=1080&amp;amp;originWidth=1631&amp;amp;originalType=binary%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;some description&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;more detail&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/JavaScript/</guid>
            <title>JavaScript</title>
            <link>https://www.oocii.com/yuque/JavaScript/</link>
            <category term="JavaScript" scheme="https://www.oocii.com/categories/JavaScript/" />
            <category term="Javascript" scheme="https://www.oocii.com/tags/Javascript/" />
            <category term="JS" scheme="https://www.oocii.com/tags/JS/" />
            <category term="ES" scheme="https://www.oocii.com/tags/ES/" />
            <pubDate>Wed, 05 Jan 2022 11:18:49 +0800</pubDate>
            <description><![CDATA[  ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/CSS_display_%E5%B1%9E%E6%80%A7%E5%80%BC%E5%88%86%E7%B1%BB/</guid>
            <title>CSS_display_属性值分类</title>
            <link>https://www.oocii.com/yuque/CSS_display_%E5%B1%9E%E6%80%A7%E5%80%BC%E5%88%86%E7%B1%BB/</link>
            <category term="CSS" scheme="https://www.oocii.com/categories/CSS/" />
            <category term="CSS" scheme="https://www.oocii.com/tags/CSS/" />
            <pubDate>Tue, 04 Jan 2022 20:15:39 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;display&lt;/strong&gt; 属性可以设置元素的内部和外部显示类型 &lt;em&gt;display types&lt;/em&gt;。元素的外部显示类型 &lt;em&gt;outer display types&lt;/em&gt; 将决定该元素在流式布局中的表现（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19GbG93X0xheW91dA==&#34;&gt;块级或内联元素&lt;/span&gt;）；元素的内部显示类型 &lt;em&gt;inner display types&lt;/em&gt; 可以控制其子元素的布局（例如：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19GbG93X0xheW91dA==&#34;&gt;flow layout&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19HcmlkX0xheW91dA==&#34;&gt;grid&lt;/span&gt; 或 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL0NTU19GbGV4aWJsZV9Cb3hfTGF5b3V0&#34;&gt;flex&lt;/span&gt;）。&lt;br /&gt;
在 &lt;strong&gt;CSS 规范&lt;/strong&gt;（特指 CSS Level 1/2/3 规范）中查阅 &lt;strong&gt;display&lt;/strong&gt; 属性的所有取值时需要注意：个别取值的详细信息记录在独立的规范中。 例如，display: flex 的详细信息在 &lt;em&gt;CSS Flexible Box Model&lt;/em&gt; 规范中记录。可以在本文档末尾的表格中查看所有有关的规范。&lt;/p&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;p&gt;display 属性使用关键字取值来指定，关键字取值被分为六类：&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; [ &amp;lt;display-outside&gt; | &amp;lt;display-inside&gt; ] | &amp;lt;display-listitem&gt; |&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &amp;lt;display-internal&gt; | &amp;lt;display-box&gt; | &amp;lt;display-legacy&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;outside&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#outside&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjb3V0c2lkZQ==&#34;&gt;Outside&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktb3V0c2lkZQ==&#34;&gt;&amp;lt;display-outside&amp;gt;&lt;/span&gt;&lt;br /&gt;
 这些关键字指定了元素的外部显示类型，实际上就是其在流式布局中的角色（即在流式布局中的表现）。&lt;br /&gt;
&#39;page(&amp;quot;/zh-CN/docs/Web/CSS/display-outside&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;br /&gt;
&lt;strong&gt;&amp;lt;display-outside&amp;gt; 的可用值：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;block&lt;/strong&gt;&lt;br /&gt;
 这个值会生成一个块级元素盒子，同时在该元素之前和之后打断（换行）。简单来说就是，这个值会将该元素变成&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9CbG9jay1sZXZlbF9lbGVtZW50cw==&#34;&gt;块级元素&lt;/span&gt;。&lt;br /&gt;
&lt;strong&gt;inline&lt;/strong&gt;&lt;br /&gt;
 这个值会生成一个行内元素盒子，该元素之前和之后不会打断（换行）。如果空间充足，该元素后的元素将会在同一行显示。简单来说就是，这个值会将该元素变成&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9JbmxpbmVfZWxlbWVudHM=&#34;&gt;行内元素&lt;/span&gt;。&lt;br /&gt;
**run-in **&lt;br /&gt;
 这个值生成一个 run-in 盒子。如果其后的兄弟元素是块级盒子，那么这个 run-in 盒子就会以兄弟元素的第一个行内元素盒子的形式存在；如果其后的兄弟元素是行内元素，那么这个 run-in 盒子会变成块级元素。&lt;br /&gt;
run-in 元素的存在形式取决于相邻的元素，如果它的内部存在 block box，那么它会变成块级元素盒子。&lt;/p&gt;
&lt;h3 id=&#34;inside&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inside&#34;&gt;#&lt;/a&gt; Inside&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXktaW5zaWRl&#34;&gt;&amp;lt;display-inside&amp;gt;(en-US)&lt;/span&gt;&lt;br /&gt;
 这些关键字指定了元素的内部显示类型，它们定义了该元素内部内容的布局方式（假定该元素为非替换元素 non-replaced element）。&lt;br /&gt;
&#39;page(&amp;quot;/zh-CN/docs/Web/CSS/display-inside&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;br /&gt;
&lt;strong&gt;&amp;lt;display-inside&amp;gt; 的可用值：&lt;/strong&gt;&lt;br /&gt;
**flow **&lt;br /&gt;
 该元素使用流布局（块和内联布局）来布置其内容。&lt;br /&gt;
如果它的外部显示类型是 inline 或 run-in，并且它正在参与块或内联格式上下文，那么它会生成一个内联框。否则它会生成一个块容器框。&lt;br /&gt;
根据其他属性（例如&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Bvc2l0aW9u&#34;&gt; position&lt;/span&gt;、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Zsb2F0&#34;&gt;float&lt;/span&gt;、 或&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL292ZXJmbG93&#34;&gt; overflow&lt;/span&gt;）的值以及它本身是否参与块或内联格式化上下文，它要么为其内容建立新的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvR3VpZGUvQ1NTL0Jsb2NrX2Zvcm1hdHRpbmdfY29udGV4dA==&#34;&gt;块格式化上下文&lt;/span&gt; (BFC)，要么将其内容集成到其父格式化中语境。&lt;br /&gt;
&lt;strong&gt;flow-root&lt;/strong&gt;&lt;br /&gt;
 该元素生成一个块元素框，它建立一个新的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvR3VpZGUvQ1NTL0Jsb2NrX2Zvcm1hdHRpbmdfY29udGV4dA==&#34;&gt;块格式上下文&lt;/span&gt;，定义格式根所在的位置。&lt;br /&gt;
&lt;strong&gt;table&lt;/strong&gt;&lt;br /&gt;
 这些元素的行为类似于 HTML&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3RhYmxl&#34;&gt;&amp;lt;table&amp;gt;&lt;/span&gt; 元素。它定义了一个块级框。&lt;br /&gt;
&lt;strong&gt;flex&lt;/strong&gt;&lt;br /&gt;
 该元素的行为类似于块元素，并根据&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NTU19GbGV4aWJsZV9Cb3hfTGF5b3V0&#34;&gt; flexbox 模型布置&lt;/span&gt;其内容。&lt;br /&gt;
&lt;strong&gt;grid&lt;/strong&gt;&lt;br /&gt;
 该元素的行为类似于块元素，并根据&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NTU19HcmlkX0xheW91dC9CYXNpY19Db25jZXB0c19vZl9HcmlkX0xheW91dA==&#34;&gt;网格模型&lt;/span&gt;布置其内容。&lt;br /&gt;
**ruby **&lt;br /&gt;
 该元素的行为类似于内联元素，并根据 ruby 格式模型布置其内容。它的行为类似于相应的 HTML&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3J1Ynk=&#34;&gt;&amp;lt;ruby&amp;gt;&lt;/span&gt; 元素。&lt;/p&gt;
&lt;h3 id=&#34;list-item&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#list-item&#34;&gt;#&lt;/a&gt; List Item&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXktbGlzdGl0ZW0=&#34;&gt;&amp;lt;display-listitem&amp;gt;(en-US)&lt;/span&gt;&lt;br /&gt;
 将这个元素的外部显示类型变为 block 盒，并将内部显示类型变为多个 list-item inline 盒。&lt;br /&gt;
&#39;page(&amp;quot;/zh-CN/docs/Web/CSS/display-listitem&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;/p&gt;
&lt;h3 id=&#34;internal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#internal&#34;&gt;#&lt;/a&gt; Internal&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktaW50ZXJuYWw=&#34;&gt;&amp;lt;display-internal&amp;gt;&lt;/span&gt;&lt;br /&gt;
 有些布局模型（如 table 和 ruby）有着复杂的内部结构，因此它们的子元素可能扮演着不同的角色。这一类关键字就是用来定义这些 “内部” 显示类型，并且只有在这些特定的布局模型中才有意义。&lt;br /&gt;
Valid &amp;lt;display-internal&amp;gt; values:&lt;br /&gt;
&lt;strong&gt;table-row-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Rib2R5&#34;&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-header-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3RoZWFk&#34;&gt;&amp;lt;thead&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-footer-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Rmb290&#34;&gt;&amp;lt;tfoot&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-row&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Ry&#34;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-cell&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Rk&#34;&gt;&amp;lt;td&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-column-group&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2NvbGdyb3Vw&#34;&gt;&amp;lt;colgroup&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-column&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2NvbA==&#34;&gt;&amp;lt;col&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
&lt;strong&gt;table-caption&lt;/strong&gt;&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2NhcHRpb24=&#34;&gt;&amp;lt;caption&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
**ruby-base **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3Ji&#34;&gt;&amp;lt;rb&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
**ruby-text **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3J0&#34;&gt;&amp;lt;rt&amp;gt;&lt;/span&gt; HTML elements.&lt;br /&gt;
**ruby-base-container **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3JiYw==&#34;&gt;&amp;lt;rbc&amp;gt;&lt;/span&gt; HTML elements generated as anonymous boxes.&lt;br /&gt;
**ruby-text-container **&lt;br /&gt;
These elements behave like &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L3J0Yw==&#34;&gt;&amp;lt;rtc&amp;gt;&lt;/span&gt; HTML elements.&lt;/p&gt;
&lt;h3 id=&#34;box&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#box&#34;&gt;#&lt;/a&gt; Box&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktYm94&#34;&gt;&amp;lt;display-box&amp;gt;&lt;/span&gt;&lt;br /&gt;
 这些值决定元素是否使用盒模型。&lt;br /&gt;
Valid &amp;lt;display-box&amp;gt; values:&lt;br /&gt;
&lt;strong&gt;contents&lt;/strong&gt;&lt;br /&gt;
These elements don&#39;t produce a specific box by themselves. They are replaced by their pseudo-box and their child boxes. Please note that the CSS Display Level 3 spec defines how the contents value should affect &amp;quot;unusual elements&amp;quot; — elements that aren’t rendered purely by CSS box concepts such as replaced elements. See &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1kaXNwbGF5LyN1bmJveA==&#34;&gt;Appendix B: Effects of display: contents on Unusual Elements&lt;/span&gt; for more details.&lt;br /&gt;
&lt;em&gt;Due to a bug in browsers this will currently remove the element from the accessibility tree — screen readers will not look at what&#39;s inside. See the &lt;em&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjYWNjZXNzaWJpbGl0eV9jb25jZXJucw==&#34;&gt;Accessibility concerns&lt;/span&gt;&lt;/em&gt; section below for more details.&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;none&lt;/strong&gt;&lt;br /&gt;
Turns off the display of an element so that it has no effect on layout (the document is rendered as though the element did not exist). All descendant elements also have their display turned off. To have an element take up the space that it would normally take, but without actually rendering anything, use the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL3Zpc2liaWxpdHk=&#34;&gt;visibility&lt;/span&gt; property instead.&lt;/p&gt;
&lt;h3 id=&#34;legacy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#legacy&#34;&gt;#&lt;/a&gt; Legacy&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktbGVnYWN5&#34;&gt;&amp;lt;display-legacy&amp;gt;&lt;/span&gt;&lt;br /&gt;
CSS 2 对于 &lt;strong&gt;display&lt;/strong&gt; 属性使用单关键字语法，对于相同布局模式的 block 级和 inline 级变体需要使用单独的关键字。&lt;br /&gt;
&#39;page(&amp;quot;/en-US /docs/Web/CSS/display-legacy&amp;quot;, &amp;quot;Syntax&amp;quot;)&#39;&lt;/p&gt;
&lt;h3 id=&#34;是否该继续使用-legacy-取值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#是否该继续使用-legacy-取值&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjJUU2JTk4JUFGJUU1JTkwJUE2JUU4JUFGJUE1JUU3JUJCJUE3JUU3JUJCJUFEJUU0JUJEJUJGJUU3JTk0JUE4X2xlZ2FjeV8lRTUlOEYlOTYlRTUlODAlQkMlRUYlQkMlOUY=&#34;&gt;是否该继续使用 Legacy 取值？&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;CSS Level 3 规范详细说明了 display 属性的两类取值 —— 显式地指定了外部和内部显示属性的规范 —— 但是还没有被浏览器广泛支持。&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXktbGVnYWN5&#34;&gt;&amp;lt;display-legacy&amp;gt;&lt;/span&gt; 方法允许使用单个关键字达到相同效果，开发者应该在双关键字取值被广泛支持之前采用这个方法。举例来说，你可以这样指定 inline flex 容器：&lt;br /&gt;
.container { display: inline-flex; }&lt;br /&gt;
Copy to Clipboard&lt;br /&gt;
 也可以用两个关键字来指定。&lt;br /&gt;
Copy to Clipboard&lt;br /&gt;
.container { display: inline flex; }&lt;br /&gt;
 有关规范变更的更多信息，查阅文章 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2Rpc3BsYXkvdHdvLXZhbHVlX3N5bnRheF9vZl9kaXNwbGF5&#34;&gt;Adapting to the new two-value syntax of display (en-US)&lt;/span&gt;。&lt;/p&gt;
&lt;h3 id=&#34;全局设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局设置&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXkjJUU1JTg1JUE4JUU1JUIxJTgwJUU4JUFFJUJFJUU3JUJEJUFF&#34;&gt;全局设置&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;/_ Global values _/ display: inherit; display: initial; display: unset;&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/default/%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87%20Block%20formatting%20context(BFC)/</guid>
            <title>块格式化上下文 Block formatting context(BFC)</title>
            <link>https://www.oocii.com/default/%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87%20Block%20formatting%20context(BFC)/</link>
            <category term="CSS" scheme="https://www.oocii.com/categories/CSS/" />
            <category term="formatting context" scheme="https://www.oocii.com/categories/CSS/formatting-context/" />
            <category term="CSS" scheme="https://www.oocii.com/tags/CSS/" />
            <category term="BFC" scheme="https://www.oocii.com/tags/BFC/" />
            <pubDate>Thu, 30 Dec 2021 15:03:01 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;block formatting contexts&lt;/strong&gt; 是 &lt;strong&gt;formatting contexts&lt;/strong&gt; 格式化上下文的概念之一，&lt;strong&gt;formatting contexts&lt;/strong&gt; 其中有几种类型，包括块格式化上下文 block formatting contexts、内联格式化上下文 inline formatting contexts 和灵活格式化上下文 flex formatting contexts。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;块格式化上下文（Block formatting context，BFC）&lt;/strong&gt; 是 Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;文档最外层元素使用块布局规则或称为&lt;strong&gt;初始块格式上下文&lt;/strong&gt;。这意味着 &amp;lt;html&amp;gt; 元素块中的每个元素都是按照正常流程遵循块和内联布局规则进行布局的。参与 BFC 的元素使用 CSS 框模型概述的规则，该模型定义了元素的边距、边框和填充如何与同一上下文中的其他块交互。&lt;/p&gt;
&lt;h3 id=&#34;创建新的块格式上下文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建新的块格式上下文&#34;&gt;#&lt;/a&gt; 创建新的块格式上下文&lt;/h3&gt;
&lt;p&gt;&amp;lt;html&amp;gt; 元素不是唯一能够创建块格式上下文的元素。默认为块布局的任何元素也会为其后代元素创建块格式上下文。此外，还有一些 CSS 属性可以使元素创建一个 BFC，即使默认情况下它不这样做。&lt;br /&gt;
以下方式会创建&lt;strong&gt;块格式化上下文&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根元素（&amp;lt;html&amp;gt;）&lt;/li&gt;
&lt;li&gt;浮动元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Zsb2F0&#34;&gt;float&lt;/span&gt; 不是 none）&lt;/li&gt;
&lt;li&gt;绝对定位元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL3Bvc2l0aW9u&#34;&gt;position&lt;/span&gt; 为 absolute 或 fixed）&lt;/li&gt;
&lt;li&gt;行内块元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 inline-block）&lt;/li&gt;
&lt;li&gt;表格单元格（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 table-cell，HTML 表格单元格默认为该值）&lt;/li&gt;
&lt;li&gt;表格标题（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 table-caption，HTML 表格标题默认为该值）&lt;/li&gt;
&lt;li&gt;匿名表格单元格元素（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL292ZXJmbG93&#34;&gt;overflow&lt;/span&gt; 计算值 (Computed) 不为 visible 的块元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 值为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1kaXNwbGF5LyN2YWxkZWYtZGlzcGxheS1mbG93LXJvb3Q=&#34;&gt;flow-root&lt;/span&gt; 的元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2NvbnRhaW4=&#34;&gt;contain&lt;/span&gt; 值为 layout、content 或 paint 的元素&lt;/li&gt;
&lt;li&gt;弹性元素（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 flex 或 inline-flex 元素的直接子元素）&lt;/li&gt;
&lt;li&gt;网格元素（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2Rpc3BsYXk=&#34;&gt;display&lt;/span&gt; 为 grid 或 inline-grid 元素的直接子元素）&lt;/li&gt;
&lt;li&gt;多列容器（元素的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL2NvbHVtbi1jb3VudA==&#34;&gt;column-count&lt;/span&gt; 或 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2NvbHVtbi13aWR0aA==&#34;&gt;column-width(en-US)&lt;/span&gt; 不为 auto，包括 column-count 为 1）&lt;/li&gt;
&lt;li&gt;column-span 为 all 的元素始终会创建一个新的 BFC，即使该元素没有包裹在一个多列容器中（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3czYy9jc3N3Zy1kcmFmdHMvY29tbWl0L2E4NjM0Yjk2OTAwMjc5OTE2YmQ2YzUwNWZkYTg4ZGRhNzFkOGVjNTE=&#34;&gt;标准变更&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NzA5MzYy&#34;&gt;Chrome bug&lt;/span&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bfc-创建例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bfc-创建例子&#34;&gt;#&lt;/a&gt; BFC 创建例子&lt;/h3&gt;
&lt;p&gt;让我们看看几个例子，来理解创建 BFC 的效果。&lt;br /&gt;
在下面的示例中，我们在应用了边框的 &amp;lt;div&amp;gt; 中有一个浮动元素。该 div 的内容与浮动元素一起浮动。由于 float 的内容比它旁边的内容高，所以现在 DIV 的边框贯穿了 float。如流入和流出元素指南&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL0NTU19GbG93X0xheW91dC9Jbl9GbG93X2FuZF9PdXRfb2ZfRmxvdw==&#34;&gt; guide to in-flow and out of flow elements&lt;/span&gt; 中所述，浮动已脱离文档流，因此 DIV 的背景和边框仅包含内容，而不包含浮动。&lt;br /&gt;
&lt;img data-src=&#34;/images/default/Block-formatting-context(BFC)-image.png&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 创建一个新的 BFC 将包含该浮动。在过去，一种典型的方法是设置 overflow: auto 或设置其他不是 overflow: visible 的值。&lt;br /&gt;
&lt;img data-src=&#34;/images/default/Block-formatting-context(BFC)-image1.png&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 设置 overflow: auto 会自动创建包含浮动的新 BFC。现在，我们的 DIV 在布局中变成了一个迷你布局。任何子元素都将包含在其中。&lt;br /&gt;
使用 overflow 创建新的 BFC 的问题在于， overflow 属性用于告诉浏览器您希望如何处理溢出的内容。在某些情况下，当您纯粹使用此属性创建 BFC 时，您会发现不需要的滚动条或剪切阴影。另外，对于未来的开发人员来说，它可能不太可读，因为不能显式地表明为什么要使用溢出来实现这一目的。如果您使用了这个方法，最好对代码进行注释以便他人理解。&lt;br /&gt;
​&lt;/p&gt;
&lt;h3 id=&#34;使用-displayflow-root-显式创建-bfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-displayflow-root-显式创建-bfc&#34;&gt;#&lt;/a&gt; 使用 display:flow-root 显式创建 BFC&lt;/h3&gt;
&lt;p&gt;使用 display: flow-root （或 display: flow-root list-item）将创建一个新的 BFC，而不会产生任何其他潜在的问题副作用。&lt;br /&gt;
&lt;img data-src=&#34;/images/default/Block-formatting-context(BFC)-image2.png&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9FbGVtZW50L2Rpdg==&#34;&gt;&amp;lt;div&amp;gt;&lt;/span&gt; 上的 display: flow-root ，该容器内的所有内容都参与该容器的块格式上下文，并且浮动不会从元素底部弹出。&lt;br /&gt;
flow-root 关键字的意义是，创建的内容本质上类似于一个新的根元素（如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSFRNTC9FbGVtZW50L2h0bWw=&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; 所做），并确定这个新的上下文如何创建及其流布局如何实现。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/DOM/</guid>
            <title>DOM</title>
            <link>https://www.oocii.com/yuque/DOM/</link>
            <pubDate>Sat, 25 Dec 2021 18:04:40 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;文档对象模型 (&lt;em&gt;DOM)&lt;/em&gt;&lt;/strong&gt; 将 web 页面与到脚本或编程语言连接起来。通常是指 JavaScript，但将 HTML、SVG 或 XML 文档建模为对象并不是 JavaScript 语言的一部分。DOM 模型用一个逻辑树来表示一个文档，树的每个分支的终点都是一个节点 (node)，每个节点都包含着对象 (objects)。DOM 的方法 (methods) 让你可以用特定方式操作这个树，用这些方法你可以改变文档的结构、样式或者内容。节点可以关联上事件处理器，一旦某一事件被触发了，那些事件处理器就会被执行。&lt;/p&gt;
&lt;h2 id=&#34;dom-接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom-接口&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50X09iamVjdF9Nb2RlbCNkb21fJUU2JThFJUE1JUU1JThGJUEz&#34;&gt;DOM 接口&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0F0dHI=&#34;&gt;Attr&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NoYXJhY3RlckRhdGE=&#34;&gt;CharacterData&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;ChildNode&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NvbW1lbnQ=&#34;&gt;Comment&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50&#34;&gt;CustomEvent&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50&#34;&gt;Document&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50RnJhZ21lbnQ=&#34;&gt;DocumentFragment&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50VHlwZQ==&#34;&gt;DocumentType&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTUVycm9y&#34;&gt;DOMError&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTUV4Y2VwdGlvbg==&#34;&gt;DOMException&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTUltcGxlbWVudGF0aW9u&#34;&gt;DOMImplementation&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVN0cmluZw==&#34;&gt;DOMString&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVRpbWVTdGFtcA==&#34;&gt;DOMTimeStamp&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;DOMSettableTokenList&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVN0cmluZ0xpc3Q=&#34;&gt;DOMStringList&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RPTVRva2VuTGlzdA==&#34;&gt;DOMTokenList&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0VsZW1lbnQ=&#34;&gt;Element&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0V2ZW50&#34;&gt;Event&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0V2ZW50VGFyZ2V0&#34;&gt;EventTarget&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hUTUxDb2xsZWN0aW9u&#34;&gt;HTMLCollection&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL011dGF0aW9uT2JzZXJ2ZXI=&#34;&gt;MutationObserver&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL011dGF0aW9uUmVjb3Jk&#34;&gt;MutationRecord&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGU=&#34;&gt;Node&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGVGaWx0ZXI=&#34;&gt;NodeFilter&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGVJdGVyYXRvcg==&#34;&gt;NodeIterator&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vZGVMaXN0&#34;&gt;NodeList&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;ParentNode&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Byb2Nlc3NpbmdJbnN0cnVjdGlvbg==&#34;&gt;ProcessingInstruction(en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZQ==&#34;&gt;Promise(en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZQ==&#34;&gt;PromiseResolver(en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Jhbmdl&#34;&gt;Range&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RleHQ=&#34;&gt;Text&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RyZWVXYWxrZXI=&#34;&gt;TreeWalker&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1VSTA==&#34;&gt;URL&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dpbmRvdw==&#34;&gt;Window&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dvcmtlcg==&#34;&gt;Worker&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1hNTERvY3VtZW50&#34;&gt;XMLDocument&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Web%20APIs/</guid>
            <title>Web APIs</title>
            <link>https://www.oocii.com/yuque/Web%20APIs/</link>
            <pubDate>Sat, 25 Dec 2021 18:00:56 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJ&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API&lt;/span&gt;&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;B&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0JhY2tncm91bmRfRmV0Y2hfQVBJ&#34;&gt;Background Fetch API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0JhY2tncm91bmRfVGFza3NfQVBJ&#34;&gt;Background Tasks&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0JhcmNvZGVfRGV0ZWN0aW9uX0FQSQ==&#34;&gt;Barcode Detection API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0JhdHRlcnlfU3RhdHVzX0FQSQ==&#34;&gt;Battery API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0JlYWNvbl9BUEk=&#34;&gt;Beacon&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9CbHVldG9vdGhfQVBJ&#34;&gt;Bluetooth API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0Jyb2FkY2FzdF9DaGFubmVsX0FQSQ==&#34;&gt;Broadcast Channel API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NTU19Db3VudGVyX1N0eWxlcw==&#34;&gt;CSS Counter Styles (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NTU19Gb250X0xvYWRpbmdfQVBJ&#34;&gt;CSS Font Loading API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NTU19QYWludGluZ19BUEk=&#34;&gt;CSS Painting API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NTU19UeXBlZF9PTV9BUEk=&#34;&gt;CSS Typed Object Model API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NTU19PYmplY3RfTW9kZWw=&#34;&gt;CSSOM&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NhbnZhc19BUEk=&#34;&gt;Canvas API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NoYW5uZWxfTWVzc2FnaW5nX0FQSQ==&#34;&gt;Channel Messaging API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NsaXBib2FyZF9BUEk=&#34;&gt;Clipboard API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NvbnNvbGVfQVBJ&#34;&gt;Console API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NvbnRhY3RfUGlja2VyX0FQSQ==&#34;&gt;Contact Picker API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NvbnRlbnRfSW5kZXhfQVBJ&#34;&gt;Content Index API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NyZWRlbnRpYWxfTWFuYWdlbWVudF9BUEk=&#34;&gt;Credential Management API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;D&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50X09iamVjdF9Nb2RlbA==&#34;&gt;DOM&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VuY29kaW5nX0FQSQ==&#34;&gt;Encoding API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VuY3J5cHRlZF9NZWRpYV9FeHRlbnNpb25zX0FQSQ==&#34;&gt;Encrypted Media Extensions (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0V5ZURyb3BwZXJfQVBJ&#34;&gt;EyeDropper API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;F&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ZldGNoX0FQSQ==&#34;&gt;Fetch API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZpbGVfU3lzdGVtX0FjY2Vzc19BUEk=&#34;&gt;File System Access API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ZpbGVfYW5kX0RpcmVjdG9yeV9FbnRyaWVzX0FQSQ==&#34;&gt;File and Directory Entries API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0Z1bGxzY3JlZW5fQVBJ&#34;&gt;Fullscreen API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;G&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dhbWVwYWRfQVBJ&#34;&gt;Gamepad API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dlb2xvY2F0aW9uX0FQSQ==&#34;&gt;Geolocation API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;H&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEk=&#34;&gt;HTML Drag and Drop API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfU2FuaXRpemVyX0FQSQ==&#34;&gt;HTML Sanitizer API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlX0FQSQ==&#34;&gt;High Resolution Time&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hpc3RvcnlfQVBJ&#34;&gt;History API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhU3RyZWFtX0ltYWdlX0NhcHR1cmVfQVBJ&#34;&gt;Image Capture API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0luZGV4ZWREQl9BUEk=&#34;&gt;IndexedDB&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEk=&#34;&gt;Intersection Observer API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0xheW91dF9JbnN0YWJpbGl0eV9BUEk=&#34;&gt;Layout Instability API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0xvbmdfVGFza3NfQVBJ&#34;&gt;Long Tasks API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;M&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhX0NhcGFiaWxpdGllc19BUEk=&#34;&gt;Media Capabilities API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL01lZGlhX1N0cmVhbXNfQVBJ&#34;&gt;Media Capture and Streams&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01lZGlhX1Nlc3Npb25fQVBJ&#34;&gt;Media Session API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL01lZGlhX1NvdXJjZV9FeHRlbnNpb25zX0FQSQ==&#34;&gt;Media Source Extensions&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL01lZGlhU3RyZWFtX1JlY29yZGluZ19BUEk=&#34;&gt;MediaStream Recording&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;N&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05hdmlnYXRpb25fdGltaW5nX0FQSQ==&#34;&gt;Navigation Timing&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05ldHdvcmtfSW5mb3JtYXRpb25fQVBJ&#34;&gt;Network Information API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BhZ2VfVmlzaWJpbGl0eV9BUEk=&#34;&gt;Page Visibility API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BheW1lbnRfUmVxdWVzdF9BUEk=&#34;&gt;Payment Request API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlX0FQSQ==&#34;&gt;Performance API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BlcmZvcm1hbmNlX1RpbWVsaW5l&#34;&gt;Performance Timeline API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9QZXJpb2RpY19CYWNrZ3JvdW5kX1N5bmNocm9uaXphdGlvbl9BUEk=&#34;&gt;Periodic Background Sync (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Blcm1pc3Npb25zX0FQSQ==&#34;&gt;Permissions API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1BpY3R1cmUtaW4tUGljdHVyZV9BUEk=&#34;&gt;Picture-in-Picture API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BvaW50ZXJfZXZlbnRz&#34;&gt;Pointer Events&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1BvaW50ZXJfTG9ja19BUEk=&#34;&gt;Pointer Lock API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1ByZXNlbnRhdGlvbl9BUEk=&#34;&gt;Presentation API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Byb3hpbWl0eV9FdmVudHM=&#34;&gt;Proximity Events (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1B1c2hfQVBJ&#34;&gt;Push API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;R&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Jlc2l6ZV9PYnNlcnZlcl9BUEk=&#34;&gt;Resize Observer API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1Jlc291cmNlX1RpbWluZ19BUEk=&#34;&gt;Resource Timing API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;S&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NjcmVlbl9DYXB0dXJlX0FQSQ==&#34;&gt;Screen Capture API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1NjcmVlbl9PcmllbnRhdGlvbl9BUEk=&#34;&gt;Screen Orientation API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1NjcmVlbl9XYWtlX0xvY2tfQVBJ&#34;&gt;Screen Wake Lock API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NlbnNvcl9BUElz&#34;&gt;Sensor API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NlcnZlci1zZW50X2V2ZW50cw==&#34;&gt;Server Sent Events&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1NlcnZpY2VfV29ya2VyX0FQSQ==&#34;&gt;Service Workers API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1N0b3JhZ2VfQVBJ&#34;&gt;Storage&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1N0b3JhZ2VfQWNjZXNzX0FQSQ==&#34;&gt;Storage Access API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1N0cmVhbXNfQVBJ&#34;&gt;Streams&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;T&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1RvdWNoX2V2ZW50cw==&#34;&gt;Touch Events&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;U&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1VSTF9BUEk=&#34;&gt;URL API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1VSTF9QYXR0ZXJuX0FQSQ==&#34;&gt;URL Pattern API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;V&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1ZpYnJhdGlvbl9BUEk=&#34;&gt;Vibration API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1Zpc3VhbF9WaWV3cG9ydF9BUEk=&#34;&gt;Visual Viewport (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;W&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BbmltYXRpb25zX0FQSQ==&#34;&gt;Web Animations&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BdWRpb19BUEk=&#34;&gt;Web Audio API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BdXRoZW50aWNhdGlvbl9BUEk=&#34;&gt;Web Authentication API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9DcnlwdG9fQVBJ&#34;&gt;Web Crypto API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9NSURJX0FQSQ==&#34;&gt;Web MIDI API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vdGlmaWNhdGlvbnNfQVBJ&#34;&gt;Web Notifications&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYl9TaGFyZV9BUEk=&#34;&gt;Web Share API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9TcGVlY2hfQVBJ&#34;&gt;Web Speech API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9TdG9yYWdlX0FQSQ==&#34;&gt;Web Storage API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9Xb3JrZXJzX0FQSQ==&#34;&gt;Web Workers API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYkNvZGVjc19BUEk=&#34;&gt;WebCodecs API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYkdMX0FQSQ==&#34;&gt;WebGL&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYkhJRF9BUEk=&#34;&gt;WebHID API (en-US)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlJUQ19BUEk=&#34;&gt;WebRTC&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlZSX0FQSQ==&#34;&gt;WebVR API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlZUVF9BUEk=&#34;&gt;WebVTT&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlhSX0RldmljZV9BUEk=&#34;&gt;WebXR Device API&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlNvY2tldHNfQVBJ&#34;&gt;Websockets API&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;X&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0&#34;&gt;XMLHttpRequest&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E6%8B%96%E6%94%BE%20Drag%20and%20Drop/</guid>
            <title>拖放 Drag and Drop</title>
            <link>https://www.oocii.com/yuque/%E6%8B%96%E6%94%BE%20Drag%20and%20Drop/</link>
            <pubDate>Sat, 25 Dec 2021 17:52:47 +0800</pubDate>
            <description><![CDATA[ &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;事件&lt;/th&gt;
&lt;th&gt;On 型事件处理程序&lt;/th&gt;
&lt;th&gt;触发时刻&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdfZXZlbnQ=&#34;&gt;drag (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFn&#34;&gt;ondrag&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽元素或选中的文本时触发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdlbmRfZXZlbnQ=&#34;&gt;dragend (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnZW5k&#34;&gt;ondragend(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽操作结束时触发 (比如松开鼠标按键或敲 “Esc” 键). (见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2RyYWdlbmQ=&#34;&gt;结束拖拽 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdlbnRlcl9ldmVudA==&#34;&gt;dragenter (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnZW50ZXI=&#34;&gt;ondragenter(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽元素或选中的文本到一个可释放目标时触发（见 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2Ryb3B0YXJnZXRz&#34;&gt;指定释放目标 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvUmVmZXJlbmNlL0V2ZW50cy9kcmFnZXhpdA==&#34;&gt;dragexit&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnbGVhdmU=&#34;&gt;ondragexit(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当元素变得不再是拖拽操作的选中目标时触发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdsZWF2ZV9ldmVudA==&#34;&gt;dragleave (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnbGVhdmU=&#34;&gt;ondragleave&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当拖拽元素或选中的文本离开一个可释放目标时触发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdvdmVyX2V2ZW50&#34;&gt;dragover (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnb3Zlcg==&#34;&gt;ondragover(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当元素或选中的文本被拖到一个可释放目标上时触发（每 100 毫秒触发一次）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2RyYWdzdGFydF9ldmVudA==&#34;&gt;dragstart (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcmFnc3RhcnQ=&#34;&gt;ondragstart(en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当用户开始拖拽一个元素或选中的文本时触发（见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2RyYWdzdGFydA==&#34;&gt;开始拖拽操作 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0RvY3VtZW50L2Ryb3BfZXZlbnQ=&#34;&gt;drop (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dsb2JhbEV2ZW50SGFuZGxlcnMvb25kcm9w&#34;&gt;ondrop&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;当元素或选中的文本在可释放目标上被释放时触发（见&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxfRHJhZ19hbmRfRHJvcF9BUEkvRHJhZ19vcGVyYXRpb25zI2Ryb3A=&#34;&gt;执行释放 (en-US)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/10%20%E7%A7%8D%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</guid>
            <title>10 种常见软件架构模式</title>
            <link>https://www.oocii.com/yuque/10%20%E7%A7%8D%E5%B8%B8%E8%A7%81%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</link>
            <category term="软件架构模式" scheme="https://www.oocii.com/categories/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/" />
            <category term="Software Architecture Patterns" scheme="https://www.oocii.com/tags/Software-Architecture-Patterns/" />
            <category term="Architecture" scheme="https://www.oocii.com/tags/Architecture/" />
            <category term="架构设计" scheme="https://www.oocii.com/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" />
            <category term="架构模式" scheme="https://www.oocii.com/tags/%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/" />
            <pubDate>Thu, 23 Dec 2021 13:29:10 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;快速总结：- 软件架构模式在其随着时间的推移扩展和满足用户需求的能力中起着至关重要的作用。本文涵盖了不同类型的软件架构模式、它们的重要性和比较分析，以帮助您选择最佳模式。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;你必须知道的-10-种最佳软件架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你必须知道的-10-种最佳软件架构模式&#34;&gt;#&lt;/a&gt; 你必须知道的 10 种最佳软件架构模式&lt;/h2&gt;
&lt;h2 id=&#34;快速链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速链接&#34;&gt;#&lt;/a&gt; 快速链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#sectiona&#34;&gt;介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionb&#34;&gt;什么是架构模式？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionc&#34;&gt;软件架构模式的重要性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectiond&#34;&gt;软件架构模式与设计模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;不同类型的软件架构模式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionf&#34;&gt;1. 分层架构模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectiong&#34;&gt;2. 事件驱动架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionh&#34;&gt;3. 微内核架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectioni&#34;&gt;4. 微服务架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionj&#34;&gt;5. 基于空间的架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionk&#34;&gt;6. 客户端 - 服务器架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionl&#34;&gt;7. 主从架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionm&#34;&gt;8. 管道过滤器架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionn&#34;&gt;9. 经纪人架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectiono&#34;&gt;10. 点对点架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sectionp&#34;&gt;不同软件架构模式对比分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任何软件中的缺陷都会对组织的业务产生重大影响。任何软件失败的主要原因都可能是选择了错误的软件架构模式。但是有了先验知识，您将能够指导设计人员和开发人员设计组件及其反应方式。&lt;br /&gt;
经常看到公司在没有正式架构的情况下开始应用程序开发过程。然而，他们往往会忽略架构模式的缺失会迫使开发团队采用没有指导方针的传统模式。最终，他们的代码缺乏明确的角色、责任和彼此之间的关系。&lt;br /&gt;
例如，在线银行应用程序不需要像微服务模式这样的复杂架构。它可以简单地使用客户端 - 服务器架构来获取请求。但是，如果没有这种规划，应用程序可能会变得复杂，无法返回或失去重组过程中的巨额投资。规划架构模式有助于事先分析风险并避免对业务产生任何不利影响。&lt;br /&gt;
为了有一个清晰的理解，让我们探索一下什么是软件架构模式以及对其中一些类型的完整解释。&lt;/p&gt;
&lt;h2 id=&#34;什么是架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是架构模式&#34;&gt;#&lt;/a&gt; 什么是架构模式？&lt;/h2&gt;
&lt;p&gt;架构模式可以称为大纲，它允许您表达和定义各种软件系统的结构模式。它是一个可重用的解决方案，提供了一组预定义的子系统、角色和职责，包括用于定义它们之间关系的规则和路线图。它可以帮助您解决各种软件工程问题，例如性能限制、高可用性、最小化业务风险等。&lt;br /&gt;
即使架构模式是系统的粗略图像或蓝图，它也不是实际的架构。相反，它是一个帮助您理解软件架构元素的概念。可以有无数的架构实现相同的模式。这就是为什么模式被称为 “严格描述和常用” 的原因。系统的成功取决于软件架构的选择。&lt;br /&gt;
架构模式的著名示例是微服务、消息总线、服务请求者 / 消费者、MVC 模式、MVVM、微内核、n 层、领域驱动的设计组件和表示抽象控制。&lt;/p&gt;
&lt;h2 id=&#34;软件架构模式的重要性是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件架构模式的重要性是什么&#34;&gt;#&lt;/a&gt; 软件架构模式的重要性是什么？&lt;/h2&gt;
&lt;p&gt;软件架构模式具有重要意义，因为它可以解决不同领域内的各种问题。例如，复杂的用户请求可以轻松地分割成更小的块并分布在多个服务器上，而不是依赖于单个服务器。在另一个示例中，可以通过划分软件的各个部分而不是一次测试整个事物来简化测试协议。&lt;br /&gt;
以下是为什么软件架构模式对任何软件应用程序都至关重要的更多原因：&lt;/p&gt;
&lt;h3 id=&#34;定义应用程序的基本特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义应用程序的基本特征&#34;&gt;#&lt;/a&gt; &lt;strong&gt;定义应用程序的基本特征：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;了解每种架构的特征、优势和劣势对于选择合适的架构来满足您的业务目标非常重要。据观察，架构模式有助于定义应用程序的基本特征和行为。例如，一些架构模式可以自然地用于高度可扩展的应用程序，而其他架构模式可以用于敏捷应用程序。&lt;/p&gt;
&lt;h3 id=&#34;保持质量和效率&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#保持质量和效率&#34;&gt;#&lt;/a&gt; &lt;strong&gt;保持质量和效率：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;您构建的任何应用程序都极有可能面临质量问题。根据您的软件开发质量属性，选择架构模式可以帮助最大限度地减少质量问题，同时保持效率。&lt;/p&gt;
&lt;h3 id=&#34;提供敏捷性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提供敏捷性&#34;&gt;#&lt;/a&gt; &lt;strong&gt;提供敏捷性：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;软件应用程序在软件开发期间甚至在生产之后经历大量修改和迭代是很自然的。因此，预先规划核心软件架构可为应用程序提供敏捷性，并使未来的审核毫不费力。&lt;/p&gt;
&lt;h3 id=&#34;问题解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题解决&#34;&gt;#&lt;/a&gt; &lt;strong&gt;问题解决：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;对软件架构的事先规划和知识可以清楚地了解应用程序及其组件将如何运行。有了适当的架构，开发团队可以采用最佳实践来解决复杂的流程并解决未来的任何错误。&lt;/p&gt;
&lt;h3 id=&#34;提高生产力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提高生产力&#34;&gt;#&lt;/a&gt; &lt;strong&gt;提高生产力：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;不管一个人拥有关于编程语言、框架或应用程序的技能和知识，都必须有一定的标准化原则。有了合适的应用模式，公司可以快速掌握项目的状态。此外，当架构模式到位以明确项目范围时，生产率会提高。&lt;/p&gt;
&lt;h2 id=&#34;软件架构模式与设计模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件架构模式与设计模式&#34;&gt;#&lt;/a&gt; 软件架构模式与设计模式&lt;/h2&gt;
&lt;p&gt;架构模式和设计模式之间只有一线之隔，大多数人会混淆这两者。对于基础知识，让我们假设您的团队有一项任务是建造一所房子并住在里面。&lt;br /&gt;
首先，他们必须先计划好，然后再将砖块和水泥放在空地上。此外，即使在规划好房子之后，还有更多的东西要让它值得居住 —— 他们需要基本的便利设施，比如厨房用具、床上用品、洗浴用品等等。在这个类比中，房子应该看起来如何代表建筑模式，而房子的室内设计代表设计模式。&lt;br /&gt;
在软件系统中，当您必须创建业务逻辑、数据库逻辑、UI 等时考虑架构，而在实现业务逻辑或数据库逻辑时使用软件设计模式。&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350631-32cb2992-8183-4179-9e22-c1c32e2e6ad2.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u90b389aa&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=939&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u8254016b-ea6a-4f78-b60e-e30e68730c9&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;不同类型的软件架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不同类型的软件架构模式&#34;&gt;#&lt;/a&gt; 不同类型的软件架构模式&lt;/h2&gt;
&lt;p&gt;让我们讨论一些帮助许多软件企业扩展业务的流行架构模式：&lt;/p&gt;
&lt;h3 id=&#34;1分层架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1分层架构模式&#34;&gt;#&lt;/a&gt; 1. 分层架构模式&lt;/h3&gt;
&lt;p&gt;您可能听说过多层，也称为分层架构或 n 层架构。这种架构在设计师和软件架构师中广受欢迎，因为它与许多初创公司和成熟企业中的传统 IT 通信安排有共同点。通常，分层架构分为四个不同的层：表示层、业务层、持久性层和数据库层；但是，该模式并不局限于指定的层，可以有应用层或服务层或数据访问层。Java EE 等流行框架使用了这种架构模式。&lt;br /&gt;
假设一个软件工程师正在构建一个大型应用程序，您发现自己在架构模式中使用了所有四个层。另一方面，小型企业可以将业务层和持久层组合成一个单元，主要是当后者作为业务逻辑层组件的一个组成部分使用时。&lt;br /&gt;
这种模式很突出，因为每一层在应用程序中都扮演着不同的角色，并被标记为关闭。这意味着请求必须通过其正下方的层才能到达下一层。它的另一个概念 —— 隔离层 —— 使您能够在一个层内修改组件而不影响其他层。&lt;br /&gt;
为了简化这个过程，让我们举一个电子商务 Web 应用程序的例子。处理购物车活动（例如计算购物车）所需的业务逻辑直接从应用程序层获取到表示层。在这里，应用层充当集成层，在数据层和表示层之间建立无缝通信。此外，最后一层是数据层，用于独立维护数据，无需应用服务器和业务逻辑的干预。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要快速构建的应用程序。&lt;/li&gt;
&lt;li&gt;需要传统 IT 部门和流程的企业应用程序。&lt;/li&gt;
&lt;li&gt;适用于开发人员经验不足且架构模式知识有限的团队。&lt;/li&gt;
&lt;li&gt;需要严格的可维护性和可测试性标准的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有明确角色的杂乱无章的源代码和模块可能会成为应用程序的问题。&lt;/li&gt;
&lt;li&gt;跳过前面的层来创建紧密耦合可能会导致充满复杂相互依赖关系的逻辑混乱。&lt;/li&gt;
&lt;li&gt;基本修改可能需要完全重新部署应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350617-1e24a301-4609-496b-bf92-119a78463869.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u41dcdefd&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u06f8eff3-fc59-4ebd-ab62-85abfa781ed&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-事件驱动架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-事件驱动架构模式&#34;&gt;#&lt;/a&gt; 2. 事件驱动架构模式&lt;/h3&gt;
&lt;p&gt;如果您正在寻找一种敏捷且高性能的架构模式，那么您应该选择事件驱动的架构模式。它由异步接收和处理事件的分离的、单一用途的事件处理组件组成。这种模式协调所有事件的产生、检测和消费行为，以及它们引起的响应。&lt;br /&gt;
事件驱动的架构风格由两种拓扑结构组成 —— 中介者和代理者。当需要通过中央调解器在事件总线中编排多个步骤时，使用调解器。另一方面，代理用于在不使用中央调解器的情况下将事件链接在一起。&lt;br /&gt;
使用事件驱动架构的一个很好的例子是电子商务网站。事件驱动的架构使电子商务网站能够在高需求时对各种来源做出反应。同时，它避免了应用程序的任何崩溃或任何资源的过度配置。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于单个数据块仅与几个模块交互的应用程序。&lt;/li&gt;
&lt;li&gt;帮助用户界面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有在独立的情况下才能测试单个模块，否则需要在功能齐全的系统中进行测试。&lt;/li&gt;
&lt;li&gt;当多个模块处理相同的事件时，错误处理对结构化变得具有挑战性。&lt;/li&gt;
&lt;li&gt;如果事件有不同的需求，则为事件开发系统范围的数据结构可能会变得很困难。&lt;/li&gt;
&lt;li&gt;对于解耦和独立的模块，维护基于事务的一致性机制可能会变得复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350820-3afb9a50-c0a7-4297-9952-3d9243839512.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ue758b1e4&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u4e4bbf59-cf6b-46c3-b897-ebadb37063d&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-微内核架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-微内核架构模式&#34;&gt;#&lt;/a&gt; 3. 微内核架构模式&lt;/h3&gt;
&lt;p&gt;这种架构模式由两种类型的组件组成 —— 一个核心系统和几个插件模块。虽然核心系统以最小的功能工作以保持系统运行，但插件模块是具有专门处理的独立组件。&lt;br /&gt;
如果我们从业务应用程序的角度来看，核心系统可以定义为通用业务逻辑，没有针对特殊情况、特殊规则或复杂条件流程的自定义代码。另一方面，插件模块旨在增强核心系统以产生额外的业务能力。&lt;br /&gt;
以任务调度器应用为例，微内核包含调度和触发任务的所有逻辑，而插件包含特定的任务。只要插件遵循预定义的 API，微内核就可以触发它们，而无需了解实现细节。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在基本例程和高阶规则之间有明确划分的应用程序。&lt;/li&gt;
&lt;li&gt;具有一组固定的核心例程和一组需要频繁更新的动态规则的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件必须具有良好的握手代码，以便微内核知道插件安装并准备好工作。&lt;/li&gt;
&lt;li&gt;如果有多个插件依赖于微内核，那么更改微内核几乎是不可能的。&lt;/li&gt;
&lt;li&gt;提前为核函数选择合适的粒度是很困难的，后期会更加复杂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113350831-602d449d-3719-4e9a-9a2b-265b0ba31078.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u72da7c93&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uceddea9e-6749-40f6-83fd-338444557f4&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-微服务架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-微服务架构模式&#34;&gt;#&lt;/a&gt; 4. 微服务架构模式&lt;/h3&gt;
&lt;p&gt;微服务架构模式被视为单体应用程序和面向服务架构的可行替代方案。这些组件通过有效、简化的交付管道作为单独的单元进行部署。该模式的好处是增强了可伸缩性和应用程序内的高度解耦。&lt;br /&gt;
由于其解耦和独立的特性，组件通过远程访问协议进行访问。此外，相同的组件可以单独开发、部署和测试，而无需与任何其他服务组件相互依赖。&lt;br /&gt;
Netflix 是微服务架构模式的早期采用者之一。该架构允许工程团队在小团队中工作，负责数百个微服务的端到端开发。这些微服务协同工作，每天为数百万 Netflix 客户流式传输数字娱乐。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要快速开发的业务和 Web 应用程序。&lt;/li&gt;
&lt;li&gt;具有小型组件的网站、具有明确边界的数据中心以及全球远程团队。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为服务组件设计正确的粒度级别始终是一项挑战。&lt;/li&gt;
&lt;li&gt;所有应用程序都不包括可以拆分为独立单元的任务。&lt;/li&gt;
&lt;li&gt;由于任务分布在不同的微服务中，性能可能会受到影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352952-5d00739c-056c-4bba-941c-825ffbb1d30a.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u1f3e2265&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=708&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u0899b9c1-4dcd-4fc3-a462-ef1603281fc&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-基于空间的架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-基于空间的架构模式&#34;&gt;#&lt;/a&gt; 5. 基于空间的架构模式&lt;/h3&gt;
&lt;p&gt;元组空间的概念 —— 分布式共享内存的概念是该架构名称的基础。基于空间的模式包括两个主要组件 —— 一个处理单元和一个虚拟化中间件。&lt;br /&gt;
处理单元包含部分应用程序组件，包括基于 Web 的组件和后端业务逻辑。虽然较小的 Web 应用程序可以部署在单个处理单元中，但较大的应用程序可以将应用程序功能拆分为多个处理单元以避免功能崩溃。此外，虚拟化中间件组件包含控制数据同步和请求处理的各个方面的元素。它们可以定制编写，也可以作为第三方产品购买。&lt;br /&gt;
投标拍卖网站可以被认为是这种架构模式的合适示例。它的功能是网站通过浏览器请求接收来自互联网用户的出价。收到请求后，网站会记录带有时间戳的出价，更新最新出价的信息，并将数据发送回浏览器。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有庞大用户群和持续请求负载的应用程序和软件系统。&lt;/li&gt;
&lt;li&gt;应该解决可伸缩性和并发性问题的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在不干扰多个副本的情况下缓存数据以提高速度是一项复杂的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352084-01bbca26-312a-4967-bd52-f08ae2d3cf60.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ua89ab21e&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=341&amp;amp;originWidth=717&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u966d1719-7e5a-47ff-ad2c-022471a6ab7&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-客户端-服务器架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-客户端-服务器架构模式&#34;&gt;#&lt;/a&gt; 6. 客户端 - 服务器架构模式&lt;/h3&gt;
&lt;p&gt;客户端 - 服务器架构模式被描述为具有两个主要组件的分布式应用程序结构 —— 客户端和服务器。这种架构促进了客户端和服务器之间的通信，它们可能在也可能不在同一网络下。客户端请求从服务器获取特定资源，其形式可能是数据、内容、服务、文件等。服务器识别发出的请求并通过发送请求的资源适当地响应客户端。&lt;br /&gt;
客户端和服务器的功能特性是在应用程序中相互交互的程序示例。这种架构的功能非常灵活，因为单个服务器可以服务多个客户端，或者单个客户端可以使用多个服务器。服务器可以根据它们提供的服务或资源进行分类，而不管它们如何执行。&lt;br /&gt;
电子邮件是使用客户端 - 服务器模式构建的模型的一个突出示例。当用户 / 客户端搜索特定电子邮件时，服务器会查看资源池并将请求的电子邮件资源发送回用户 / 客户端。这也有助于您改善用户体验。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电子邮件、网上银行服务、万维网、网络打印、文件共享应用程序、游戏应用程序等应用程序。&lt;/li&gt;
&lt;li&gt;专注于实时服务的应用程序（如电信应用程序）是使用分布式应用程序结构构建的。&lt;/li&gt;
&lt;li&gt;需要受控访问并为大量分布式客户端提供多种服务的应用程序。&lt;/li&gt;
&lt;li&gt;具有集中式资源和服务的应用程序，必须分布在多个服务器上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不兼容的服务器容量可能会变慢，从而导致性能瓶颈。&lt;/li&gt;
&lt;li&gt;服务器通常容易出现单点故障。&lt;/li&gt;
&lt;li&gt;改变模式是一个复杂而昂贵的过程。&lt;/li&gt;
&lt;li&gt;服务器维护可能是一项艰巨且昂贵的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352140-04c376f0-1e24-44e6-9cf2-2a75b031f293.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u958b0a5f&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=684&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u52df7e26-ec08-4f07-b544-be796eb4ee1&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;7-主从架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7-主从架构模式&#34;&gt;#&lt;/a&gt; 7. 主从架构模式&lt;/h3&gt;
&lt;p&gt;想象一个数据库同时接收多个类似请求。自然地，同时处理每个请求会使应用程序过程复杂化并减慢速度。这个问题的解决方案是主从架构模式，主数据库启动多个从组件以快速处理这些请求。&lt;br /&gt;
正如标题所暗示的，主从架构模式可以被描绘成一个主将任务分配给它的从属。一旦从属组件完成它们的任务，分布式任务将由主组件编译并显示为结果。&lt;br /&gt;
必须注意，主机对从属组件具有绝对控制权和权力，可以确定它们的通信和功能优先级。这种模式的独特之处在于每个从站将同时处理请求，同时提供结果。这也意味着在每个从站都将结果返回给主站之前，从站操作不会被视为完成。&lt;br /&gt;
这种模式非常适合可以分成更小的部分来执行类似请求的应用程序。一个合适的例子是需要大量多任务处理作为其重要组成部分的数据库应用程序。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发可能需要多处理器兼容架构的操作系统。&lt;/li&gt;
&lt;li&gt;必须将较大的服务分解为较小的组件的高级应用程序。&lt;/li&gt;
&lt;li&gt;通过分布式网络处理存储在不同服务器中的原始数据的应用程序。&lt;/li&gt;
&lt;li&gt;遵循多线程以提高其响应能力的 Web 浏览器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主组件的故障可能导致数据丢失，而从组件上没有备份。&lt;/li&gt;
&lt;li&gt;系统内的依赖性可能导致从属组件的故障。&lt;/li&gt;
&lt;li&gt;由于从属组件的隔离性质，间接成本可能会增加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113351882-eda1d1a5-8012-4814-9253-52ec9f2de7a8.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u4057f8a7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=684&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u86d8e7ca-2584-4be4-8ed7-a003f4a18ba&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;8-管道过滤器架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8-管道过滤器架构模式&#34;&gt;#&lt;/a&gt; 8. 管道过滤器架构模式&lt;/h3&gt;
&lt;p&gt;管道过滤器架构模式处理单向流中的数据流，其中组件称为过滤器，管道是连接这些过滤器的那些。处理数据链发生在管道将数据传输到过滤器的地方，一个过滤器的结果成为下一个过滤器的输入。该架构的功能是将重要的组件 / 流程分解为可以同时处理的独立和多个组件。&lt;br /&gt;
管道过滤器模式最适合使用 Web 服务处理流中数据的应用程序，并且可以将简单的序列创建为复杂的结构。编译器可以被认为是具有这种架构模式的合适示例，因为每个过滤器都执行词法分析、解析、语义分析和代码生成。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它可用于促进简单的单向数据处理和转换的应用程序。&lt;/li&gt;
&lt;li&gt;使用电子数据交换和外部动态列表等工具的应用程序。&lt;/li&gt;
&lt;li&gt;开发用于错误检查和语法分析的数据编译器。&lt;/li&gt;
&lt;li&gt;在 UNIX 等操作系统中执行高级操作，其中程序的输出和输入按顺序连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果基础架构设计不可靠，则过滤器之间可能会丢失数据。&lt;/li&gt;
&lt;li&gt;最慢的过滤器限制了整个架构的性能和效率。&lt;/li&gt;
&lt;li&gt;在过滤器之间传输期间，数据转换开销可能会增加。&lt;/li&gt;
&lt;li&gt;该架构的持续转型特性使其对交互系统的用户友好性降低。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113352513-3f7a821d-f605-4d06-85ba-dbd8d994f643.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u562e99b7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=684&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u79cd3de8-db05-46e1-a8c6-5e401511b1c&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;9-代理架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9-代理架构模式&#34;&gt;#&lt;/a&gt; 9. 代理架构模式&lt;/h3&gt;
&lt;p&gt;代理模式用于构建具有解耦组件的分布式系统。通过调用远程服务，组件可以在代理架构模式中与其他组件交互。此外，代理负责组件之间的所有协调和通信。&lt;br /&gt;
客户端、服务器和代理是代理模式的三个主要组成部分。通常，代理将有权访问与特定服务器相关的所有服务和特征。当客户端向代理请求服务时，代理会将它们重定向到合适的服务类别以进行进一步处理。&lt;br /&gt;
这种架构模式的主要好处之一是它如何以动态方式管理与对象相关的操作，例如更改、添加、删除或重定位。最后，这种架构模式将所有与通信相关的代码从应用程序中分离出来，允许应用程序在分布式或单台计算机上运行。由于这些优势，代理架构已经流行起来。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于消息代理软件，如 Apache ActiveMQ、Apache Kafka、RabbitMQ 和 JBoss Messaging。&lt;/li&gt;
&lt;li&gt;用于构建具有解耦组件的分布式系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容错能力浅。&lt;/li&gt;
&lt;li&gt;要求服务描述标准化。&lt;/li&gt;
&lt;li&gt;隐藏层可能会降低软件性能。&lt;/li&gt;
&lt;li&gt;更高的延迟并且需要更多的部署努力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113353355-b4cfbb98-2791-44ee-bf48-948d62b7c2cb.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=udc6e9226&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=1000&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u489c5d9b-a713-4a76-9b3e-221dfbbe711&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;10-点对点架构模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10-点对点架构模式&#34;&gt;#&lt;/a&gt; 10. 点对点架构模式&lt;/h3&gt;
&lt;p&gt;在对等架构模式中，单个组件称为对等。对等点可以充当客户端、服务器或两者兼而有之，并随着时间的推移动态地改变其角色。作为客户端，对等点可以向其他对等点请求服务，作为服务器，对等点可以向其他对等点提供服务。对等和客户端 - 服务器架构之间的显着区别在于网络上的每台计算机都具有相当大的权限，并且没有集中式服务器。随着越来越多的计算机加入网络，它的容量也会增加。&lt;br /&gt;
对等架构模式的一个很好的例子是文件共享网络，如 Skype、BitTorrent 和 Napster。在 BitTorrent 中，点对点架构用于以分散的方式在互联网上分发数据和文件。通过使用此协议，可以轻松传输大型视频和音频文件。在 Skype 中，您可以使用 VoIP P2P 架构模式进行语音呼叫并向其他用户发送文本消息。通过这种方式，您可以使用对等架构进行文件共享、消息传递、协作等。&lt;br /&gt;
&lt;strong&gt;用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gnutella 和 G2 等文件共享网络。&lt;/li&gt;
&lt;li&gt;基于加密货币的产品，例如比特币和区块链。&lt;/li&gt;
&lt;li&gt;P2PTV、PDTP 等多媒体产品。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法保证高质量的服务。&lt;/li&gt;
&lt;li&gt;实现强大的安全性具有挑战性。&lt;/li&gt;
&lt;li&gt;性能取决于连接到网络的节点数量。&lt;/li&gt;
&lt;li&gt;无法备份文件或文件夹。&lt;/li&gt;
&lt;li&gt;可能需要特定的接口来读取文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;图表：&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113353641-a6651c20-75c9-40d6-b88f-33af6595fe45.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u66601f8a&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=1000&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u5e17b926-f909-4906-aa38-6bea0da4c4b&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;不同软件架构模式对比分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不同软件架构模式对比分析&#34;&gt;#&lt;/a&gt; 不同软件架构模式对比分析&lt;/h2&gt;
&lt;p&gt;到目前为止，我们已经了解了不同类型的架构模式。现在，您会为您的软件类型选择哪种架构？你需要做出正确的选择。&lt;br /&gt;
让我们看一下下表。&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1643113353987-b01e5b3e-347d-4dd9-842b-6f2add93c8c9.png#clientId=u3e99833d-21d7-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u73e03bbe&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=6474&amp;amp;originWidth=1434&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u922ceeb1-64d1-4bb1-a121-f0d59a9c735&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/Array.prototype.sort()%20%E6%96%B9%E6%B3%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%B4%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%B7%AE%E5%BC%82/</guid>
            <title>Array.prototype.sort() 方法在不同浏览器间的实现差异</title>
            <link>https://www.oocii.com/yuque/Array.prototype.sort()%20%E6%96%B9%E6%B3%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%B4%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%B7%AE%E5%BC%82/</link>
            <category term="JavaScript" scheme="https://www.oocii.com/categories/JavaScript/" />
            <category term="Array" scheme="https://www.oocii.com/categories/JavaScript/Array/" />
            <category term="Javascript" scheme="https://www.oocii.com/tags/Javascript/" />
            <category term="JS" scheme="https://www.oocii.com/tags/JS/" />
            <category term="ES" scheme="https://www.oocii.com/tags/ES/" />
            <category term="Array" scheme="https://www.oocii.com/tags/Array/" />
            <pubDate>Thu, 23 Dec 2021 10:44:51 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Array.prototype.sort () 方法用原地算法对数组的元素进行排序，并返回数组。默认排序顺序是在将元素转换为字符串，然后比较它们的 UTF-16 代码单元值序列时构建的&lt;/p&gt;
&lt;p&gt;由于它取决于具体实现，因此无法保证排序的时间和空间复杂性。&lt;/p&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;compareFunction&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数&#34;&gt;#&lt;/a&gt; 参数&lt;/h3&gt;
&lt;p&gt;compareFunction 可选&lt;br /&gt;
用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的 Unicode 位点进行排序。&lt;br /&gt;
firstEl&lt;br /&gt;
 第一个用于比较的元素。&lt;br /&gt;
secondEl&lt;br /&gt;
 第二个用于比较的元素。&lt;br /&gt;
返回值&lt;br /&gt;
排序后的数组。请注意，数组已原地排序，并且不进行复制。&lt;/p&gt;
&lt;h3 id=&#34;描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#描述&#34;&gt;#&lt;/a&gt; 描述&lt;/h3&gt;
&lt;p&gt;如果没有指明 compareFunction ，那么元素会按照转换为的字符串的诸个字符的 Unicode 位点进行排序。例如 &amp;quot;Banana&amp;quot; 会被排列到 &amp;quot;cherry&amp;quot; 之前。当数字按由小到大排序时，9 出现在 80 之前，但因为（没有指明 compareFunction），比较的数字会先被转换为字符串，所以在 Unicode 顺序上 &amp;quot;80&amp;quot; 要比 &amp;quot;9&amp;quot; 要靠前。&lt;/p&gt;
&lt;p&gt;如果指明了 compareFunction ，那么数组会按照调用该函数的返回值排序。即 a 和 b 是两个将要被比较的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 compareFunction (a, b) 小于 0 ，那么 a 会被排列到 b 之前；&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 等于 0 ， a 和 b 的相对位置不变。备注： ECMAScript 标准并不保证这一行为，而且也不是所有浏览器都会遵守（例如 Mozilla 在 2003 年之前的版本）；&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 大于 0 ， b 会被排列到 a 之前。&lt;br /&gt;
compareFunction (a, b) 必须总是对相同的输入返回相同的比较结果，否则排序的结果将是不确定的。&lt;br /&gt;
所以，比较函数格式如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按某种排序标准进行比较，a 小于 b&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;// a must be equal to b&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以上是 MDN 上面的说明，但至于各浏览器的具体的实现是没有的.&lt;/p&gt;
&lt;h2 id=&#34;浏览器对-comparefunction-参数处理的差异&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浏览器对-comparefunction-参数处理的差异&#34;&gt;#&lt;/a&gt; 浏览器对 compareFunction 参数处理的差异&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; numbers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;numbers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;numbers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;直观感觉上 compareFunction 的 a, b 参数应该是，a === numbers [n], b === numbers [n + 1], 但实际上不同浏览器的处理方式却不同，以下是 Chrome 和 Firefox 的处理结果:&lt;br /&gt;
Chrome&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 2 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 3 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 4 3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 5 4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Firefox&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 1 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 2 3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 3 4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 4 5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;由上面结果可以看到，Chrome 和 Firefox compareFunction 的入参方式完全相反.&lt;/p&gt;
&lt;p&gt;这是因为 ES 标准 没有规范 compareFunction 传入的参数到底该是什么顺序和算法，只是制定 compareFunction 两数之间的比较规则，就是上面提到的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 compareFunction (a, b) 小于 0 ，那么 a 会被排列到 b 之前；&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 等于 0 ， a 和 b 的相对位置不变。&lt;/li&gt;
&lt;li&gt;如果 compareFunction (a, b) 大于 0 ， b 会被排列到 a 之前。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;明确定义规则后，不管 a, b 两个数传进来的顺序如何，只在乎它们两数的排序关系。这就解释了为什么同样的 compareFunction 下，尽管不同浏览器接受的参数不一样，还是能排序出一样的结果。&lt;/p&gt;
&lt;p&gt;参考资料:&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXkvc29ydA==&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuc29ydA==&#34;&gt;https://tc39.es/ecma262/#sec-array.prototype.sort&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E5%8A%A8%E6%80%81%20slot%20%E9%80%8F%E4%BC%A0%E5%B9%B6%E8%8E%B7%E5%8F%96%20slotProps%20%E6%95%B0%E6%8D%AE/</guid>
            <title>动态 slot 透传并获取 slotProps 数据</title>
            <link>https://www.oocii.com/yuque/%E5%8A%A8%E6%80%81%20slot%20%E9%80%8F%E4%BC%A0%E5%B9%B6%E8%8E%B7%E5%8F%96%20slotProps%20%E6%95%B0%E6%8D%AE/</link>
            <category term="Vue" scheme="https://www.oocii.com/categories/Vue/" />
            <category term="slot" scheme="https://www.oocii.com/categories/Vue/slot/" />
            <category term="vue" scheme="https://www.oocii.com/tags/vue/" />
            <category term="slot" scheme="https://www.oocii.com/tags/slot/" />
            <category term="scopedSlots" scheme="https://www.oocii.com/tags/scopedSlots/" />
            <category term="dynamicSlotName" scheme="https://www.oocii.com/tags/dynamicSlotName/" />
            <pubDate>Thu, 23 Dec 2021 10:44:19 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;slot 透传并获取 slotProps&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;// grandparent
&amp;lt;Parent :first-day-of-week=&amp;quot;0&amp;quot; :test-prop=&amp;quot;1999999999&amp;quot; :date=&amp;quot;new Date()&amp;quot;&amp;gt;
  &amp;lt;template v-slot:monthCellRender=&amp;quot;slotProps&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;
        month: &amp;#123;&amp;#123; slotProps.month &amp;#125;&amp;#125;
    &amp;lt;/h2&amp;gt;
  &amp;lt;/template&amp;gt;
  &amp;lt;template v-slot:dateCellRender=&amp;quot;slotProps&amp;quot;&amp;gt;
    &amp;lt;h3 style=&amp;quot;background-color: #eef;&amp;quot;&amp;gt;
      date: &amp;#123;&amp;#123; slotProps.date &amp;#125;&amp;#125;
  &amp;lt;/h3&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/Parent&amp;gt;

// parent component(Parent)
&amp;lt;Child&amp;gt;
  &amp;lt;template v-for=&amp;quot;(value, slotKeyName) in $scopedSlots&amp;quot; v-slot:[slotKeyName]=&amp;quot;slotProps&amp;quot;&amp;gt;
    &amp;lt;slot :name=&amp;quot;slotKeyName&amp;quot; v-bind=&amp;quot;slotProps&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
    &amp;lt;div :key=&amp;quot;slotKeyName&amp;quot;&amp;gt;&amp;#123;&amp;#123; slotKeyName &amp;#125;&amp;#125;&amp;lt;/div&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/Child&amp;gt;

// child
&amp;lt;slot name=&amp;quot;dateCellRender&amp;quot; v-bind=&amp;quot;item&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;从 2.6.0 开始，这个 $scopedSlots 有两个变化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;作用域插槽函数现在保证返回一个 VNode 数组，除非在返回值无效的情况下返回 undefined。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有的 $slots 现在都会作为函数暴露在 $scopedSlots 中&lt;/strong&gt;。如果你在使用渲染函数，不论当前插槽是否带有作用域，我们都推荐始终通过 $scopedSlots 访问它们。这不仅仅使得在未来添加作用域变得简单，也可以让你最终轻松迁移到所有插槽都是函数的 Vue 3。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNzbG90&#34;&gt;https://cn.vuejs.org/v2/api/#slot&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyN2bS1zY29wZWRTbG90cw==&#34;&gt;https://cn.vuejs.org/v2/api/#vm-scopedSlots&lt;/span&gt;&lt;br /&gt;
 动态插槽名：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvZ3VpZGUvY29tcG9uZW50cy1zbG90cy5odG1sIyVFNSU4QSVBOCVFNiU4MCU4MSVFNiU4RiU5MiVFNiVBNyVCRCVFNSU5MCU4RA==&#34;&gt;https://cn.vuejs.org/v2/guide/components-slots.html#%E5%8A%A8%E6%80%81%E6%8F%92%E6%A7%BD%E5%90%8D&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/codepen%20snipet/</guid>
            <title>codepen snipet</title>
            <link>https://www.oocii.com/yuque/codepen%20snipet/</link>
            <category term="CodePen" scheme="https://www.oocii.com/categories/CodePen/" />
            <category term="codepen" scheme="https://www.oocii.com/tags/codepen/" />
            <category term="code" scheme="https://www.oocii.com/tags/code/" />
            <category term="snippet" scheme="https://www.oocii.com/tags/snippet/" />
            <pubDate>Thu, 01 Aug 2019 20:29:10 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;​&lt;/p&gt;
&lt;p&gt;&amp;lt;p class=&amp;quot;codepen&amp;quot; data-height=&amp;quot;300&amp;quot; data-default-tab=&amp;quot;html,result&amp;quot; data-slug-hash=&amp;quot;jOGRJqe&amp;quot; data-user=&amp;quot;arongz&amp;quot; style=&amp;quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&amp;quot;&amp;gt;&lt;br /&gt;
&amp;lt;span&amp;gt;See the Pen &amp;lt;a href=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb2RlcGVuLmlvL2Fyb25nei9wZW4vak9HUkpxZSUyMiUzRQ==&#34;&gt;https://codepen.io/arongz/pen/jOGRJqe&amp;quot;&amp;gt;&lt;/span&gt;&lt;br /&gt;
hello world&amp;lt;/a&amp;gt; by  Arz (&amp;lt;a href=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb2RlcGVuLmlvL2Fyb25neiUyMiUzRUBhcm9uZ3olM0MvYSUzRQ==&#34;&gt;https://codepen.io/arongz&amp;quot;&amp;gt;@arongz&amp;lt;/a&amp;gt;)&lt;/span&gt;)&lt;br /&gt;
on &amp;lt;a href=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb2RlcGVuLmlvJTIyJTNFQ29kZVBlbiUzQy9hJTNFLiUzQy9zcGFuJTNF&#34;&gt;https://codepen.io&amp;quot;&amp;gt;CodePen&amp;lt;/a&amp;gt;.&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br /&gt;
&amp;lt;/p&amp;gt;&lt;br /&gt;
&amp;lt;script async src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcHdlYmFzc2V0cy5jb2RlcGVuLmlvL2Fzc2V0cy9lbWJlZC9laS5qcyUyMiUzRSUzQy9zY3JpcHQlM0U=&#34;&gt;https://cpwebassets.codepen.io/assets/embed/ei.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br /&gt;
​&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E4%BB%80%E4%B9%88%E6%98%AFUML(Unified%20Modeling%20Language)%EF%BC%9F/</guid>
            <title>什么是UML(Unified Modeling Language)？</title>
            <link>https://www.oocii.com/yuque/%E4%BB%80%E4%B9%88%E6%98%AFUML(Unified%20Modeling%20Language)%EF%BC%9F/</link>
            <category term="UML" scheme="https://www.oocii.com/categories/UML/" />
            <category term="UML" scheme="https://www.oocii.com/tags/UML/" />
            <pubDate>Sat, 02 Jun 2018 20:32:21 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5vbWcub3JnL3NwZWMvVU1MLw==&#34;&gt;UML&lt;/span&gt; 是统一建模语言 Unified Modeling Language 的缩写，是一种标准化建模语言，由一组集成图组成，旨在帮助系统和软件开发人员指定、可视化、构建和记录软件系统的工件，以及用于业务建模和其他非软件系统。UML 代表了一组最佳工程实践，这些实践已被证明在大型复杂系统的建模中是成功的。UML 是开发面向对象软件和软件开发过程中非常重要的一部分。UML 主要使用图形符号来表达软件项目的设计。使用 UML 有助于项目团队进行交流、探索潜在的设计并验证软件的架构设计。在本文中，我们将为您详细介绍什么是 UML，&lt;/p&gt;
&lt;h2 id=&#34;uml-的起源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uml-的起源&#34;&gt;#&lt;/a&gt; UML 的起源&lt;/h2&gt;
&lt;p&gt;UML 的目标是提供一种标准符号，可以被所有面向对象的方法使用，并选择和集成前体符号的最佳元素。UML 被设计用于广泛的应用程序。因此，它为广泛的系统和活动（例如，分布式系统、分析、系统设计和部署）提供了结构。&lt;br /&gt;
UML 是一种由 OMT 统一产生的符号&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2JqZWN0LW1vZGVsaW5nX3RlY2huaXF1ZQ==&#34;&gt;对象建模技术 OMT&lt;/span&gt; [ &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSmFtZXNfUnVtYmF1Z2g=&#34;&gt;James Rumbaugh&lt;/span&gt; 1991] - 最适合分析和数据密集型信息系统。&lt;/li&gt;
&lt;li&gt;Booch [ &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvR3JhZHlfQm9vY2g=&#34;&gt;Grady Booch&lt;/span&gt; 1994] - 非常适合设计和实施。Grady Booch 与&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQWRhXyhwcm9ncmFtbWluZ19sYW5ndWFnZSk=&#34;&gt; Ada&lt;/span&gt; 语言进行了广泛的合作，并且是该语言的面向对象技术开发的主要参与者。虽然 Booch 方法很强大，但符号不太受欢迎（很多云形状主导了他的模型 - 不是很整齐）&lt;/li&gt;
&lt;li&gt;OOSE（面向对象的软件工程 [ &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSXZhcl9KYWNvYnNvbg==&#34;&gt;Ivar Jacobson&lt;/span&gt; 1992]） - 以一个称为用例的模型为特色。用例是一种强大的技术，可用于理解整个系统（OO 传统上薄弱的领域）的行为。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1994 年，OMT 的创建者 Jim Rumbaugh 在离开通用电气并加入 Rational Corp 的 Grady Booch 时震惊了软件界。合作的目的是将他们的想法合并为一个单一的、统一的方法（该方法的暂定名称）。方法确实是 “统一方法”）。&lt;br /&gt;
到 1995 年，OOSE 的创建者 Ivar Jacobson 也加入了 Rational，他的想法（尤其是 “用例” 的概念）被输入到新的统一方法 - 现在称为统一建模语言 1。Rumbaugh、Booch 和 Jacobson 的团队被亲切地称为 “三人组”&lt;br /&gt;
UML 也受到其他面向对象表示法的影响：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;梅勒和施莱尔 [1998]&lt;/li&gt;
&lt;li&gt;科德和尤登 [1995]&lt;/li&gt;
&lt;li&gt;Wirfs-Brock [1990]&lt;/li&gt;
&lt;li&gt;马丁和奥德尔 [1992]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UML 还包括当时其他主要方法中不存在的新概念，例如扩展机制和约束语言。&lt;/p&gt;
&lt;h2 id=&#34;uml-的历史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uml-的历史&#34;&gt;#&lt;/a&gt; UML 的历史&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819985120-c3d8ff03-fb82-41a9-9ee7-fe2d04e424a9.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u2cdd7edd&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=461&amp;amp;originWidth=975&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u26f52a27-94e8-400f-ae02-e049c39777c&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5vbWcub3JnLw==&#34;&gt;1996 年，对象管理组 (OMG)&lt;/span&gt; 发布的第一个提案请求 (RFP) 为这些组织联合起来制定联合 RFP 响应提供了催化剂。&lt;/li&gt;
&lt;li&gt;Rational 与几个愿意投入资源致力于强大的 UML 1.0 定义的组织建立了 UML 合作伙伴联盟。那些对 UML 1.0 定义贡献最大的人包括：
&lt;ul&gt;
&lt;li&gt;数码设备公司&lt;/li&gt;
&lt;li&gt;生命值&lt;/li&gt;
&lt;li&gt;i-Logix&lt;/li&gt;
&lt;li&gt;智能公司&lt;/li&gt;
&lt;li&gt;IBM&lt;/li&gt;
&lt;li&gt;图标计算&lt;/li&gt;
&lt;li&gt;MCI 系统屋&lt;/li&gt;
&lt;li&gt;微软&lt;/li&gt;
&lt;li&gt;甲骨文&lt;/li&gt;
&lt;li&gt;理性软件&lt;/li&gt;
&lt;li&gt;德州仪器&lt;/li&gt;
&lt;li&gt;优利系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;这种合作产生了 UML 1.0，这是一种定义良好、表达能力强、功能强大且普遍适用的建模语言。这在 1997 年 1 月作为初始 RFP 响应提交给 OMG。1&lt;/li&gt;
&lt;li&gt;1997 年 1 月，IBM、ObjecTime、Platinum Technology、Ptech、Taskon、Reich Technologies 和 Softeam 也分别向 OMG 提交了 RFP 响应。这些公司与 UML 合作伙伴一起贡献了他们的想法，并且合作伙伴共同产生了修订后的 UML 1.1 响应。UML 1.1 版本的重点是提高 UML 1.0 语义的清晰度并吸收新合作伙伴的贡献。它在 1997.1 秋季提交给 OMG 供他们考虑并通过，将 1.1 增强到 1.5，随后从 01 到 06 到 UML 2.1（现在 UML 当前版本是 2.5）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;为什么选择-uml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么选择-uml&#34;&gt;#&lt;/a&gt; 为什么选择 UML&lt;/h2&gt;
&lt;p&gt;随着软件对许多公司的战略价值的增加，该行业正在寻找自动化软件生产和提高质量、降低成本和缩短上市时间的技术。这些技术包括组件技术、可视化编程、模式和框架。随着范围和规模的增加，企业还寻求管理系统复杂性的技术。特别是，他们认识到需要解决重复出现的架构问题，例如物理分布、并发性、复制、安全性、负载平衡和容错。此外，万维网的发展虽然使一些事情变得更简单，但也加剧了这些架构问题。统一建模语言 (UML) 旨在响应这些需求。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为用户提供即用型、富有表现力的可视化建模语言，以便他们开发和交换有意义的模型。&lt;/li&gt;
&lt;li&gt;提供可扩展性和专业化机制来扩展核心概念。&lt;/li&gt;
&lt;li&gt;独立于特定的编程语言和开发过程。&lt;/li&gt;
&lt;li&gt;为理解建模语言提供正式的基础。&lt;/li&gt;
&lt;li&gt;鼓励 OO 工具市场的增长。&lt;/li&gt;
&lt;li&gt;支持更高级别的开发概念，例如协作、框架、模式和组件。&lt;/li&gt;
&lt;li&gt;整合最佳实践。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;uml-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uml-概述&#34;&gt;#&lt;/a&gt; UML - 概述&lt;/h2&gt;
&lt;p&gt;在我们开始研究 UML 理论之前，我们将简要介绍一下 UML 的一些主要概念。&lt;br /&gt;
关于 UML，首先要注意的是有很多不同的图表（模型）需要习惯。这样做的原因是可以从许多不同的角度看待一个系统。软件开发将有许多利益相关者参与。&lt;br /&gt;
例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析师&lt;/li&gt;
&lt;li&gt;设计师&lt;/li&gt;
&lt;li&gt;编码员&lt;/li&gt;
&lt;li&gt;测试人员&lt;/li&gt;
&lt;li&gt;质量保证&lt;/li&gt;
&lt;li&gt;客户&lt;/li&gt;
&lt;li&gt;技术作者&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819985952-edacd9f5-78a8-4344-ae05-2ddc52912e66.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u57b68e24&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=387&amp;amp;originWidth=849&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uc74fa530-ab6b-4f64-86f0-c7d4d19bf77&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
所有这些人都对系统的不同方面感兴趣，每个人都需要不同程度的细节。例如，编码人员需要了解系统的设计并能够将设计转换为低级代码。相比之下，技术作家对整个系统的行为感兴趣，需要了解产品的功能。UML 试图提供一种表达能力很强的语言，以使所有利益相关者都可以从至少一个 UML 图中受益。&lt;br /&gt;
下面快速浏览一下这 13 个图表中的每一个，如下面的 UML 2 图表结构所示：&lt;br /&gt;
结构图显示了系统的静态结构及其在不同抽象和实现级别上的部分，以及它们之间的关系。结构图中的元素代表系统的有意义的概念，可能包括抽象概念、现实世界和实现概念，结构图有以下七种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jY2xhc3MtZGlhZ3JhbQ==&#34;&gt;类图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jY29tcG9uZW50LWRpYWdyYW0=&#34;&gt;组件图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jZGVwbG95bWVudC1kaWFncmFt&#34;&gt;部署图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jb2JqZWN0LWRpYWdyYW0=&#34;&gt;对象图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jcGFja2FnZS1kaWFncmFt&#34;&gt;封装图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jY29tcG9zaXRlLXN0cnVjdHVyZS1kaWFncmFt&#34;&gt;复合结构图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jcHJvZmlsZS1kaWFncmFt&#34;&gt;剖面图&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;行为图显示了系统中对象的&lt;strong&gt;动态行为&lt;/strong&gt;，可以描述为系统随&lt;strong&gt;时间&lt;/strong&gt;发生的一系列变化，行为图有以下七种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jdXNlLWNhc2UtZGlhZ3JhbQ==&#34;&gt;用例图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jYWN0aXZpdHktZGlhZ3JhbQ==&#34;&gt;活动图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jc3RhdGUtbWFjaGluZS1kaWFncmFt&#34;&gt;状态机图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jc2VxdWVuY2UtZGlhZ3JhbQ==&#34;&gt;序列图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jY29tbXVuaWNhdGlvbi1kaWFncmFt&#34;&gt;通讯图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jaW50ZXJhY3Rpb24tb3ZlcnZpZXctZGlhZ3JhbQ==&#34;&gt;交互概览图&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVtbC8jdGltaW5nLWRpYWdyYW0=&#34;&gt;时序图&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;什么是类图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是类图&#34;&gt;#&lt;/a&gt; 什么是类图？&lt;/h2&gt;
&lt;p&gt;类图是一种中心建模技术，几乎贯穿所有面向对象的方法。该图描述了系统中对象的类型以及它们之间存在的各种静态关系。&lt;/p&gt;
&lt;h4 id=&#34;关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系&#34;&gt;#&lt;/a&gt; 关系&lt;/h4&gt;
&lt;p&gt;重要的关系主要有以下三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;关联&lt;/strong&gt; - 表示类型实例之间的关系（一个人为一家公司工作，一家公司有多个办事处。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;继承&lt;/strong&gt; - 用于 OO 的 ER 图最明显的补充。它与 OO 设计中的继承有直接的对应关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聚合&lt;/strong&gt; - 聚合，一种面向对象设计中的对象组合形式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819985041-1f96ec66-aa84-4fad-b802-46f09425e6e0.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ua0523809&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=332&amp;amp;originWidth=726&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uc160933b-059a-421c-999e-e05510e7fe3&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;类图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类图示例&#34;&gt;#&lt;/a&gt; 类图示例&lt;/h4&gt;
&lt;p&gt;有关类图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWNsYXNzLWRpYWdyYW0v&#34;&gt;什么是类图？&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是组件图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是组件图&#34;&gt;#&lt;/a&gt; 什么是组件图？&lt;/h2&gt;
&lt;p&gt;在统一建模语言中，组件图描述了组件如何连接在一起以形成更大的组件或软件系统。它说明了软件组件的体系结构以及它们之间的依赖关系。这些软件组件包括运行时组件、可执行组件以及源代码组件。&lt;/p&gt;
&lt;h4 id=&#34;组件图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件图示例&#34;&gt;#&lt;/a&gt; 组件图示例&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819985229-226848d5-daaf-4703-9b5f-1afde5fbd909.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u3a88a4a5&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=246&amp;amp;originWidth=516&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u598d6d3e-69f1-42c7-8047-54987f57d1e&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
有关组件图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWNvbXBvbmVudC1kaWFncmFtLw==&#34;&gt;什么是组件图？&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是部署图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是部署图&#34;&gt;#&lt;/a&gt; 什么是部署图？&lt;/h2&gt;
&lt;p&gt;部署图有助于对面向对象软件系统的物理方面进行建模。它是一个结构图，将系统的体系结构显示为软件工件到部署目标的部署（分布）。人工制品代表了物理世界中的具体元素，它们是开发过程的结果。它在静态视图中对运行时配置进行建模，并可视化应用程序中工件的分布。在大多数情况下，它涉及对硬件配置以及存在的软件组件进行建模。&lt;/p&gt;
&lt;h4 id=&#34;部署图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部署图示例&#34;&gt;#&lt;/a&gt; 部署图示例&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819985323-594ce660-6133-4851-bb3b-3c47c8e6f493.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u20b89d9a&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=348&amp;amp;originWidth=551&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u28084061-c426-419c-9dbf-31ccb33ae37&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
有关部署图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWRlcGxveW1lbnQtZGlhZ3JhbS8=&#34;&gt;什么是部署图？&lt;/span&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986092-1a10e19d-2424-4c3a-b4d8-f343a2840b7e.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=udf94d016&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=69&amp;amp;originWidth=303&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uc3003676-b559-4094-8d28-e442175cf1d&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986033-5b8f5d37-5ed9-4d83-95c8-4c6312c220d6.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u983ab59f&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=193&amp;amp;originWidth=293&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uc25d00f6-5138-47dc-965f-5475f22610a&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是对象图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是对象图&#34;&gt;#&lt;/a&gt; 什么是对象图？&lt;/h2&gt;
&lt;p&gt;对象图是实例的图，包括对象和数据值。静态对象图是类图的一个实例；它显示了系统在某个时间点的详细状态的快照。不同之处在于类图表示由类及其关系组成的抽象模型。但是，对象图表示特定时刻的实例，这在本质上是具体的。对象图的使用相当有限，即显示数据结构的示例。&lt;/p&gt;
&lt;h4 id=&#34;类图与对象图-一个例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类图与对象图-一个例子&#34;&gt;#&lt;/a&gt; 类图与对象图 - 一个例子&lt;/h4&gt;
&lt;p&gt;有些人可能会发现很难理解 UML 类图和 UML 对象图之间的区别，因为它们都由命名的 “矩形块” 组成，其中包含属性，并且之间具有链接，这使得两个 UML 图看起来相似。有些人甚至可能认为它们是相同的，因为在 UML 工具中，它们使用的类图和对象图的符号都放在同一个图编辑器 - 类图中。&lt;br /&gt;
但实际上，类图和对象图代表了代码库的两个不同方面。在本文中，我们将为您提供有关这两个 UML 图的一些想法，它们是什么，它们有什么区别以及何时使用它们。&lt;/p&gt;
&lt;h4 id=&#34;类图与对象图的关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类图与对象图的关系&#34;&gt;#&lt;/a&gt; 类图与对象图的关系&lt;/h4&gt;
&lt;p&gt;您在编程时创建 “类”。例如，在网上银行系统中，您可以创建 “用户”、“帐户”、“交易” 等类。在课堂管理系统中，您可以创建 “教师”、“学生”、“作业” 等类。在每个类中，都有代表该类特征和行为的属性和操作。类图是一个 UML 图，您可以在其中可视化这些类，以及它们的属性、操作和相互关系。&lt;br /&gt;
UML 对象图显示系统中的对象实例在特定状态下如何相互交互。它还表示处于该状态的那些对象的数据值。换句话说，UML 对象图可以看作是在特定状态下如何使用类（在 UML 类图中绘制）的表示。&lt;br /&gt;
如果您不喜欢这些定义，请查看以下 UML 图示例。我相信你会在几秒钟内了解它们的差异。&lt;/p&gt;
&lt;h4 id=&#34;类图示例-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类图示例-2&#34;&gt;#&lt;/a&gt; 类图示例&lt;/h4&gt;
&lt;p&gt;下面的类图示例表示两个类 - 用户和附件。用户可以上传多个附件，因此这两个类通过关联连接，在附件端使用 0..* 作为多重性。&lt;/p&gt;
&lt;h4 id=&#34;对象图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象图示例&#34;&gt;#&lt;/a&gt; 对象图示例&lt;/h4&gt;
&lt;p&gt;下面的对象图示例向您展示了用户和附件类的对象实例在彼得（即用户）尝试上传两个附件时的 “样子”。所以要上传的两个附件对象有两个 Instance Specification。&lt;br /&gt;
有关对象图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLW9iamVjdC1kaWFncmFtLw==&#34;&gt;什么是对象图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986187-735be76e-41be-434d-9525-10b6318647a8.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u5f88cfb0&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=226&amp;amp;originWidth=560&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uaad3af34-11fc-4336-a6ad-ad5ccaa27ff&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是封装图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是封装图&#34;&gt;#&lt;/a&gt; 什么是封装图？&lt;/h2&gt;
&lt;p&gt;包图是 UML 结构图，显示包和包之间的依赖关系。模型图允许显示系统的不同视图，例如，作为多层（也称为多层）应用程序 - 多层应用程序模型。&lt;/p&gt;
&lt;h4 id=&#34;封装图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#封装图示例&#34;&gt;#&lt;/a&gt; 封装图示例&lt;/h4&gt;
&lt;p&gt;有关包图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXBhY2thZ2UtZGlhZ3JhbS8=&#34;&gt;什么是包图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986309-453daf1f-87e8-4aa7-b2ea-cd76a2f5d90b.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u858d4f52&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=128&amp;amp;originWidth=429&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u3d61e91b-f29d-4bb1-aad0-f44c12b177f&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是复合结构图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是复合结构图&#34;&gt;#&lt;/a&gt; 什么是复合结构图？&lt;/h2&gt;
&lt;p&gt;复合结构图是添加到 UML 2.0 的新工件之一。复合结构图类似于类图，是一种组件图，主要用于从微观角度对系统进行建模，但它描绘的是单个部分而不是整个类。它是一种静态结构图，显示了类的内部结构以及这种结构使协作成为可能。&lt;br /&gt;
该图可以包括内部部件、部件相互交互或类实例通过其与部件和外部世界交互的端口，以及部件或端口之间的连接器。复合结构是一组互连的元素，它们在运行时协作以实现某些目的。每个元素在协作中都有一些定义的角色。&lt;/p&gt;
&lt;h4 id=&#34;复合结构图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复合结构图示例&#34;&gt;#&lt;/a&gt; 复合结构图示例&lt;/h4&gt;
&lt;p&gt;有关复合结构图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWNvbXBvc2l0ZS1zdHJ1Y3R1cmUtZGlhZ3JhbS8=&#34;&gt;什么是复合结构图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986731-7f834013-6224-450d-8c39-29ac21cd5447.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u51b3d4f0&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=350&amp;amp;originWidth=490&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u1c112f64-2efd-4c45-b3c3-aaea0a2f3b4&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是剖面图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是剖面图&#34;&gt;#&lt;/a&gt; 什么是剖面图？&lt;/h2&gt;
&lt;p&gt;概要图使您能够创建特定于域和平台的构造型并定义它们之间的关系。您可以通过绘制原型形状来创建原型，并通过以资源为中心的界面将它们与组合或概括联系起来。您还可以定义和可视化构造型的标记值。&lt;/p&gt;
&lt;h4 id=&#34;剖面图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#剖面图示例&#34;&gt;#&lt;/a&gt; 剖面图示例&lt;/h4&gt;
&lt;p&gt;有关 Profile Diagram 的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXByb2ZpbGUtZGlhZ3JhbS8=&#34;&gt;什么是 UML 中的 Profile Diagram？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986866-b442e8cf-5528-40f2-ac23-9daed563b62d.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u83353e11&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=344&amp;amp;originWidth=590&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u997353ff-dd12-48e3-8962-19541042d68&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是用例图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是用例图&#34;&gt;#&lt;/a&gt; 什么是用例图？&lt;/h2&gt;
&lt;p&gt;用例模型根据用例描述系统的功能需求。它是系统预期功能（用例）及其环境（参与者）的模型。用例使您能够将您对系统的需求与系统如何满足这些需求联系起来。&lt;br /&gt;
将用例模型想象成一个菜单，就像您在餐厅中找到的菜单一样。通过查看菜单，您可以了解可供您选择的菜品、个别菜肴及其价格。您还知道餐厅供应哪种美食：意大利菜、墨西哥菜、中国菜等。通过查看菜单，您可以对该餐厅的用餐体验有一个整体印象。实际上，菜单 “模仿” 了餐厅的行为。&lt;br /&gt;
因为它是一种非常强大的计划工具，所以用例模型通常被所有团队成员用于开发周期的所有阶段。&lt;/p&gt;
&lt;h4 id=&#34;用例图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用例图示例&#34;&gt;#&lt;/a&gt; 用例图示例&lt;/h4&gt;
&lt;p&gt;有关用例图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXVzZS1jYXNlLWRpYWdyYW0v&#34;&gt;什么是用例图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986917-86def4ea-e0da-4a0f-9bf5-2055de2902ca.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ub212d624&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=324&amp;amp;originWidth=646&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6d11e160-23e7-479c-95d5-359e6532e0d&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是活动图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是活动图&#34;&gt;#&lt;/a&gt; 什么是活动图？&lt;/h2&gt;
&lt;p&gt;活动图是逐步活动和操作的工作流的图形表示，支持选择、迭代和并发。它描述了目标系统的控制流程，例如探索复杂的业务规则和操作，描述用例以及业务流程。在统一建模语言中，活动图旨在为计算和组织过程（即工作流）建模。&lt;/p&gt;
&lt;h4 id=&#34;活动图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#活动图示例&#34;&gt;#&lt;/a&gt; 活动图示例&lt;/h4&gt;
&lt;p&gt;有关活动图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWFjdGl2aXR5LWRpYWdyYW0v&#34;&gt;什么是活动图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819986978-ed540054-333e-4262-a5d4-7d731a4e1c39.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=uc2d675e7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=320&amp;amp;originWidth=527&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6abd986f-37db-49ba-b982-4a9bcc245a6&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是状态机图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是状态机图&#34;&gt;#&lt;/a&gt; 什么是状态机图？&lt;/h2&gt;
&lt;p&gt;状态图是 UML 中用于描述系统行为的一种图，它基于 David Harel 的状态图概念。状态图描述了允许的状态和转换以及影响这些转换的事件。它有助于可视化对象的整个生命周期，从而有助于更好地理解基于状态的系统。&lt;/p&gt;
&lt;h4 id=&#34;状态机图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#状态机图示例&#34;&gt;#&lt;/a&gt; 状态机图示例&lt;/h4&gt;
&lt;p&gt;有关状态机图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXN0YXRlLW1hY2hpbmUtZGlhZ3JhbS8=&#34;&gt;什么是状态机图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819987102-c9d9e973-17ef-4fd3-b2b5-6acaaffa062f.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=ud837e5c9&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=632&amp;amp;originWidth=791&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uba4bb92a-f53a-489a-a291-3044bf4c567&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是序列图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是序列图&#34;&gt;#&lt;/a&gt; 什么是序列图？&lt;/h2&gt;
&lt;p&gt;序列图基于时间序列对对象的协作进行建模。它显示了对象在用例的特定场景中如何与其他对象交互。借助先进的可视化建模能力，您只需点击几下即可创建复杂的序列图。此外，Visual Paradigm 等一些建模工具可以根据您在用例描述中定义的事件流生成序列图。&lt;/p&gt;
&lt;h4 id=&#34;序列图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列图示例&#34;&gt;#&lt;/a&gt; 序列图示例&lt;/h4&gt;
&lt;p&gt;有关序列图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXNlcXVlbmNlLWRpYWdyYW0v&#34;&gt;什么是序列图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819987718-a104b97d-708a-4d3a-b961-4e5bbe3963b1.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u28bd95bd&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=407&amp;amp;originWidth=745&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u682ccfec-e8a4-40e6-b53e-b43a1bfe6f9&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是通信图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是通信图&#34;&gt;#&lt;/a&gt; 什么是通信图？&lt;/h2&gt;
&lt;p&gt;与序列图类似，通信图也用于对用例的动态行为进行建模。与序列图相比，通信图更侧重于显示对象的协作而不是时间序列。它们实际上在语义上是等价的，因此某些建模工具（例如 Visual Paradigm）允许您从一个到另一个生成它。&lt;/p&gt;
&lt;h4 id=&#34;通信图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通信图示例&#34;&gt;#&lt;/a&gt; 通信图示例&lt;/h4&gt;
&lt;p&gt;有关通信图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWNvbW11bmljYXRpb24tZGlhZ3JhbS8=&#34;&gt;什么是通信图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819987750-8cc5d6f4-dc5c-4ace-bb36-37b70710d4a1.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u9019b08c&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=468&amp;amp;originWidth=861&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub2a0688d-0458-4c3d-824e-79bf2b1b74a&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是交互概览图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是交互概览图&#34;&gt;#&lt;/a&gt; 什么是交互概览图？&lt;/h2&gt;
&lt;p&gt;交互概览图侧重于交互控制流的概览。它是活动图的变体，其中节点是交互或交互发生。交互概览图描述了隐藏消息和生命线的交互。您可以链接 “真实” 图表并在交互概览图中实现图表之间的高度可导航性。&lt;/p&gt;
&lt;h4 id=&#34;交互概览图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#交互概览图示例&#34;&gt;#&lt;/a&gt; 交互概览图示例&lt;/h4&gt;
&lt;p&gt;有关交互概览图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLWludGVyYWN0aW9uLW92ZXJ2aWV3LWRpYWdyYW0v&#34;&gt;什么是交互概览图？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/360567/1644819987969-386d7a3e-525a-45ff-a9e6-2287921d8a7c.png#clientId=uca0445be-130f-4&amp;amp;crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;from=paste&amp;amp;id=u08a07eb7&amp;amp;margin=%5Bobject%20Object%5D&amp;amp;originHeight=610&amp;amp;originWidth=792&amp;amp;originalType=url%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ua24a932a-b4bf-4b20-9e76-28cb57b9ce8&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是时序图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是时序图&#34;&gt;#&lt;/a&gt; 什么是时序图？&lt;/h2&gt;
&lt;p&gt;时序图显示了对象在给定时间段内的行为。时序图是序列图的一种特殊形式。时序图和时序图的区别在于轴是颠倒的，时间从左到右增加，生命线显示在垂直排列的单独隔间中。&lt;/p&gt;
&lt;h4 id=&#34;时序图示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时序图示例&#34;&gt;#&lt;/a&gt; 时序图示例&lt;/h4&gt;
&lt;p&gt;有关时序图的更多详细信息，请阅读文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9ndWlkZS91bWwtdW5pZmllZC1tb2RlbGluZy1sYW5ndWFnZS93aGF0LWlzLXRpbWluZy1kaWFncmFtLw==&#34;&gt;什么是时序图？&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;学习-uml-绘制-uml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#学习-uml-绘制-uml&#34;&gt;#&lt;/a&gt; 学习 UML。绘制 UML。&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9kb3dubG9hZC9jb21tdW5pdHkuanNw&#34;&gt;免费下载&lt;/span&gt;&lt;br /&gt;
获取 Visual Paradigm 社区版，这是一个免费的 UML 工具，可以帮助您更快、更有效地学习 UML。Visual Paradigm Community Edition 支持所有 UML 图类型。它的 UML 建模器屡获殊荣，易于使用且直观。&lt;/p&gt;
&lt;h2 id=&#34;uml-词汇表和术语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uml-词汇表和术语&#34;&gt;#&lt;/a&gt; UML 词汇表和术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;抽象类&lt;/strong&gt; - 永远不会被实例化的类。这个类的实例永远不会存在。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参与者&lt;/strong&gt; - 启动系统所涉及的事件的对象或人。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;活动&lt;/strong&gt;：活动图中的步骤或动作。表示系统或演员采取的行动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;活动图&lt;/strong&gt;：一个美化的流程图，显示流程中的步骤和决策以及并行操作，例如算法或业务流程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聚合&lt;/strong&gt; - 是另一个类的一部分。在图表中包含类旁边显示有一个空心菱形。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Artifacts&lt;/strong&gt; - 描述设计过程中步骤输出的文档。描述是图形的、文本的或某种组合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关联&lt;/strong&gt; - 模型的两个元素之间的连接。这可能表示代码中的成员变量，或人事记录与其所代表的人之间的关联，或两类工人之间的关系，或任何类似的关系。默认情况下，关联中的两个元素是相等的，并且通过关联相互了解。一个关联也可以是一个可导航的关联，这意味着关联的源端知道目标端，但反之则不然。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关联类&lt;/strong&gt;：代表两个其他类之间的关联并向其添加信息的类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;属性&lt;/strong&gt; - 可用于引用其他对象或保存对象状态信息的对象的特征。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基类&lt;/strong&gt;：定义由子类通过泛化关系继承的属性和操作的类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分支&lt;/strong&gt;：活动图中的决策点。分支中出现多个转换，每个转换都有一个保护条件。当控制到达 Branch 时，恰好有一个 Guard Condition 为真；并且控制遵循相应的转换。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类&lt;/strong&gt;：类似对象的类别，都由相同的属性和操作描述，并且所有分配兼容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类图&lt;/strong&gt; - 显示系统类和它们之间的关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分类&lt;/strong&gt;器：具有属性和操作的 UML 元素。具体来说，Actors、Classes 和 Interfaces。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协作&lt;/strong&gt;：通信图中两个对象之间的关系，表明消息可以在对象之间来回传递。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通信图&lt;/strong&gt; - 显示操作如何完成的图表，同时强调对象的角色。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件&lt;/strong&gt;：系统内可部署的代码单元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件图&lt;/strong&gt;：显示各种组件和接口之间关系的图表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;概念&lt;/strong&gt; - 包含在领域模型中的名词或抽象概念。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建阶段&lt;/strong&gt; ——Rational Unified Process 的第三阶段，在此阶段，功能的多次迭代被构建到正在构建的系统中。这是主要工作完成的地方。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;依赖&lt;/strong&gt;关系：表示一个分类器知道另一个分类器的属性和操作，但不直接连接到第二个分类器的任何实例的关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部署图&lt;/strong&gt;：显示各种处理器之间关系的图表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域&lt;/strong&gt; - 系统所涉及的宇宙的一部分。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;细化阶段&lt;/strong&gt; - Rational Unified Process 的第二阶段，允许额外的项目计划，包括构建阶段的迭代。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元素&lt;/strong&gt;：出现在模型中的任何项目。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;封装&lt;/strong&gt; - 对象中的数据是私有的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;泛化&lt;/strong&gt; - 表示一个类是另一个类（超类）的子类。一个空心箭头指向超类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事件&lt;/strong&gt;：在状态图中，这表示导致系统采取行动或切换状态的信号或事件或输入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最终状态&lt;/strong&gt;：在状态图或活动图中，这表示图完成的点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt;：活动图中多个并行控制线程开始的点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;泛化&lt;/strong&gt;：一种继承关系，其中子类继承并添加到基类的属性和操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GoF&lt;/strong&gt; - 四组设计模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High Cohesion&lt;/strong&gt; - 一种 GRASP 评估模式，可确保类不太复杂，执行不相关的功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低耦合&lt;/strong&gt; - 一种 GRASP 评估模式，用于衡量一个类对另一个类的依赖程度或与另一个类的连接程度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;初始阶段&lt;/strong&gt; - Rational Unified Process 的第一个阶段，处理项目的最初概念化和开始。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;继承&lt;/strong&gt; —— 子类继承其父（超类）类的属性或特征。这些属性可以在子类中被覆盖。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;初始状态&lt;/strong&gt;：在状态图或活动图中，这表示图开始的点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实例&lt;/strong&gt; - 类被用作创建对象的模板。这个对象被称为类的一个实例。可以创建任意数量的类实例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接口&lt;/strong&gt;：定义形成行为契约的属性和操作的分类器。提供者类或组件可以选择实现接口（即实现其属性和操作）。然后，客户端类或组件可以依赖于接口，从而使用提供者，而不需要提供者的真实类的任何细节。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迭代&lt;/strong&gt; - 一个迷你项目部分，在此期间将一些小功能添加到项目中。包括分析、设计和编码的开发循环。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加入&lt;/strong&gt;：活动图中的一个点，多个并行控制线程同步并重新加入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成员&lt;/strong&gt;：分类器中的属性或操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合并&lt;/strong&gt;：活动图中不同控制路径汇集在一起的点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息&lt;/strong&gt; - 从一个对象到另一个对象的请求，要求接收消息的对象做某事。这基本上是对接收对象中的方法的调用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方法&lt;/strong&gt; - 对象中的函数或过程。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型&lt;/strong&gt; - 中央 UML 工件。由按包以层次结构排列的各种元素组成，以及元素之间的关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多重性&lt;/strong&gt; - 显示在域模型中并在概念框外表示，它表示对象数量与其他对象的分位数的关系。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可导航性&lt;/strong&gt;：指示关系的哪一端知道另一端。关系可以具有双向可导航性（每一端都知道另一端）或单向可导航性（一端知道另一端，但反之则不然）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notation&lt;/strong&gt; - 带有用于创建分析和设计方法的规则的图形文档。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt;：添加到图表中的文本注释以更详细地解释图表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对象&lt;/strong&gt; - 对象：在活动图中，从活动接收信息或向活动提供信息的对象。在协作图或序列图中，参与图中描述的场景的对象。通常：给定分类器（Actor、Class 或 Interface）的一个实例或示例。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;包&lt;/strong&gt; - 一组逻辑上应该组合在一起的 UML 元素。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;包图&lt;/strong&gt;：一个类图，其中所有元素都是包和依赖项。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式&lt;/strong&gt; - 用于确定交互对象的责任分配的解决方案。它是成功解决众所周知的常见问题的名称。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参数&lt;/strong&gt;：操作的参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多态性&lt;/strong&gt; - 相同的消息，不同的方法。也用作图案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Private&lt;/strong&gt;：应用于属性或操作的可见性级别，指示只有包含该成员的分类器的代码才能访问该成员。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;处理器&lt;/strong&gt;：在部署图中，这表示可以部署代码的计算机或其他可编程设备。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;受保护&lt;/strong&gt;：应用于属性或操作的可见性级别，指示只有包含该成员的分类器或其子类的代码才能访问该成员。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Public&lt;/strong&gt;：应用于属性或操作的可见性级别，表示任何代码都可以访问该成员。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阅读方向箭头&lt;/strong&gt; - 指示领域模型中关系的方向。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实现&lt;/strong&gt;：表示组件或类提供给定接口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;角色&lt;/strong&gt; - 在领域模型中使用，它是关于参与者角色的可选描述。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;序列图&lt;/strong&gt;：显示对象随时间存在的图表，以及随时间在这些对象之间传递以执行某些行为的消息。状态图 - 显示所有可能的对象状态的图。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态&lt;/strong&gt;：在状态图中，这表示系统或子系统的一种状态：它在某个时间点正在做什么，以及它的数据值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态图&lt;/strong&gt;：显示系统或子系统的状态、状态之间的转换以及导致转换的事件的图。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静态&lt;/strong&gt;：属性的修饰符，指示在分类器的所有实例之间共享的属性只有一个副本。操作的修饰符，表示该操作独立存在并且不对分类器的一个特定实例进行操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stereotype&lt;/strong&gt;：应用于模型元素的修饰符，表明它通常不能在 UML 中表达。本质上，Stereotypes 允许您定义自己的 UML “方言”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子类&lt;/strong&gt;：继承由子类通过泛化关系定义的属性和操作的类。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;泳道&lt;/strong&gt;：活动图的一个元素，指示系统或域的哪些部分执行特定的活动。Swimlane 中的所有活动都是由 Swimlane 表示的对象、组件或 Actor 的责任。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time Boxing&lt;/strong&gt; - 每次迭代都有一个带有特定目标的时间限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过渡&lt;/strong&gt;：在活动图中，表示从一个活动或分支或合并或分叉或连接到另一个的控制流。在状态图中，表示从一个状态到另一个状态的变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过渡阶段&lt;/strong&gt; - Rational Unified Process 的最后一个阶段，在此阶段用户接受培训以了解如何使用新系统，并且系统可供用户使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UML&lt;/strong&gt; - 统一建模语言利用文本和图形文档通过允许对象之间更紧密的关系来增强软件项目的分析和设计。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用例&lt;/strong&gt;：在用例图中，表示系统为响应来自参与者的某些请求而采取的行动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用例图&lt;/strong&gt;：显示参与者和用例之间关系的图表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可见性&lt;/strong&gt;：属性或操作的修饰符，指示哪些代码可以访问该成员。可见性级别包括公共、受保护和私有。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作流&lt;/strong&gt; - 一组产生特定结果的活动。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;流行的-uml-书籍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流行的-uml-书籍&#34;&gt;#&lt;/a&gt; 流行的 UML 书籍&lt;/h2&gt;
&lt;p&gt;下面列出了一些最畅销的 UML 书籍，您可以阅读这些书籍来学习 UML。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VTUwtRGlzdGlsbGVkLVN0YW5kYXJkLU1vZGVsaW5nLUxhbmd1YWdlL2RwLzAzMjExOTM2ODc=&#34;&gt;UML Distilled：标准对象建模语言简要指南&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VTUwtVW5pZmllZC1Qcm9jZXNzLVByYWN0aWNhbC1PYmplY3QtT3JpZW50ZWQvZHAvMDMyMTMyMTI3OA==&#34;&gt;UML 2 和统一过程：实用的面向对象分析和设计&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9MZWFybmluZy1VTUwtMi0wLVByYWdtYXRpYy1JbnRyb2R1Y3Rpb24vZHAvMDU5NjAwOTgyOA==&#34;&gt;学习 UML 2.0&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9CdWlsZGluZy1XZWItQXBwbGljYXRpb25zLVVNTC0ybmQvZHAvMDIwMTczMDM4My8=&#34;&gt;使用 UML 构建 Web 应用程序&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VbmlmaWVkLU1vZGVsaW5nLUxhbmd1YWdlLVJlZmVyZW5jZS1NYW51YWwvZHAvMDIwMTMwOTk4WC8=&#34;&gt;统一建模语言参考手册&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9FbGVtZW50cy1VTUxUTS0yLTAtU3R5bGUtZWJvb2svZHAvQjAwRTNVUjAxSy8=&#34;&gt;UML 2.0 风格的元素&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VTUwtSmF2YSVDMiVCRi1Qcm9ncmFtbWVycy1Sb2JlcnQtTWFydGluL2RwLzAxMzE0Mjg0ODkv&#34;&gt;面向 Java 程序员的 UML&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9TY2hhdW1zLU91dGxpbmUtVU1ML2RwLzAwNzcxMDc0MTEv&#34;&gt;Schaum 的 UML 大纲&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VbmlmaWVkLU1vZGVsaW5nLUxhbmd1YWdlLVVzZXItR3VpZGUvZHAvMDMyMTI2Nzk3NC8=&#34;&gt;统一建模语言用户指南&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VTUwtQ2VydGlmaWNhdGlvbi1HdWlkZS1GdW5kYW1lbnRhbC1JbnRlcm1lZGlhdGUvZHAvMDEyMzczNTg1OC8=&#34;&gt;UML 2 认证指南：基础和中级考试&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9GdW5kYW1lbnRhbHMtT2JqZWN0LU9yaWVudGVkLURlc2lnbi1NZWlsaXItUGFnZS1Kb25lcy9kcC8wMjAxNjk5NDZYLw==&#34;&gt;UML 中面向对象设计的基础&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9BcHBseWluZy1Ecml2ZW4tT2JqZWN0LU1vZGVsaW5nLUNvbW1lcmNlL2RwLzAyMDE3MzAzOTEv&#34;&gt;使用 UML 应用用例驱动的对象建模：一个带注释的电子商务示例&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9EZXNpZ25pbmctRmxleGlibGUtT2JqZWN0LU9yaWVudGVkLVN5c3RlbXMtVU1ML2RwLzE1Nzg3MDA5ODEv&#34;&gt;使用 UML 设计灵活的面向对象系统&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9Vc2UtQ2FzZS1Ecml2ZW4tT2JqZWN0LU1vZGVsaW5nL2RwLzE0MzAyNDMwNTgv&#34;&gt;使用 UML 的用例驱动对象建模&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9TeXN0ZW1zLUFuYWx5c2lzLURlc2lnbi1WZXJzaW9uLU9iamVjdC1PcmllbnRlZC9kcC8wNDcxMzQ4MDY2Lw==&#34;&gt;使用 UML 2.0 版进行系统分析和设计：一种面向对象的方法&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VTUwtMi0wLU51dHNoZWxsLURlc2t0b3AtUmVmZXJlbmNlL2RwLzA1OTYwMDc5NTcv&#34;&gt;简而言之 UML 2.0&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9PYmplY3QtT3JpZW50ZWQtQW5hbHlzaXMtRGVzaWduLUFwcGxpY2F0aW9ucy0zcmQvZHAvMDIwMTg5NTUxWC8=&#34;&gt;面向对象的分析和设计与应用程序&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9VTUwtRXhwbGFpbmVkLUtlbmRhbGwtU2NvdHQvZHAvMDIwMTcyMTgyMS8=&#34;&gt;UML 解释&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9EZXNpZ24tUGF0dGVybnMtRWxlbWVudHMtUmV1c2FibGUtT2JqZWN0LU9yaWVudGVkL2RwLzAyMDE2MzM2MTIv&#34;&gt;设计模式：可重用的面向对象软件的要素&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9PYmplY3QtUHJpbWVyLUFnaWxlLU1vZGVsLURyaXZlbi1EZXZlbG9wbWVudC1lYm9vay9kcC9CMDBBSFROMlU0Lw==&#34;&gt;对象入门：使用 UML 2.0 进行敏捷模型驱动开发&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;相关链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关链接&#34;&gt;#&lt;/a&gt; 相关链接&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmlzdWFsLXBhcmFkaWdtLmNvbS9mZWF0dXJlcy91bWwtdG9vbC8=&#34;&gt;用于可视化建模的专业 UML 设计工具&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;相关链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU3JUJCJTlGJUU0JUI4JTgwJUU1JUJCJUJBJUU2JUE4JUExJUU4JUFGJUFEJUU4JUE4JTgw&#34;&gt;wiki 统一建模语言&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E7%8E%B0%E4%BB%A3%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%AF%E6%8C%81%E7%9A%84%205%20%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%20Observer%20(1)/</guid>
            <title>现代浏览器支持的 5 种类型的 Observer (1)</title>
            <link>https://www.oocii.com/yuque/%E7%8E%B0%E4%BB%A3%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%AF%E6%8C%81%E7%9A%84%205%20%E7%A7%8D%E7%B1%BB%E5%9E%8B%E7%9A%84%20Observer%20(1)/</link>
            <category term="Web APIs" scheme="https://www.oocii.com/categories/Web-APIs/" />
            <category term="web api" scheme="https://www.oocii.com/tags/web-api/" />
            <category term="observer" scheme="https://www.oocii.com/tags/observer/" />
            <pubDate>Sat, 17 Mar 2018 19:51:18 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;什么是观察者？&lt;/strong&gt;&lt;br /&gt;
在深入了解现代浏览器支持的观察者系列之前，让我们先了解一般的观察者是什么？&lt;br /&gt;
观察者是一个观察或注意到某事的程序。观察者有助于观察浏览器中发生的某些活动并做出相应的响应。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;我们经常处理用 addEventListener 来添加事件监听用户的各种操作，比如：click, mousedown, drag, wheel 等（完整事件列表参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvRXZlbnRz&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/Events&lt;/span&gt;） 。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;现代浏览器提供了 5 种 Observer ，使用这些 Observer ，我们可以观察浏览器中发生的不同类型的活动，并采取必要的行动。例如。我们可以观察到，视频是否显示在视口中并启用自动播放，是否已从父 DOM 元素中添加或删除子元素，是否更改了框元素的大小 / 尺寸等等。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下是现代浏览器支持的五种不同类型的 Observer 。&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Intersection Observer&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mutation Observer&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Performance Observer&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resize Observer&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ReportingObserver&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Intersection Observer(&lt;/strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbk9ic2VydmVy&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver&lt;/span&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于&lt;strong&gt;观察两个 html DOM 元素之间的交集&lt;/strong&gt;。当元素进入或离开可见视口时，观察 DOM 中的元素很有用。Intersection Observer 的一些用例描述如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当元素在视口中可见时&lt;strong&gt;延迟加载图像或其他资源。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;识别&lt;strong&gt;广告的可见性并计算广告收入&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;当用户向下滚动页面时实现 **“无限滚动”** 网站，这样他们就不必浏览不同的页面。&lt;/li&gt;
&lt;li&gt;当元素在视口内时加载和&lt;strong&gt;自动播放视频或动画。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** 浏览器支持：** 目前，firefox 和 chrome 支持 Intersection 观察器，但我们可以为旧浏览器找到 polyfill&lt;br /&gt;
&lt;img data-src=&#34;https://miro.medium.com/max/700/1*rs0jomrks9F2nyrZtLt--Q.png#crop=0&amp;amp;crop=0&amp;amp;crop=1&amp;amp;crop=1&amp;amp;id=QYLY3&amp;amp;originHeight=328&amp;amp;originWidth=700&amp;amp;originalType=binary%E2%88%B6=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;status=done&amp;amp;style=none&amp;amp;title=&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;使用 IntersectionObserver api 主要需要三个步骤&lt;br /&gt;
 a) 定义回调处理程序&lt;br /&gt;
 b) 创建观察者&lt;br /&gt;
 c) 定义要观察的目标对象&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;a) 定义回调处理程序&lt;/strong&gt;&lt;br /&gt;
这是当人们注意到警报时做出的响应，因为通常发生了一些事情。每当目标元素与根元素通过阈值相交时，就会触发回调处理程序。&lt;br /&gt;
&lt;strong&gt;​&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;const &lt;strong&gt;&lt;em&gt;&lt;strong&gt;observer&lt;/strong&gt;&lt;/em&gt;&lt;/strong&gt; = new IntersectionObserver(&lt;/strong&gt;&lt;em&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;[, &lt;strong&gt;&lt;em&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/em&gt;&lt;/strong&gt;]);&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;​&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;br /&gt;
 当元素可见比例超过指定阈值后，会调用一个回调函数，此回调函数接受两个参数：&lt;br /&gt;
&lt;strong&gt;entries&lt;/strong&gt;&lt;br /&gt;
 一个&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbk9ic2VydmVyRW50cnk=&#34;&gt; IntersectionObserverEntry&lt;/span&gt; 对象的数组，每个被触发的阈值，都或多或少与指定阈值有偏差。&lt;br /&gt;
&lt;strong&gt;observer&lt;/strong&gt;&lt;br /&gt;
 被调用的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbk9ic2VydmVy&#34;&gt; IntersectionObserver&lt;/span&gt; 实例。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//entries 一个 IntersectionObserverEntry 对象的数组，每个被触发的阈值，都或多或少与指定阈值有偏差。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserverEntry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;entries&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; observer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  entries&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// Each entry describes an intersection change for one observed target element.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.boundingClientRect&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.intersectionRatio&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.intersectionRect&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.isIntersecting&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.rootBounds&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.target&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// entry.time&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbk9ic2VydmVyL0ludGVyc2VjdGlvbk9ic2VydmVy&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver/IntersectionObserver&lt;/span&gt;&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;b)** 创建观察者&lt;br /&gt;
 ** 只需调用构造函数&lt;em&gt; IntersectionObserver&lt;/em&gt; 并传递处理函数和配置选项即可创建。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;const &lt;strong&gt;&lt;em&gt;&lt;strong&gt;observer&lt;/strong&gt;&lt;/em&gt;&lt;/strong&gt; = new IntersectionObserver(&lt;/strong&gt;&lt;em&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;[, &lt;strong&gt;&lt;em&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/em&gt;&lt;/strong&gt;]);&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;​&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;options 可选&lt;/strong&gt;&lt;br /&gt;
一个可以用来配置 observer 实例的对象。如果 options 未指定，observer 实例默认使用文档视口作为 root，并且没有 margin，阈值为 0%（意味着即使一像素的改变都会触发回调函数）。你可以指定以下配置：&lt;br /&gt;
&lt;strong&gt;root&lt;/strong&gt;&lt;br /&gt;
 监听元素的祖先元素&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0VsZW1lbnQ=&#34;&gt; Element&lt;/span&gt; 对象，其边界盒将被视作视口。目标在根的可见区域的的任何不可见部分都会被视为不可见。&lt;br /&gt;
&lt;strong&gt;rootMargin&lt;/strong&gt;&lt;br /&gt;
 一个在计算交叉值时添加至根的边界盒 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9HbG9zc2FyeS9ib3VuZGluZ19ib3g=&#34;&gt;bounding_box(en-US)&lt;/span&gt;) 中的一组偏移量，类型为字符串 (string) ，可以有效的缩小或扩大根的判定范围从而满足计算需要。语法大致和 CSS 中的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQ1NTL21hcmdpbg==&#34;&gt; margin&lt;/span&gt; 属性等同；可以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEkjdGhlX3Jvb3RfZWxlbWVudF9hbmRfcm9vdF9tYXJnaW4=&#34;&gt;The root element and root margin&lt;/span&gt; in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEk=&#34;&gt;Intersection Observer API&lt;/span&gt; 来深入了解 margin 的工作原理及其语法。默认值是 &amp;quot;0px 0px 0px 0px&amp;quot;。&lt;br /&gt;
&lt;strong&gt;threshold&lt;/strong&gt;&lt;br /&gt;
 规定了一个监听目标与边界盒交叉区域的比例值，可以是一个具体的数值或是一组 0.0 到 1.0 之间的数组。若指定值为 0.0，则意味着监听元素即使与根有 1 像素交叉，此元素也会被视为可见。若指定值为 1.0，则意味着整个元素都在可见范围内时才算可见。可以参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEkjdGhyZXNob2xkcw==&#34;&gt; Thresholds&lt;/span&gt; in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEk=&#34;&gt;Intersection Observer API&lt;/span&gt; 来深入了解阈值是如何使用的。阈值的默认值为 0.0。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; options &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   root&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;.scrollContainer&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   rootMargin&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; ‘&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;px’&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   threshold&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; observer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IntersectionObserver&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;handler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; options&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbk9ic2VydmVyL0ludGVyc2VjdGlvbk9ic2VydmVy&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver/IntersectionObserver&lt;/span&gt;&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;[0.3] 的阈值意味着，当目标元素在根元素指定的元素内有 30% 可见时，调用处理函数。这意味着只要元素可见 30%、50%、80% 和 100%，就会调用处理程序 / 回调函数。&lt;br /&gt;
​&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c) 定义要观察的目标对象&lt;/strong&gt;&lt;br /&gt;
我们可以定义多个要观察的目标对象。如前例所述，狗在提醒所有人之前应该知道要观察什么。** 只需调用相应观察者的.observe (target)** 方法&lt;br /&gt;
即可观察任何目标元素。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; target &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;“&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;targetBox”&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;observer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;observe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbk9ic2VydmVyL29ic2VydmU=&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver/observe&lt;/span&gt;&lt;br /&gt;
​&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/git%20log%20%E5%AF%BC%E5%87%BA%E4%B8%BAcsv%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E5%92%8C%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</guid>
            <title>git log 导出为csv格式文件和常用参数</title>
            <link>https://www.oocii.com/yuque/git%20log%20%E5%AF%BC%E5%87%BA%E4%B8%BAcsv%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6%E5%92%8C%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</link>
            <category term="Git" scheme="https://www.oocii.com/categories/Git/" />
            <category term="git log" scheme="https://www.oocii.com/tags/git-log/" />
            <category term="pretty" scheme="https://www.oocii.com/tags/pretty/" />
            <pubDate>Sun, 23 Jul 2017 20:10:20 +0800</pubDate>
            <description><![CDATA[ &lt;ul&gt;
&lt;li&gt;**git log ** &lt;strong&gt;--author=Axon --after=2017/1/1 --before=2018/1/1 --pretty=format:&#39;&amp;quot;%an&amp;quot;,&amp;quot;%ad&amp;quot;,&amp;quot;%s&amp;quot;&#39; &amp;gt;git-log.csv&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用的格式占位符写法及其代表的意义。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-n 仅显示最近的 n 条提交&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--since, --after 仅显示指定时间之后的提交。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--until, --before 仅显示指定时间之前的提交。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--author 仅显示指定作者相关的提交。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--committer 仅显示指定提交者相关的提交。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-p 按补丁格式显示每个更新之间的差异。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--stat 显示每次更新的文件修改统计信息。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--shortstat 只显示 --stat 中最后的行数修改添加移除统计。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--name-only 仅在提交信息后显示已修改的文件清单。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--name-status 显示新增、修改、删除的文件清单。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt; 个字符。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;--graph 显示 ASCII 图形表示的分支合并历史。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 查看该文件每次提交记录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log -p &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 查看每次详细修改内容的 diff&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log -p -2 &lt;span class=&#34;token comment&#34;&gt;# 查看最近两次详细修改内容的 diff&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; log --stat &lt;span class=&#34;token comment&#34;&gt;#查看提交统计信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;--pretty&lt;/strong&gt; 选项 说明:&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;-&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;pretty 使用其他格式显示历史提交信息。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;可用的选项包括 oneline，short，full，fuller:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=oneline &lt;span class=&#34;token comment&#34;&gt;#（下同）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;hash&gt; &amp;lt;title&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;line&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;This is designed to be as compact as possible&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=short&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;commit &amp;lt;hash&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Author: &amp;lt;author&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;title&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;line&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=medium&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;commit &amp;lt;hash&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Author: &amp;lt;author&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Date:   &amp;lt;author&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;date&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;title&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;line&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;full&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;commit&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;message&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=full&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;commit &amp;lt;hash&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Author: &amp;lt;author&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Commit: &amp;lt;committer&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;title&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;line&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;full&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;commit&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;message&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=fuller&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;commit &amp;lt;hash&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Author:     &amp;lt;author&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;AuthorDate: &amp;lt;author&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;date&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Commit:     &amp;lt;committer&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;CommitDate: &amp;lt;committer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;date&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;title&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;line&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;full&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;commit&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;message&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=reference&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;abbrev&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;hash&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&amp;lt;title&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;line&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &amp;lt;short&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;author&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;date&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;pretty=format:&lt;span class=&#34;token string&#34;&gt;&#39;&#34;%h&#34;,&#34;%an&#34;,&#34;%ad&#34;,&#34;%s&#34;&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#（后跟指定格式）:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;an 作者（author）的名字&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;ae 作者的电子邮件地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;ad 作者修订日期（可以用 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;date= 选项定制格式）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;ar 作者修订日期，按多久以前的方式显示&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;cn 提交者&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;committer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;的名字&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;ce 提交者的电子邮件地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;cd 提交日期&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;cr 提交日期，按多久以前的方式显示&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;s 提交说明&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;H 提交（commit）的完整哈希字串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;h 提交的简短哈希字串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;T 树（tree）的完整哈希字串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;t 树的简短哈希字串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;P 父对象（parent）的完整哈希字串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;p 父对象的简短哈希字串&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;参考资料：&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXQtc2NtLmNvbS9kb2NzL3ByZXR0eS1mb3JtYXRz&#34;&gt;https://git-scm.com/docs/pretty-formats&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/</guid>
            <title>flex布局子元素撑开父元素问题</title>
            <link>https://www.oocii.com/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/</link>
            <category term="CSS" scheme="https://www.oocii.com/categories/CSS/" />
            <category term="CSS" scheme="https://www.oocii.com/tags/CSS/" />
            <category term="flex" scheme="https://www.oocii.com/tags/flex/" />
            <category term="flex-shrink" scheme="https://www.oocii.com/tags/flex-shrink/" />
            <pubDate>Tue, 23 May 2017 20:08:12 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;用 flex 布局时遇到一个问题，原本想让 flex 子元素平均宽度显示，却因为子元素里面的内容宽度把其中一个子元素宽度撑开导致宽度不一致。先看代码：&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 500px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 2px solid orange&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;white-space&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;flex-box&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;普通文本&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;超长不换行的文本，超长不换行的文本，超长不换行的文本，超长不换行的文本，超长不换行的文本。&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;期望得到以下的效果：&lt;br /&gt;
&lt;img data-src=&#34;/images/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/p1.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但实际的效果却是下面这样，无法达到两列宽度平均的效果：&lt;br /&gt;
&lt;img data-src=&#34;/images/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/p2.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查了一下资料，发现了原因， W3C 规范定义：&lt;br /&gt;
To provide a more reasonable default minimum size for flex items, the used value of a main axis automatic minimum size on a flex item that is not a scroll container is a content-based minimum size; for scroll containers the automatic minimum size is zero, as usual.&lt;/p&gt;
&lt;p&gt;浏览器默认为 flex item 设置了 &amp;quot;min-width: auto;min-height: auto&amp;quot;, 即 flex 子元素的最小宽度高度不能小于其内容的宽度高度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过设置 min-width: 0;&lt;/strong&gt;, 覆盖掉这个默认设置，flex-shrink 属性就能生效了:&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 500px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;min-width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; // 新增行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;white-space&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;效果就正常了（由于业务需要有些地方不能用 overflow: hidden;）：&lt;img data-src=&#34;/images/default/flex%E5%B8%83%E5%B1%80%E5%AD%90%E5%85%83%E7%B4%A0%E6%92%91%E5%BC%80%E7%88%B6%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/p3.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但也有一种情况就是即使设置了 min-width: 0， flex-shrink 也不起作用，原因是多层嵌套 flex, 需要把最外层的 flex item 也设置 min-width: 0; 才能起作用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后发现有一种简单粗暴的方法，就是直接设置 flex item &lt;strong&gt;设置：width: 0;&lt;/strong&gt; 不受多层嵌套 flex 的影响。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 500px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 10px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; // 新增修改行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1px solid black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.flex-box div p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;white-space&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;hr /&gt;
&lt;p&gt;参考资料：&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzYyNDcxNDAvd2h5LWRvbnQtZmxleC1pdGVtcy1zaHJpbmstcGFzdC1jb250ZW50LXNpemU/YW5zd2VydGFiPXZvdGVzI3RhYi10b3A=&#34;&gt;https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size?answertab=votes#tab-top&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1mbGV4Ym94LTEvI21pbi1zaXplLWF1dG8=&#34;&gt;https://www.w3.org/TR/css-flexbox-1/#min-size-auto&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTc0MzU2NjgyNTc0OTIxNzY1I2NvbW1lbnQ=&#34;&gt;https://juejin.cn/post/6974356682574921765#comment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/yuque/%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%20Git%20%E7%9A%84%20!fatal!%20refusing%20to%20merge%20unrelated%20histories/</guid>
            <title>怎么解决 Git 的 fatal: refusing to merge unrelated histories</title>
            <link>https://www.oocii.com/yuque/%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%20Git%20%E7%9A%84%20!fatal!%20refusing%20to%20merge%20unrelated%20histories/</link>
            <category term="Git" scheme="https://www.oocii.com/categories/Git/" />
            <category term="git" scheme="https://www.oocii.com/tags/git/" />
            <category term="fatal" scheme="https://www.oocii.com/tags/fatal/" />
            <pubDate>Sun, 14 May 2017 20:50:33 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;使用 Git 一段时间后，你会注意到有很多难以修复的错误。 &amp;quot;fatal: refusing to merge unrelated histories&amp;quot;。与许多其他错误不同，此问题有一个解决方案，你可以在遇到它时重复使用。&lt;br /&gt;
先说解决方法：&lt;br /&gt;
&lt;strong&gt;git pull origin master --allow-unrelated-histories&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;但为什么会发生错误呢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#但为什么会发生错误呢&#34;&gt;#&lt;/a&gt; 但为什么会发生错误呢？&lt;/h2&gt;
&lt;p&gt;Git 提示 &amp;quot;fatal: refusing to merge unrelated histories&amp;quot; 是当两个不相关的项目合并到一个分支中时会发生错误。出现此错误是因为每个项目都有自己的提交和标签历史。这两种历史将互不相容。&lt;/p&gt;
&lt;p&gt;出现此错误的主要情况有两种。&lt;/p&gt;
&lt;p&gt;当你创建一个新的存储库、进行一些提交并尝试从另一个远程存储库中提取时，可能会发生此错误。将显示此错误，因为你正在使用的本地存储库将具有与你尝试检索的项目不同的历史记录。&lt;/p&gt;
&lt;p&gt;如果项目中的 .git 目录已被删除或损坏，你可能会遇到此错误。在这种情况下，Git 命令行可能无法读取你本地项目的历史记录。&lt;/p&gt;
&lt;p&gt;当你尝试将数据推送到远程存储库或从远程存储库提取数据时，将发生此错误。这是因为 Git 不知道远程存储库是否与你当前的存储库兼容。&lt;/p&gt;
&lt;h2 id=&#34;如何解决-fatal-refusing-to-merge-unrelated-histories&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何解决-fatal-refusing-to-merge-unrelated-histories&#34;&gt;#&lt;/a&gt; 如何解决 &amp;quot;fatal: refusing to merge unrelated histories&amp;quot; ?&lt;/h2&gt;
&lt;p&gt;要解决此问题，你可以在 --allow-unrelated-histories 从存储库中提取数据时使用该标志：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jYXJlZXJrYXJtYS5jb20vYmxvZy9lcnJvci1naXQtcHVsbC1ub3QtcG9zc2libGUv&#34;&gt;» 更多： Git 错误：无法拉取...&lt;/span&gt;&lt;br /&gt;
git pull origin master --allow-unrelated-histories&lt;/p&gt;
&lt;p&gt;就可以将远程 master 分支拉取合并到本地分支。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jYXJlZXJrYXJtYS5jb20vYmxvZy9naXQtY2xvbmU=&#34;&gt;或者，你可以使用 git clone 克隆&lt;/span&gt;远程存储库的新版本并重新开始。但是通常不需要这样做。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dpdC9naXQvYmxvYi9tYXN0ZXIvRG9jdW1lbnRhdGlvbi9SZWxOb3Rlcy8yLjkuMC50eHQjTDU4LUw2OA==&#34;&gt;你可以在官方 Git 文档&lt;/span&gt;中阅读更多关于 --allow-unrelated-histories 标志的信息。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结论&#34;&gt;#&lt;/a&gt; 结论&lt;/h2&gt;
&lt;p&gt;&amp;quot;fatal: refusing to merge unrelated histories&amp;quot; 发生在 .git 目录不可读或尝试从具有自己的提交历史的存储库中提取数据时。这个错误告诉你，你正在尝试将两个不相关的项目合并到同一个工作树。&lt;/p&gt;
&lt;p&gt;你可以很容易使用 --allow-unrelated-histories 标志来解决此错误！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.oocii.com/default/Blob%20%E5%92%8C%20ArrayBuffer%20%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2/</guid>
            <title>Blob 和 ArrayBuffer 之间转换</title>
            <link>https://www.oocii.com/default/Blob%20%E5%92%8C%20ArrayBuffer%20%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2/</link>
            <category term="二进制数据" scheme="https://www.oocii.com/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E6%8D%AE/" />
            <category term="blob" scheme="https://www.oocii.com/tags/blob/" />
            <category term="arrayBuffer" scheme="https://www.oocii.com/tags/arrayBuffer/" />
            <category term="binary data" scheme="https://www.oocii.com/tags/binary-data/" />
            <category term="converting" scheme="https://www.oocii.com/tags/converting/" />
            <pubDate>Fri, 27 Jan 2017 19:44:14 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;JavaScript 有两种主要的方式来表示浏览器中的二进制数据。ArrayBuffers/TypedArrays 包含可以直接操作的可变（尽管仍然是固定长度）二进制数据。Blob 包含只能通过异步文件接口访问的不可变二进制数据。&lt;/p&gt;
&lt;h3 id=&#34;将-blob-转换为-arraybuffer异步方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将-blob-转换为-arraybuffer异步方式&#34;&gt;#&lt;/a&gt; 将 Blob 转换为 ArrayBuffer（异步方式）&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; blob &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\x01\x02\x03\x04&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  fileReader &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FileReader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  array&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fileReader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onload&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  array &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Array contains&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;byteLength&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;bytes.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fileReader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readAsArrayBuffer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blob&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;6&lt;/p&gt;
&lt;h3 id=&#34;使用-promise-将-blob-转换为-arraybuffer异步方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-promise-将-blob-转换为-arraybuffer异步方式&#34;&gt;#&lt;/a&gt; 使用 Promise 将 Blob 转换为 ArrayBuffer（异步方式）&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; blob &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;\x01\x02\x03\x04&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; arrayPromise &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; reader &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FileReader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  reader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onloadend&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;resolve&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  reader&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readAsArrayBuffer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;blob&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arrayPromise&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Array contains&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;byteLength&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;bytes.&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;将-arraybuffer-或-typedarray-转换为-blob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将-arraybuffer-或-typedarray-转换为-blob&#34;&gt;#&lt;/a&gt; 将 ArrayBuffer 或 TypedArray 转换为 Blob&lt;/h3&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; array &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Uint8Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x04&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x06&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x07&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x08&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; blob &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Blob&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;参考：&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0Jsb2I=&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/API/Blob&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXlCdWZmZXI=&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lczYucnVhbnlpZmVuZy5jb20vI2RvY3MvYXJyYXlidWZmZXIjQXJyYXlCdWZmZXItJUU1JUFGJUI5JUU4JUIxJUEx&#34;&gt;https://es6.ruanyifeng.com/#docs/arraybuffer#ArrayBuffer-%E5%AF%B9%E8%B1%A1&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
